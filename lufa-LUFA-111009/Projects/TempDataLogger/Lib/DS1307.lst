   1               		.file	"DS1307.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.DS1307_SetTimeDate,"ax",@progbits
  12               	.global	DS1307_SetTimeDate
  14               	DS1307_SetTimeDate:
  15               	.LFB20:
  16               		.file 1 "Lib/DS1307.c"
   1:Lib/DS1307.c  **** /*
   2:Lib/DS1307.c  ****      Copyright (C) Dean Camera, 2011.
   3:Lib/DS1307.c  **** 
   4:Lib/DS1307.c  ****   dean [at] fourwalledcubicle [dot] com
   5:Lib/DS1307.c  ****            www.lufa-lib.org
   6:Lib/DS1307.c  **** */
   7:Lib/DS1307.c  **** 
   8:Lib/DS1307.c  **** #include "DS1307.h"
   9:Lib/DS1307.c  **** 
  10:Lib/DS1307.c  **** bool DS1307_SetTimeDate(const TimeDate_t* NewTimeDate)
  11:Lib/DS1307.c  **** {
  17               		.loc 1 11 0
  18               		.cfi_startproc
  19               	.LVL0:
  20 0000 EF92      		push r14
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 14, -2
  24 0002 0F93      		push r16
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 16, -3
  28 0004 1F93      		push r17
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 17, -4
  32 0006 CF93      		push r28
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 28, -5
  36 0008 DF93      		push r29
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 29, -6
  40 000a CDB7      		in r28,__SP_L__
  41 000c DEB7      		in r29,__SP_H__
  42               	.LCFI5:
  43               		.cfi_def_cfa_register 28
  44 000e 2897      		sbiw r28,8
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 15
  47 0010 0FB6      		in __tmp_reg__,__SREG__
  48 0012 F894      		cli
  49 0014 DEBF      		out __SP_H__,r29
  50 0016 0FBE      		out __SREG__,__tmp_reg__
  51 0018 CDBF      		out __SP_L__,r28
  52               	/* prologue: function */
  53               	/* frame size = 8 */
  54               	/* stack size = 13 */
  55               	.L__stack_usage = 13
  56 001a FC01      		movw r30,r24
  12:Lib/DS1307.c  **** #if defined(DUMMY_RTC)
  13:Lib/DS1307.c  **** 	return true;
  14:Lib/DS1307.c  **** #endif
  15:Lib/DS1307.c  **** 
  16:Lib/DS1307.c  **** 	DS1307_DateTimeRegs_t NewRegValues;
  17:Lib/DS1307.c  **** 	const uint8_t         WriteAddress = 0;
  57               		.loc 1 17 0
  58 001c 1886      		std Y+8,__zero_reg__
  18:Lib/DS1307.c  **** 
  19:Lib/DS1307.c  **** 	// Convert new time data to the DS1307's time register layout
  20:Lib/DS1307.c  **** 	NewRegValues.Byte1.Fields.TenSec    = (NewTimeDate->Second / 10);
  59               		.loc 1 20 0
  60 001e 8281      		ldd r24,Z+2
  61               	.LVL1:
  62 0020 3AE0      		ldi r19,lo8(10)
  63 0022 632F      		mov r22,r19
  64 0024 0E94 0000 		call __udivmodqi4
  65 0028 8770      		andi r24,lo8(7)
  66 002a 282F      		mov r18,r24
  67 002c 2295      		swap r18
  68 002e 207F      		andi r18,lo8(-16)
  69 0030 8981      		ldd r24,Y+1
  70 0032 8078      		andi r24,lo8(-128)
  21:Lib/DS1307.c  **** 	NewRegValues.Byte1.Fields.Sec       = (NewTimeDate->Second % 10);
  71               		.loc 1 21 0
  72 0034 822B      		or r24,r18
  22:Lib/DS1307.c  **** 	NewRegValues.Byte1.Fields.CH        = false;
  73               		.loc 1 22 0
  74 0036 892B      		or r24,r25
  75 0038 8F77      		andi r24,lo8(~(1<<7))
  76 003a 8983      		std Y+1,r24
  23:Lib/DS1307.c  **** 	NewRegValues.Byte2.Fields.TenMin    = (NewTimeDate->Minute / 10);
  77               		.loc 1 23 0
  78 003c 8181      		ldd r24,Z+1
  79 003e 0E94 0000 		call __udivmodqi4
  80 0042 8770      		andi r24,lo8(7)
  81 0044 282F      		mov r18,r24
  82 0046 2295      		swap r18
  83 0048 207F      		andi r18,lo8(-16)
  84 004a 8A81      		ldd r24,Y+2
  85 004c 8078      		andi r24,lo8(-128)
  24:Lib/DS1307.c  **** 	NewRegValues.Byte2.Fields.Min       = (NewTimeDate->Minute % 10);
  86               		.loc 1 24 0
  87 004e 822B      		or r24,r18
  88 0050 892B      		or r24,r25
  89 0052 8A83      		std Y+2,r24
  25:Lib/DS1307.c  **** 	NewRegValues.Byte3.Fields.TenHour   = (NewTimeDate->Hour / 10);
  90               		.loc 1 25 0
  91 0054 8081      		ld r24,Z
  92 0056 0E94 0000 		call __udivmodqi4
  93 005a 8370      		andi r24,lo8(3)
  94 005c 282F      		mov r18,r24
  95 005e 2295      		swap r18
  96 0060 207F      		andi r18,lo8(-16)
  97 0062 8B81      		ldd r24,Y+3
  98 0064 807C      		andi r24,lo8(-64)
  26:Lib/DS1307.c  **** 	NewRegValues.Byte3.Fields.Hour      = (NewTimeDate->Hour % 10);
  99               		.loc 1 26 0
 100 0066 822B      		or r24,r18
  27:Lib/DS1307.c  **** 	NewRegValues.Byte3.Fields.TwelveHourMode = false;
 101               		.loc 1 27 0
 102 0068 892B      		or r24,r25
 103 006a 8F7B      		andi r24,lo8(~(1<<6))
 104 006c 8B83      		std Y+3,r24
  28:Lib/DS1307.c  **** 
  29:Lib/DS1307.c  **** 	// Convert new date data to the DS1307's date register layout
  30:Lib/DS1307.c  **** 	NewRegValues.Byte4.Fields.DayOfWeek = 0;
 105               		.loc 1 30 0
 106 006e 8C81      		ldd r24,Y+4
 107 0070 887F      		andi r24,lo8(-8)
 108 0072 8C83      		std Y+4,r24
  31:Lib/DS1307.c  **** 	NewRegValues.Byte5.Fields.TenDay    = (NewTimeDate->Day / 10);
 109               		.loc 1 31 0
 110 0074 8381      		ldd r24,Z+3
 111 0076 0E94 0000 		call __udivmodqi4
 112 007a 8370      		andi r24,lo8(3)
 113 007c 282F      		mov r18,r24
 114 007e 2295      		swap r18
 115 0080 207F      		andi r18,lo8(-16)
 116 0082 8D81      		ldd r24,Y+5
 117 0084 807C      		andi r24,lo8(-64)
  32:Lib/DS1307.c  **** 	NewRegValues.Byte5.Fields.Day       = (NewTimeDate->Day % 10);
 118               		.loc 1 32 0
 119 0086 822B      		or r24,r18
 120 0088 892B      		or r24,r25
 121 008a 8D83      		std Y+5,r24
  33:Lib/DS1307.c  **** 	NewRegValues.Byte6.Fields.TenMonth  = (NewTimeDate->Month / 10);
 122               		.loc 1 33 0
 123 008c 8481      		ldd r24,Z+4
 124 008e 0E94 0000 		call __udivmodqi4
 125 0092 2E81      		ldd r18,Y+6
 126 0094 80FB      		bst r24,0
 127 0096 24F9      		bld r18,4
  34:Lib/DS1307.c  **** 	NewRegValues.Byte6.Fields.Month     = (NewTimeDate->Month % 10);
 128               		.loc 1 34 0
 129 0098 207F      		andi r18,lo8(-16)
 130 009a 292B      		or r18,r25
 131 009c 2E83      		std Y+6,r18
  35:Lib/DS1307.c  **** 	NewRegValues.Byte7.Fields.TenYear   = (NewTimeDate->Year / 10);
 132               		.loc 1 35 0
 133 009e 8581      		ldd r24,Z+5
 134 00a0 0E94 0000 		call __udivmodqi4
  36:Lib/DS1307.c  **** 	NewRegValues.Byte7.Fields.Year      = (NewTimeDate->Year % 10);
 135               		.loc 1 36 0
 136 00a4 8295      		swap r24
 137 00a6 807F      		andi r24,lo8(-16)
 138 00a8 982B      		or r25,r24
 139 00aa 9F83      		std Y+7,r25
  37:Lib/DS1307.c  **** 	
  38:Lib/DS1307.c  **** 	// Write the new Time and Date into the DS1307
  39:Lib/DS1307.c  **** 	if (TWI_WritePacket(DS1307_ADDRESS, 10, &WriteAddress, sizeof(WriteAddress),
 140               		.loc 1 39 0
 141 00ac 87E0      		ldi r24,lo8(7)
 142 00ae E82E      		mov r14,r24
 143 00b0 8E01      		movw r16,r28
 144 00b2 0F5F      		subi r16,-1
 145 00b4 1F4F      		sbci r17,-1
 146 00b6 21E0      		ldi r18,lo8(1)
 147 00b8 AE01      		movw r20,r28
 148 00ba 485F      		subi r20,-8
 149 00bc 5F4F      		sbci r21,-1
 150 00be 80ED      		ldi r24,lo8(-48)
 151 00c0 0E94 0000 		call TWI_WritePacket
 152               	.LVL2:
 153 00c4 91E0      		ldi r25,lo8(1)
 154 00c6 8111      		cpse r24,__zero_reg__
 155 00c8 90E0      		ldi r25,0
 156               	.L2:
  40:Lib/DS1307.c  **** 	                   (uint8_t*)&NewRegValues, sizeof(DS1307_DateTimeRegs_t)) != TWI_ERROR_NoError)
  41:Lib/DS1307.c  **** 	{
  42:Lib/DS1307.c  **** 		return false;
  43:Lib/DS1307.c  **** 	}
  44:Lib/DS1307.c  **** 
  45:Lib/DS1307.c  **** 	return true;
  46:Lib/DS1307.c  **** }
 157               		.loc 1 46 0
 158 00ca 892F      		mov r24,r25
 159               	/* epilogue start */
 160 00cc 2896      		adiw r28,8
 161 00ce 0FB6      		in __tmp_reg__,__SREG__
 162 00d0 F894      		cli
 163 00d2 DEBF      		out __SP_H__,r29
 164 00d4 0FBE      		out __SREG__,__tmp_reg__
 165 00d6 CDBF      		out __SP_L__,r28
 166 00d8 DF91      		pop r29
 167 00da CF91      		pop r28
 168 00dc 1F91      		pop r17
 169 00de 0F91      		pop r16
 170 00e0 EF90      		pop r14
 171 00e2 0895      		ret
 172               		.cfi_endproc
 173               	.LFE20:
 175               		.section	.text.DS1307_GetTimeDate,"ax",@progbits
 176               	.global	DS1307_GetTimeDate
 178               	DS1307_GetTimeDate:
 179               	.LFB21:
  47:Lib/DS1307.c  **** 
  48:Lib/DS1307.c  **** bool DS1307_GetTimeDate(TimeDate_t* const TimeDate)
  49:Lib/DS1307.c  **** {
 180               		.loc 1 49 0
 181               		.cfi_startproc
 182               	.LVL3:
 183 0000 CF92      		push r12
 184               	.LCFI7:
 185               		.cfi_def_cfa_offset 3
 186               		.cfi_offset 12, -2
 187 0002 DF92      		push r13
 188               	.LCFI8:
 189               		.cfi_def_cfa_offset 4
 190               		.cfi_offset 13, -3
 191 0004 EF92      		push r14
 192               	.LCFI9:
 193               		.cfi_def_cfa_offset 5
 194               		.cfi_offset 14, -4
 195 0006 0F93      		push r16
 196               	.LCFI10:
 197               		.cfi_def_cfa_offset 6
 198               		.cfi_offset 16, -5
 199 0008 1F93      		push r17
 200               	.LCFI11:
 201               		.cfi_def_cfa_offset 7
 202               		.cfi_offset 17, -6
 203 000a CF93      		push r28
 204               	.LCFI12:
 205               		.cfi_def_cfa_offset 8
 206               		.cfi_offset 28, -7
 207 000c DF93      		push r29
 208               	.LCFI13:
 209               		.cfi_def_cfa_offset 9
 210               		.cfi_offset 29, -8
 211 000e CDB7      		in r28,__SP_L__
 212 0010 DEB7      		in r29,__SP_H__
 213               	.LCFI14:
 214               		.cfi_def_cfa_register 28
 215 0012 2897      		sbiw r28,8
 216               	.LCFI15:
 217               		.cfi_def_cfa_offset 17
 218 0014 0FB6      		in __tmp_reg__,__SREG__
 219 0016 F894      		cli
 220 0018 DEBF      		out __SP_H__,r29
 221 001a 0FBE      		out __SREG__,__tmp_reg__
 222 001c CDBF      		out __SP_L__,r28
 223               	/* prologue: function */
 224               	/* frame size = 8 */
 225               	/* stack size = 15 */
 226               	.L__stack_usage = 15
 227 001e 6C01      		movw r12,r24
  50:Lib/DS1307.c  **** #if defined(DUMMY_RTC)
  51:Lib/DS1307.c  **** 	TimeDate->Hour   = 1;
  52:Lib/DS1307.c  **** 	TimeDate->Minute = 1;
  53:Lib/DS1307.c  **** 	TimeDate->Second = 1;
  54:Lib/DS1307.c  **** 	
  55:Lib/DS1307.c  **** 	TimeDate->Day    = 1;
  56:Lib/DS1307.c  **** 	TimeDate->Month  = 1;
  57:Lib/DS1307.c  **** 	TimeDate->Year   = 1;
  58:Lib/DS1307.c  **** 	
  59:Lib/DS1307.c  **** 	return true;
  60:Lib/DS1307.c  **** #endif
  61:Lib/DS1307.c  **** 
  62:Lib/DS1307.c  **** 	DS1307_DateTimeRegs_t CurrentRegValues;
  63:Lib/DS1307.c  **** 	const uint8_t         ReadAddress = 0;
 228               		.loc 1 63 0
 229 0020 1886      		std Y+8,__zero_reg__
  64:Lib/DS1307.c  **** 	
  65:Lib/DS1307.c  **** 	// Read in the stored Time and Date from the DS1307
  66:Lib/DS1307.c  **** 	if (TWI_ReadPacket(DS1307_ADDRESS, 10, &ReadAddress, sizeof(ReadAddress),
 230               		.loc 1 66 0
 231 0022 87E0      		ldi r24,lo8(7)
 232 0024 E82E      		mov r14,r24
 233               	.LVL4:
 234 0026 8E01      		movw r16,r28
 235 0028 0F5F      		subi r16,-1
 236 002a 1F4F      		sbci r17,-1
 237 002c 21E0      		ldi r18,lo8(1)
 238 002e AE01      		movw r20,r28
 239 0030 485F      		subi r20,-8
 240 0032 5F4F      		sbci r21,-1
 241 0034 6AE0      		ldi r22,lo8(10)
 242 0036 80ED      		ldi r24,lo8(-48)
 243 0038 0E94 0000 		call TWI_ReadPacket
 244               	.LVL5:
 245 003c 8111      		cpse r24,__zero_reg__
 246 003e 00C0      		rjmp .L9
  67:Lib/DS1307.c  **** 	                   (uint8_t*)&CurrentRegValues, sizeof(DS1307_DateTimeRegs_t)) != TWI_ERROR_NoErro
  68:Lib/DS1307.c  **** 	{
  69:Lib/DS1307.c  **** 		return false;
  70:Lib/DS1307.c  **** 	}
  71:Lib/DS1307.c  **** 	
  72:Lib/DS1307.c  **** 	// Convert stored time value into decimal
  73:Lib/DS1307.c  **** 	TimeDate->Second  = (CurrentRegValues.Byte1.Fields.TenSec  * 10) + CurrentRegValues.Byte1.Fields.S
 247               		.loc 1 73 0
 248 0040 8981      		ldd r24,Y+1
 249 0042 982F      		mov r25,r24
 250 0044 9695      		lsr r25
 251 0046 9695      		lsr r25
 252 0048 9695      		lsr r25
 253 004a 9E70      		andi r25,lo8(14)
 254 004c 292F      		mov r18,r25
 255 004e 220F      		lsl r18
 256 0050 220F      		lsl r18
 257 0052 920F      		add r25,r18
 258 0054 8F70      		andi r24,lo8(15)
 259 0056 890F      		add r24,r25
 260 0058 F601      		movw r30,r12
 261 005a 8283      		std Z+2,r24
  74:Lib/DS1307.c  **** 	TimeDate->Minute  = (CurrentRegValues.Byte2.Fields.TenMin  * 10) + CurrentRegValues.Byte2.Fields.M
 262               		.loc 1 74 0
 263 005c 8A81      		ldd r24,Y+2
 264 005e 982F      		mov r25,r24
 265 0060 9695      		lsr r25
 266 0062 9695      		lsr r25
 267 0064 9695      		lsr r25
 268 0066 9E70      		andi r25,lo8(14)
 269 0068 292F      		mov r18,r25
 270 006a 220F      		lsl r18
 271 006c 220F      		lsl r18
 272 006e 920F      		add r25,r18
 273 0070 8F70      		andi r24,lo8(15)
 274 0072 890F      		add r24,r25
 275 0074 8183      		std Z+1,r24
  75:Lib/DS1307.c  **** 	TimeDate->Hour    = (CurrentRegValues.Byte3.Fields.TenHour * 10) + CurrentRegValues.Byte3.Fields.H
 276               		.loc 1 75 0
 277 0076 8B81      		ldd r24,Y+3
 278 0078 982F      		mov r25,r24
 279 007a 9695      		lsr r25
 280 007c 9695      		lsr r25
 281 007e 9695      		lsr r25
 282 0080 9670      		andi r25,lo8(6)
 283 0082 292F      		mov r18,r25
 284 0084 220F      		lsl r18
 285 0086 220F      		lsl r18
 286 0088 920F      		add r25,r18
 287 008a 8F70      		andi r24,lo8(15)
 288 008c 890F      		add r24,r25
 289 008e 8083      		st Z,r24
  76:Lib/DS1307.c  **** 
  77:Lib/DS1307.c  **** 	// Convert stored date value into decimal
  78:Lib/DS1307.c  **** 	TimeDate->Day    = (CurrentRegValues.Byte5.Fields.TenDay   * 10) + CurrentRegValues.Byte5.Fields.D
 290               		.loc 1 78 0
 291 0090 8D81      		ldd r24,Y+5
 292 0092 982F      		mov r25,r24
 293 0094 9695      		lsr r25
 294 0096 9695      		lsr r25
 295 0098 9695      		lsr r25
 296 009a 9670      		andi r25,lo8(6)
 297 009c 292F      		mov r18,r25
 298 009e 220F      		lsl r18
 299 00a0 220F      		lsl r18
 300 00a2 920F      		add r25,r18
 301 00a4 8F70      		andi r24,lo8(15)
 302 00a6 890F      		add r24,r25
 303 00a8 8383      		std Z+3,r24
  79:Lib/DS1307.c  **** 	TimeDate->Month  = (CurrentRegValues.Byte6.Fields.TenMonth * 10) + CurrentRegValues.Byte6.Fields.M
 304               		.loc 1 79 0
 305 00aa 8E81      		ldd r24,Y+6
 306 00ac 84FB      		bst r24,4
 307 00ae 9927      		clr r25
 308 00b0 90F9      		bld r25,0
 309 00b2 990F      		lsl r25
 310 00b4 292F      		mov r18,r25
 311 00b6 220F      		lsl r18
 312 00b8 220F      		lsl r18
 313 00ba 920F      		add r25,r18
 314 00bc 8F70      		andi r24,lo8(15)
 315 00be 890F      		add r24,r25
 316 00c0 8483      		std Z+4,r24
  80:Lib/DS1307.c  **** 	TimeDate->Year   = (CurrentRegValues.Byte7.Fields.TenYear  * 10) + CurrentRegValues.Byte7.Fields.Y
 317               		.loc 1 80 0
 318 00c2 8F81      		ldd r24,Y+7
 319 00c4 982F      		mov r25,r24
 320 00c6 9295      		swap r25
 321 00c8 9F70      		andi r25,lo8(15)
 322 00ca 8F70      		andi r24,lo8(15)
 323 00cc FAE0      		ldi r31,lo8(10)
 324 00ce 9F9F      		mul r25,r31
 325 00d0 800D      		add r24,r0
 326 00d2 1124      		clr __zero_reg__
 327 00d4 F601      		movw r30,r12
 328 00d6 8583      		std Z+5,r24
  81:Lib/DS1307.c  **** 
  82:Lib/DS1307.c  **** 	return true;
 329               		.loc 1 82 0
 330 00d8 81E0      		ldi r24,lo8(1)
 331 00da 00C0      		rjmp .L8
 332               	.L9:
  69:Lib/DS1307.c  **** 	}
 333               		.loc 1 69 0
 334 00dc 80E0      		ldi r24,0
 335               	.L8:
 336               	/* epilogue start */
  83:Lib/DS1307.c  **** }
 337               		.loc 1 83 0
 338 00de 2896      		adiw r28,8
 339 00e0 0FB6      		in __tmp_reg__,__SREG__
 340 00e2 F894      		cli
 341 00e4 DEBF      		out __SP_H__,r29
 342 00e6 0FBE      		out __SREG__,__tmp_reg__
 343 00e8 CDBF      		out __SP_L__,r28
 344 00ea DF91      		pop r29
 345 00ec CF91      		pop r28
 346 00ee 1F91      		pop r17
 347 00f0 0F91      		pop r16
 348 00f2 EF90      		pop r14
 349 00f4 DF90      		pop r13
 350 00f6 CF90      		pop r12
 351               	.LVL6:
 352 00f8 0895      		ret
 353               		.cfi_endproc
 354               	.LFE21:
 356               		.text
 357               	.Letext0:
 358               		.file 2 "Lib/DS1307.h"
 359               		.file 3 "/usr/lib/avr/include/stdint.h"
 360               		.file 4 "../../LUFA/Drivers/Peripheral/AVR8/TWI_AVR8.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 DS1307.c
     /tmp/ccOAV4Sf.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccOAV4Sf.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccOAV4Sf.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccOAV4Sf.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccOAV4Sf.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccOAV4Sf.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccOAV4Sf.s:14     .text.DS1307_SetTimeDate:0000000000000000 DS1307_SetTimeDate
     /tmp/ccOAV4Sf.s:178    .text.DS1307_GetTimeDate:0000000000000000 DS1307_GetTimeDate

UNDEFINED SYMBOLS
__udivmodqi4
TWI_WritePacket
TWI_ReadPacket
