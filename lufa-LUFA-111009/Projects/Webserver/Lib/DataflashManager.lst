   1               		.file	"DataflashManager.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.Dataflash_ToggleSelectedChipCS,"ax",@progbits
  13               	Dataflash_ToggleSelectedChipCS:
  14               	.LFB202:
  15               		.file 1 "../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h"
   1:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /*
   2:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****              LUFA Library
   3:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****      Copyright (C) Dean Camera, 2011.
   4:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
   5:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****            www.lufa-lib.org
   7:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** */
   8:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
   9:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /*
  10:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  12:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  21:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   this software.
  29:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** */
  30:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  31:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /** \file
  32:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \brief Board specific Dataflash driver header for the Atmel USBKEY.
  33:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \copydetails Group_Dataflash_USBKEY
  34:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *
  35:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *        dispatch header located in LUFA/Drivers/Board/Dataflash.h.
  37:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  */
  38:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  39:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /** \ingroup Group_Dataflash
  40:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \defgroup Group_Dataflash_USBKEY USBKEY
  41:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \brief Board specific Dataflash driver header for the Atmel USBKEY.
  42:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *
  43:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  Board specific Dataflash driver header for the Atmel USBKEY board.
  44:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *
  45:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  @{
  46:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  */
  47:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  48:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** #ifndef __DATAFLASH_USBKEY_H__
  49:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** #define __DATAFLASH_USBKEY_H__
  50:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  51:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Includes: */
  52:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#include "../../../../Common/Common.h"
  53:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#include "../../../Misc/AT45DB642D.h"
  54:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  55:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Preprocessor Checks: */
  56:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#if !defined(__INCLUDE_FROM_DATAFLASH_H)
  57:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#error Do not include this file directly. Include LUFA/Drivers/Board/Dataflash.h instead.
  58:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#endif
  59:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  60:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Private Interface - For use in library only: */
  61:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	#if !defined(__DOXYGEN__)
  62:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		/* Macros: */
  63:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIPCS_MASK                ((1 << 1) | (1 << 0))
  64:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIPCS_DDR                 DDRE
  65:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIPCS_PORT                PORTE
  66:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	#endif
  67:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  68:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Public Interface - May be used in end-application: */
  69:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		/* Macros: */
  70:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Constant indicating the total number of dataflash ICs mounted on the selected board. */
  71:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_TOTALCHIPS                 2
  72:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  73:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Mask for no dataflash chip selected. */
  74:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_NO_CHIP                    DATAFLASH_CHIPCS_MASK
  75:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  76:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Mask for the first dataflash chip selected. */
  77:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIP1                      (1 << 1)
  78:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  79:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Mask for the second dataflash chip selected. */
  80:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIP2                      (1 << 0)
  81:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  82:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Internal main memory page size for the board's dataflash ICs. */
  83:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_PAGE_SIZE                  1024
  84:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  85:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Total number of pages inside each of the board's dataflash ICs. */
  86:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_PAGES                      8192
  87:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  88:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		/* Inline Functions: */
  89:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Initializes the dataflash driver so that commands and data may be sent to an attached datafl
  90:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  The microcontroller's SPI driver MUST be initialized before any of the dataflash commands ar
  91:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
  92:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_Init(void)
  93:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
  94:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				DATAFLASH_CHIPCS_DDR  |= DATAFLASH_CHIPCS_MASK;
  95:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				DATAFLASH_CHIPCS_PORT |= DATAFLASH_CHIPCS_MASK;
  96:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
  97:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  98:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Determines the currently selected dataflash chip.
  99:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 100:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \return Mask of the currently selected Dataflash chip, either \ref DATAFLASH_NO_CHIP if no c
 101:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  or a DATAFLASH_CHIPn mask (where n is the chip number).
 102:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 103:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline uint8_t Dataflash_GetSelectedChip(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 104:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline uint8_t Dataflash_GetSelectedChip(void)
 105:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 106:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				return (DATAFLASH_CHIPCS_PORT & DATAFLASH_CHIPCS_MASK);
 107:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 108:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 109:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Selects the given dataflash chip.
 110:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 111:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in]  ChipMask  Mask of the Dataflash IC to select, in the form of DATAFLASH_CHIPn mas
 112:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *              the chip number).
 113:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 114:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SelectChip(const uint8_t ChipMask) ATTR_ALWAYS_INLINE;
 115:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SelectChip(const uint8_t ChipMask)
 116:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				DATAFLASH_CHIPCS_PORT = ((DATAFLASH_CHIPCS_PORT & ~DATAFLASH_CHIPCS_MASK) | ChipMask);
 118:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 119:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 120:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Deselects the current dataflash chip, so that no dataflash is selected. */
 121:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_DeselectChip(void) ATTR_ALWAYS_INLINE;
 122:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_DeselectChip(void)
 123:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 124:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SelectChip(DATAFLASH_NO_CHIP);
 125:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 126:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 127:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Selects a dataflash IC from the given page number, which should range from 0 to
 128:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  ((DATAFLASH_PAGES * DATAFLASH_TOTALCHIPS) - 1). For boards containing only one
 129:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  dataflash IC, this will select DATAFLASH_CHIP1. If the given page number is outside
 130:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  the total number of pages contained in the boards dataflash ICs, all dataflash ICs
 131:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  are deselected.
 132:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 133:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in] PageAddress  Address of the page to manipulate, ranging from
 134:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *                          0 to ((DATAFLASH_PAGES * DATAFLASH_TOTALCHIPS) - 1).
 135:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 136:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SelectChipFromPage(const uint16_t PageAddress)
 137:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 138:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_DeselectChip();
 139:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 140:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				if (PageAddress >= (DATAFLASH_PAGES * DATAFLASH_TOTALCHIPS))
 141:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  return;
 142:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 143:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				if (PageAddress & 0x01)
 144:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  Dataflash_SelectChip(DATAFLASH_CHIP2);
 145:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				else
 146:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  Dataflash_SelectChip(DATAFLASH_CHIP1);
 147:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 148:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 149:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Toggles the select line of the currently selected dataflash IC, so that it is ready to recei
 150:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  a new command.
 151:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 152:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_ToggleSelectedChipCS(void)
 153:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
  16               		.loc 1 153 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               	.LBB505:
  23               	.LBB506:
 106:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
  24               		.loc 1 106 0
  25 0000 8EB1      		in r24,0xe
  26               	.LVL0:
  27               	.LBE506:
  28               	.LBE505:
  29               	.LBB507:
  30               	.LBB508:
  31               	.LBB509:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
  32               		.loc 1 117 0
  33 0002 9EB1      		in r25,0xe
  34 0004 9360      		ori r25,lo8(3)
  35 0006 9EB9      		out 0xe,r25
  36               	.LVL1:
  37               	.LBE509:
  38               	.LBE508:
  39               	.LBE507:
  40               	.LBB510:
  41               	.LBB511:
  42 0008 9EB1      		in r25,0xe
  43 000a 9C7F      		andi r25,lo8(-4)
  44 000c 8370      		andi r24,lo8(3)
  45 000e 892B      		or r24,r25
  46 0010 8EB9      		out 0xe,r24
  47 0012 0895      		ret
  48               	.LBE511:
  49               	.LBE510:
  50               		.cfi_endproc
  51               	.LFE202:
  53               		.section	.text.Dataflash_WaitWhileBusy,"ax",@progbits
  55               	Dataflash_WaitWhileBusy:
  56               	.LFB203:
 154:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				uint8_t SelectedChipMask = Dataflash_GetSelectedChip();
 155:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 156:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_DeselectChip();
 157:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SelectChip(SelectedChipMask);
 158:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 159:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 160:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Spin-loops while the currently selected dataflash is busy executing a command, such as a mai
 161:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  memory page program or main memory to buffer transfer.
 162:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 163:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_WaitWhileBusy(void)
 164:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
  57               		.loc 1 164 0
  58               		.cfi_startproc
  59               	/* prologue: function */
  60               	/* frame size = 0 */
  61               	/* stack size = 0 */
  62               	.L__stack_usage = 0
 165:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_ToggleSelectedChipCS();
  63               		.loc 1 165 0
  64 0000 0E94 0000 		call Dataflash_ToggleSelectedChipCS
  65               	.LVL2:
  66               	.LBB512:
  67               	.LBB513:
  68               	.LBB514:
  69               		.file 2 "../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h"
   1:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /*
   2:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****              LUFA Library
   3:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
   5:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****            www.lufa-lib.org
   7:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** */
   8:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
   9:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /*
  10:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  12:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  21:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   this software.
  29:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** */
  30:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  31:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /** \file
  32:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \brief SPI Peripheral Driver (AVR8)
  33:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  34:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  On-chip SPI driver for the 8-bit AVR microcontrollers.
  35:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  36:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  37:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *        dispatch header located in LUFA/Drivers/Peripheral/SPI.h.
  38:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  */
  39:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  40:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /** \ingroup Group_SPI
  41:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \defgroup Group_SPI_AVR8 SPI Peripheral Driver (AVR8)
  42:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  43:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \section Sec_ModDescription Module Description
  44:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  Driver for the hardware SPI port available on most 8-bit AVR microcontroller models. This
  45:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  module provides an easy to use driver for the setup and transfer of data over the
  46:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  AVR's SPI port.
  47:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  48:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  49:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *        dispatch header located in LUFA/Drivers/Peripheral/SPI.h.
  50:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  51:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \section Sec_ExampleUsage Example Usage
  52:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  The following snippet is an example of how this module may be used within a typical
  53:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  application.
  54:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  55:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \code
  56:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Initialize the SPI driver before first use
  57:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_Init(SPI_SPEED_FCPU_DIV_2 | SPI_ORDER_MSB_FIRST | SPI_SCK_LEAD_FALLING |
  58:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *               SPI_SAMPLE_TRAILING | SPI_MODE_MASTER);
  59:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  60:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Send several bytes, ignoring the returned data
  61:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_SendByte(0x01);
  62:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_SendByte(0x02);
  63:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_SendByte(0x03);
  64:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  65:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Receive several bytes, sending a dummy 0x00 byte each time
  66:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t Byte1 = SPI_ReceiveByte();
  67:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t Byte2 = SPI_ReceiveByte();
  68:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t Byte3 = SPI_ReceiveByte();
  69:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  70:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Send a byte, and store the received byte from the same transaction
  71:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t ResponseByte = SPI_TransferByte(0xDC);
  72:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \endcode
  73:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  * 
  74:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  @{
  75:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  */
  76:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  77:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** #ifndef __SPI_AVR8_H__
  78:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** #define __SPI_AVR8_H__
  79:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  80:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Includes: */
  81:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#include "../../../Common/Common.h"
  82:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  83:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  84:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#if defined(__cplusplus)
  85:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			extern "C" {
  86:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#endif
  87:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  88:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Preprocessor Checks: */
  89:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#if !defined(__INCLUDE_FROM_SPI_H)
  90:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/Peripheral/SPI.h instead.
  91:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#endif
  92:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  93:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Private Interface - For use in library only: */
  94:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	#if !defined(__DOXYGEN__)
  95:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		/* Macros: */
  96:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_USE_DOUBLESPEED            (1 << SPE)
  97:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	#endif
  98:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  99:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 100:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		/* Macros: */
 101:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Prescaler Configuration Masks */
 102:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 103:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 2. */
 104:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_2           SPI_USE_DOUBLESPEED
 105:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 106:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 4. */
 107:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_4           0
 108:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 109:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 8. */
 110:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_8           (SPI_USE_DOUBLESPEED | (1 << SPR0))
 111:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 112:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 16. */
 113:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_16          (1 << SPR0)
 114:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 115:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 32. */
 116:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_32          (SPI_USE_DOUBLESPEED | (1 << SPR1))
 117:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 118:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 64. */
 119:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_64          (SPI_USE_DOUBLESPEED | (1 << SPR1) | (1 << SPR0))
 120:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 121:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 128. */
 122:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_128         ((1 << SPR1) | (1 << SPR0))
 123:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 124:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 125:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI SCK Polarity Configuration Masks */
 126:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 127:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI clock polarity mask for \c SPI_Init(). Indicates that the SCK should lead on the rising 
 128:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SCK_LEAD_RISING            (0 << CPOL)
 129:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 130:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI clock polarity mask for \c SPI_Init(). Indicates that the SCK should lead on the falling
 131:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SCK_LEAD_FALLING           (1 << CPOL)
 132:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 133:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 134:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Sample Edge Configuration Masks */
 135:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 136:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data sample mode mask for \c SPI_Init(). Indicates that the data should sampled on the l
 137:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SAMPLE_LEADING             (0 << CPHA)
 138:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 139:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data sample mode mask for \c SPI_Init(). Indicates that the data should be sampled on th
 140:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SAMPLE_TRAILING            (1 << CPHA)
 141:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 142:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 143:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Data Ordering Configuration Masks */
 144:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 145:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data order mask for \c SPI_Init(). Indicates that data should be shifted out MSB first. 
 146:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_ORDER_MSB_FIRST            (0 << DORD)
 147:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 148:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data order mask for \c SPI_Init(). Indicates that data should be shifted out LSB first. 
 149:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_ORDER_LSB_FIRST            (1 << DORD)
 150:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 151:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 152:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Mode Configuration Masks */
 153:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 154:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI mode mask for \c SPI_Init(). Indicates that the SPI interface should be initialized into
 155:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_MODE_SLAVE                 (0 << MSTR)
 156:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 157:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI mode mask for \c SPI_Init(). Indicates that the SPI interface should be initialized into
 158:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_MODE_MASTER                (1 << MSTR)
 159:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 160:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 161:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		/* Inline Functions: */
 162:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Initializes the SPI subsystem, ready for transfers. Must be called before calling any other
 163:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  SPI routines.
 164:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 165:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \param[in] SPIOptions  SPI Options, a mask consisting of one of each of the \c SPI_SPEED_*,
 166:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *                         \c SPI_SCK_*, \c SPI_SAMPLE_*, \c SPI_ORDER_* and \c SPI_MODE_* masks
 167:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 168:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_Init(const uint8_t SPIOptions)
 169:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 170:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				/* Prevent high rise times on PB.0 (/SS) from forcing a change to SPI slave mode */
 171:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  |= (1 << 0);
 172:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				PORTB |= (1 << 0);
 173:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 174:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  |=  ((1 << 1) | (1 << 2));
 175:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  &= ~(1 << 3);
 176:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				PORTB |=  (1 << 3);
 177:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 178:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				if (SPIOptions & SPI_USE_DOUBLESPEED)
 179:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				  SPSR |= (1 << SPI2X);
 180:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				else
 181:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				  SPSR &= ~(1 << SPI2X);
 182:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 183:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				/* Switch /SS to input mode after configuration to allow for forced mode changes */
 184:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB &= ~(1 << 0);
 185:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 186:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPCR  = ((1 << SPE) | SPIOptions);
 187:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 188:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 189:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Turns off the SPI driver, disabling and returning used hardware to their default configurati
 190:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_Disable(void)
 191:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 192:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  &= ~((1 << 1) | (1 << 2));
 193:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				PORTB &= ~((1 << 0) | (1 << 3));
 194:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 195:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPCR   = 0;
 196:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPSR   = 0;
 197:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 198:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 199:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Retrieves the currently selected SPI mode, once the SPI interface has been configured.
 200:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 201:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \return \ref SPI_MODE_MASTER if the interface is currently in SPI Master mode, \ref SPI_MODE
 202:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 203:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_GetCurrentMode(void) ATTR_ALWAYS_INLINE;
 204:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_GetCurrentMode(void)
 205:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 206:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return (SPCR & SPI_MODE_MASTER);
 207:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 208:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 209:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Sends and receives a byte through the SPI interface, blocking until the transfer is complete
 210:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 211:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \param[in] Byte  Byte to send through the SPI interface.
 212:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 213:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \return Response byte from the attached SPI device.
 214:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 215:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 216:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
 217:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 218:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPDR = Byte;
 219:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 220:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 221:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 222:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 223:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Sends a byte through the SPI interface, blocking until the transfer is complete. The respons
 224:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  byte sent to from the attached SPI device is ignored.
 225:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 226:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \param[in] Byte  Byte to send through the SPI interface.
 227:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 228:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_SendByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 229:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_SendByte(const uint8_t Byte)
 230:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPDR = Byte;
  70               		.loc 2 231 0
  71 0004 87ED      		ldi r24,lo8(-41)
  72 0006 8EBD      		out 0x2e,r24
  73               	.L3:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
  74               		.loc 2 232 0
  75 0008 0DB4      		in __tmp_reg__,0x2d
  76 000a 07FE      		sbrs __tmp_reg__,7
  77 000c 00C0      		rjmp .L3
  78               	.L6:
  79               	.LBE514:
  80               	.LBE513:
  81               	.LBE512:
  82               	.LBB515:
  83               	.LBB516:
  84               	.LBB517:
 233:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 234:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 235:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Sends a dummy byte through the SPI interface, blocking until the transfer is complete. The r
 236:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  byte from the attached SPI device is returned.
 237:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 238:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \return The response byte from the attached SPI device.
 239:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 240:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_ReceiveByte(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 241:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_ReceiveByte(void)
 242:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPDR = 0x00;
  85               		.loc 2 243 0 discriminator 1
  86 000e 1EBC      		out 0x2e,__zero_reg__
  87               	.L4:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
  88               		.loc 2 244 0
  89 0010 0DB4      		in __tmp_reg__,0x2d
  90 0012 07FE      		sbrs __tmp_reg__,7
  91 0014 00C0      		rjmp .L4
  92               	.LBE517:
  93               	.LBE516:
  94               	.LBE515:
 166:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte(DF_CMD_GETSTATUS);
 167:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				while (!(Dataflash_ReceiveByte() & DF_STATUS_READY));
  95               		.loc 1 167 0
  96 0016 0EB4      		in __tmp_reg__,0x2e
  97 0018 07FE      		sbrs __tmp_reg__,7
  98 001a 00C0      		rjmp .L6
 168:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_ToggleSelectedChipCS();
  99               		.loc 1 168 0
 100 001c 0C94 0000 		jmp Dataflash_ToggleSelectedChipCS
 101               	.LVL3:
 102               		.cfi_endproc
 103               	.LFE203:
 105               		.section	.text.Dataflash_SendAddressBytes,"ax",@progbits
 107               	Dataflash_SendAddressBytes:
 108               	.LFB204:
 169:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 170:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 171:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Sends a set of page and buffer address bytes to the currently selected dataflash IC, for use
 172:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  dataflash commands which require a complete 24-bit address.
 173:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 174:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in] PageAddress  Page address within the selected dataflash IC
 175:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in] BufferByte   Address within the dataflash's buffer
 176:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 177:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SendAddressBytes(uint16_t PageAddress,
 178:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			                                              const uint16_t BufferByte)
 179:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 109               		.loc 1 179 0
 110               		.cfi_startproc
 111               	.LVL4:
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
 180:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				PageAddress >>= 1;
 116               		.loc 1 180 0
 117 0000 9C01      		movw r18,r24
 118 0002 3695      		lsr r19
 119 0004 2795      		ror r18
 120               	.LVL5:
 181:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 182:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte(PageAddress >> 5);
 121               		.loc 1 182 0
 122 0006 56E0      		ldi r21,6
 123               		1:
 124 0008 9695      		lsr r25
 125 000a 8795      		ror r24
 126 000c 5A95      		dec r21
 127 000e 01F4      		brne 1b
 128               	.LVL6:
 129               	.LBB518:
 130               	.LBB519:
 131               	.LBB520:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 132               		.loc 2 231 0
 133 0010 8EBD      		out 0x2e,r24
 134               	.L12:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 135               		.loc 2 232 0
 136 0012 0DB4      		in __tmp_reg__,0x2d
 137 0014 07FE      		sbrs __tmp_reg__,7
 138 0016 00C0      		rjmp .L12
 139               	.LVL7:
 140               	.LBE520:
 141               	.LBE519:
 142               	.LBE518:
 183:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte((PageAddress << 3) | (BufferByte >> 8));
 143               		.loc 1 183 0
 144 0018 220F      		lsl r18
 145 001a 220F      		lsl r18
 146 001c 220F      		lsl r18
 147 001e 272B      		or r18,r23
 148               	.LVL8:
 149               	.LBB521:
 150               	.LBB522:
 151               	.LBB523:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 152               		.loc 2 231 0
 153 0020 2EBD      		out 0x2e,r18
 154               	.L13:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 155               		.loc 2 232 0
 156 0022 0DB4      		in __tmp_reg__,0x2d
 157 0024 07FE      		sbrs __tmp_reg__,7
 158 0026 00C0      		rjmp .L13
 159               	.LVL9:
 160               	.LBE523:
 161               	.LBE522:
 162               	.LBE521:
 163               	.LBB524:
 164               	.LBB525:
 165               	.LBB526:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 166               		.loc 2 231 0
 167 0028 6EBD      		out 0x2e,r22
 168               	.L14:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 169               		.loc 2 232 0
 170 002a 0DB4      		in __tmp_reg__,0x2d
 171 002c 07FE      		sbrs __tmp_reg__,7
 172 002e 00C0      		rjmp .L14
 173               	/* epilogue start */
 174               	.LBE526:
 175               	.LBE525:
 176               	.LBE524:
 184:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte(BufferByte);
 185:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 177               		.loc 1 185 0
 178 0030 0895      		ret
 179               		.cfi_endproc
 180               	.LFE204:
 182               		.section	.text.Dataflash_SelectChipFromPage,"ax",@progbits
 184               	Dataflash_SelectChipFromPage:
 185               	.LFB201:
 137:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_DeselectChip();
 186               		.loc 1 137 0
 187               		.cfi_startproc
 188               	.LVL10:
 189               	/* prologue: function */
 190               	/* frame size = 0 */
 191               	/* stack size = 0 */
 192               	.L__stack_usage = 0
 193 0000 9C01      		movw r18,r24
 194               	.LVL11:
 195               	.LBB541:
 196               	.LBB542:
 197               	.LBB543:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 198               		.loc 1 117 0
 199 0002 9EB1      		in r25,0xe
 200 0004 9360      		ori r25,lo8(3)
 201 0006 9EB9      		out 0xe,r25
 202               	.LVL12:
 203               	.LBE543:
 204               	.LBE542:
 205               	.LBE541:
 140:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  return;
 206               		.loc 1 140 0
 207 0008 2115      		cp r18,__zero_reg__
 208 000a 80E4      		ldi r24,64
 209 000c 3807      		cpc r19,r24
 210               	.LVL13:
 211 000e 00F4      		brsh .L18
 212               	.LBB544:
 213               	.LBB545:
 214               	.LBB546:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 215               		.loc 1 117 0
 216 0010 8EB1      		in r24,0xe
 217 0012 8C7F      		andi r24,lo8(-4)
 218               	.LBE546:
 219               	.LBE545:
 220               	.LBE544:
 143:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  Dataflash_SelectChip(DATAFLASH_CHIP2);
 221               		.loc 1 143 0
 222 0014 20FF      		sbrs r18,0
 223 0016 00C0      		rjmp .L20
 224               	.LVL14:
 225               	.LBB549:
 226               	.LBB548:
 227               	.LBB547:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 228               		.loc 1 117 0
 229 0018 8160      		ori r24,lo8(1)
 230 001a 00C0      		rjmp .L21
 231               	.LVL15:
 232               	.L20:
 233               	.LBE547:
 234               	.LBE548:
 235               	.LBE549:
 236               	.LBB550:
 237               	.LBB551:
 238 001c 8260      		ori r24,lo8(2)
 239               	.LVL16:
 240               	.L21:
 241 001e 8EB9      		out 0xe,r24
 242               	.L18:
 243 0020 0895      		ret
 244               	.LBE551:
 245               	.LBE550:
 246               		.cfi_endproc
 247               	.LFE201:
 249               		.section	.text.DataflashManager_WriteBlocks,"ax",@progbits
 250               	.global	DataflashManager_WriteBlocks
 252               	DataflashManager_WriteBlocks:
 253               	.LFB205:
 254               		.file 3 "Lib/DataflashManager.c"
   1:Lib/DataflashManager.c **** /*
   2:Lib/DataflashManager.c ****              LUFA Library
   3:Lib/DataflashManager.c ****      Copyright (C) Dean Camera, 2011.
   4:Lib/DataflashManager.c **** 
   5:Lib/DataflashManager.c ****   dean [at] fourwalledcubicle [dot] com
   6:Lib/DataflashManager.c ****            www.lufa-lib.org
   7:Lib/DataflashManager.c **** */
   8:Lib/DataflashManager.c **** 
   9:Lib/DataflashManager.c **** /*
  10:Lib/DataflashManager.c ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:Lib/DataflashManager.c **** 
  12:Lib/DataflashManager.c ****   Permission to use, copy, modify, distribute, and sell this
  13:Lib/DataflashManager.c ****   software and its documentation for any purpose is hereby granted
  14:Lib/DataflashManager.c ****   without fee, provided that the above copyright notice appear in
  15:Lib/DataflashManager.c ****   all copies and that both that the copyright notice and this
  16:Lib/DataflashManager.c ****   permission notice and warranty disclaimer appear in supporting
  17:Lib/DataflashManager.c ****   documentation, and that the name of the author not be used in
  18:Lib/DataflashManager.c ****   advertising or publicity pertaining to distribution of the
  19:Lib/DataflashManager.c ****   software without specific, written prior permission.
  20:Lib/DataflashManager.c **** 
  21:Lib/DataflashManager.c ****   The author disclaim all warranties with regard to this
  22:Lib/DataflashManager.c ****   software, including all implied warranties of merchantability
  23:Lib/DataflashManager.c ****   and fitness.  In no event shall the author be liable for any
  24:Lib/DataflashManager.c ****   special, indirect or consequential damages or any damages
  25:Lib/DataflashManager.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:Lib/DataflashManager.c ****   in an action of contract, negligence or other tortious action,
  27:Lib/DataflashManager.c ****   arising out of or in connection with the use or performance of
  28:Lib/DataflashManager.c ****   this software.
  29:Lib/DataflashManager.c **** */
  30:Lib/DataflashManager.c **** 
  31:Lib/DataflashManager.c **** /** \file
  32:Lib/DataflashManager.c ****  *
  33:Lib/DataflashManager.c ****  *  Functions to manage the physical Dataflash media, including reading and writing of
  34:Lib/DataflashManager.c ****  *  blocks of data. These functions are called by the SCSI layer when data must be stored
  35:Lib/DataflashManager.c ****  *  or retrieved to/from the physical storage media. If a different media is used (such
  36:Lib/DataflashManager.c ****  *  as a SD card or EEPROM), functions similar to these will need to be generated.
  37:Lib/DataflashManager.c ****  */
  38:Lib/DataflashManager.c **** 
  39:Lib/DataflashManager.c **** #define  INCLUDE_FROM_DATAFLASHMANAGER_C
  40:Lib/DataflashManager.c **** #include "DataflashManager.h"
  41:Lib/DataflashManager.c **** 
  42:Lib/DataflashManager.c **** /** Writes blocks (OS blocks, not Dataflash pages) to the storage medium, the board Dataflash IC(s)
  43:Lib/DataflashManager.c ****  *  the pre-selected data OUT endpoint. This routine reads in OS sized blocks from the endpoint and
  44:Lib/DataflashManager.c ****  *  them to the Dataflash in Dataflash page sized blocks.
  45:Lib/DataflashManager.c ****  *
  46:Lib/DataflashManager.c ****  *  \param[in] MSInterfaceInfo  Pointer to a structure containing a Mass Storage Class configuratio
  47:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the write sequence
  48:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to write
  49:Lib/DataflashManager.c ****  */
  50:Lib/DataflashManager.c **** void DataflashManager_WriteBlocks(USB_ClassInfo_MS_Device_t* const MSInterfaceInfo,
  51:Lib/DataflashManager.c ****                                   const uint32_t BlockAddress,
  52:Lib/DataflashManager.c ****                                   uint16_t TotalBlocks)
  53:Lib/DataflashManager.c **** {
 255               		.loc 3 53 0
 256               		.cfi_startproc
 257               	.LVL17:
 258 0000 4F92      		push r4
 259               	.LCFI0:
 260               		.cfi_def_cfa_offset 3
 261               		.cfi_offset 4, -2
 262 0002 5F92      		push r5
 263               	.LCFI1:
 264               		.cfi_def_cfa_offset 4
 265               		.cfi_offset 5, -3
 266 0004 6F92      		push r6
 267               	.LCFI2:
 268               		.cfi_def_cfa_offset 5
 269               		.cfi_offset 6, -4
 270 0006 7F92      		push r7
 271               	.LCFI3:
 272               		.cfi_def_cfa_offset 6
 273               		.cfi_offset 7, -5
 274 0008 8F92      		push r8
 275               	.LCFI4:
 276               		.cfi_def_cfa_offset 7
 277               		.cfi_offset 8, -6
 278 000a 9F92      		push r9
 279               	.LCFI5:
 280               		.cfi_def_cfa_offset 8
 281               		.cfi_offset 9, -7
 282 000c AF92      		push r10
 283               	.LCFI6:
 284               		.cfi_def_cfa_offset 9
 285               		.cfi_offset 10, -8
 286 000e BF92      		push r11
 287               	.LCFI7:
 288               		.cfi_def_cfa_offset 10
 289               		.cfi_offset 11, -9
 290 0010 CF92      		push r12
 291               	.LCFI8:
 292               		.cfi_def_cfa_offset 11
 293               		.cfi_offset 12, -10
 294 0012 DF92      		push r13
 295               	.LCFI9:
 296               		.cfi_def_cfa_offset 12
 297               		.cfi_offset 13, -11
 298 0014 EF92      		push r14
 299               	.LCFI10:
 300               		.cfi_def_cfa_offset 13
 301               		.cfi_offset 14, -12
 302 0016 FF92      		push r15
 303               	.LCFI11:
 304               		.cfi_def_cfa_offset 14
 305               		.cfi_offset 15, -13
 306 0018 0F93      		push r16
 307               	.LCFI12:
 308               		.cfi_def_cfa_offset 15
 309               		.cfi_offset 16, -14
 310 001a 1F93      		push r17
 311               	.LCFI13:
 312               		.cfi_def_cfa_offset 16
 313               		.cfi_offset 17, -15
 314 001c CF93      		push r28
 315               	.LCFI14:
 316               		.cfi_def_cfa_offset 17
 317               		.cfi_offset 28, -16
 318 001e DF93      		push r29
 319               	.LCFI15:
 320               		.cfi_def_cfa_offset 18
 321               		.cfi_offset 29, -17
 322               	/* prologue: function */
 323               	/* frame size = 0 */
 324               	/* stack size = 16 */
 325               	.L__stack_usage = 16
 326 0020 4C01      		movw r8,r24
 327 0022 8901      		movw r16,r18
  54:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 328               		.loc 3 54 0
 329 0024 2A01      		movw r4,r20
 330 0026 3B01      		movw r6,r22
 331 0028 39E0      		ldi r19,9
 332               		1:
 333 002a 440C      		lsl r4
 334 002c 551C      		rol r5
 335 002e 661C      		rol r6
 336 0030 771C      		rol r7
 337 0032 3A95      		dec r19
 338 0034 01F4      		brne 1b
 339 0036 6AE0      		ldi r22,10
 340               		1:
 341 0038 7694      		lsr r7
 342 003a 6794      		ror r6
 343 003c 5794      		ror r5
 344 003e 4794      		ror r4
 345 0040 6A95      		dec r22
 346 0042 01F4      		brne 1b
 347 0044 E201      		movw r28,r4
 348               	.LVL18:
  55:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 349               		.loc 3 55 0
 350 0046 542F      		mov r21,r20
 351 0048 4427      		clr r20
 352 004a 550F      		lsl r21
 353               	.LVL19:
 354 004c 7A01      		movw r14,r20
 355 004e EE24      		clr r14
 356 0050 82E0      		ldi r24,2
 357 0052 F822      		and r15,r24
 358               	.LVL20:
  56:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
  57:Lib/DataflashManager.c **** 	bool     UsingSecondBuffer   = false;
  58:Lib/DataflashManager.c **** 
  59:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
  60:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 359               		.loc 3 60 0
 360 0054 C201      		movw r24,r4
 361 0056 0E94 0000 		call Dataflash_SelectChipFromPage
 362               	.LVL21:
 363               	.LBB552:
 364               	.LBB553:
 365               	.LBB554:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 366               		.loc 2 231 0
 367 005a 83E5      		ldi r24,lo8(83)
 368 005c 8EBD      		out 0x2e,r24
 369               	.L23:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 370               		.loc 2 232 0
 371 005e 0DB4      		in __tmp_reg__,0x2d
 372 0060 07FE      		sbrs __tmp_reg__,7
 373 0062 00C0      		rjmp .L23
 374               	.LVL22:
 375               	.LBE554:
 376               	.LBE553:
 377               	.LBE552:
  61:Lib/DataflashManager.c **** 
  62:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
  63:Lib/DataflashManager.c **** 	/* Copy selected dataflash's current page contents to the Dataflash buffer */
  64:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMTOBUFF1);
  65:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0);
 378               		.loc 3 65 0
 379 0064 60E0      		ldi r22,0
 380 0066 70E0      		ldi r23,0
 381 0068 C201      		movw r24,r4
 382 006a 0E94 0000 		call Dataflash_SendAddressBytes
 383               	.LVL23:
  66:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 384               		.loc 3 66 0
 385 006e 0E94 0000 		call Dataflash_WaitWhileBusy
 386               	.LVL24:
 387               	.LBB555:
 388               	.LBB556:
 389               	.LBB557:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 390               		.loc 2 231 0
 391 0072 84E8      		ldi r24,lo8(-124)
 392 0074 8EBD      		out 0x2e,r24
 393               	.L24:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 394               		.loc 2 232 0
 395 0076 0DB4      		in __tmp_reg__,0x2d
 396 0078 07FE      		sbrs __tmp_reg__,7
 397 007a 00C0      		rjmp .L24
 398               	.LVL25:
 399               	.LBE557:
 400               	.LBE556:
 401               	.LBE555:
  67:Lib/DataflashManager.c **** #endif
  68:Lib/DataflashManager.c **** 
  69:Lib/DataflashManager.c **** 	/* Send the Dataflash buffer write command */
  70:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_BUFF1WRITE);
  71:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(0, CurrDFPageByte);
 402               		.loc 3 71 0
 403 007c B701      		movw r22,r14
 404 007e 80E0      		ldi r24,0
 405 0080 90E0      		ldi r25,0
 406 0082 0E94 0000 		call Dataflash_SendAddressBytes
 407               	.LVL26:
  72:Lib/DataflashManager.c **** 
  73:Lib/DataflashManager.c **** 	/* Wait until endpoint is ready before continuing */
  74:Lib/DataflashManager.c **** 	if (Endpoint_WaitUntilReady())
 408               		.loc 3 74 0
 409 0086 0E94 0000 		call Endpoint_WaitUntilReady
 410               	.LVL27:
 411 008a 8111      		cpse r24,__zero_reg__
 412 008c 00C0      		rjmp .L22
  56:Lib/DataflashManager.c **** 	bool     UsingSecondBuffer   = false;
 413               		.loc 3 56 0
 414 008e 94E0      		ldi r25,4
 415               		1:
 416 0090 F694      		lsr r15
 417 0092 E794      		ror r14
 418 0094 9A95      		dec r25
 419 0096 01F4      		brne 1b
 420               	.LVL28:
 421 0098 7E2C      		mov r7,r14
 422 009a 5801      		movw r10,r16
 423 009c 25E0      		ldi r18,5
 424               		1:
 425 009e AA0C      		lsl r10
 426 00a0 BB1C      		rol r11
 427 00a2 2A95      		dec r18
 428 00a4 01F4      		brne 1b
 429 00a6 E12C      		mov r14,__zero_reg__
 430 00a8 F12C      		mov r15,__zero_reg__
 431 00aa 612C      		mov r6,__zero_reg__
 432               	.LVL29:
 433               	.L26:
  75:Lib/DataflashManager.c **** 	  return;
  76:Lib/DataflashManager.c **** 
  77:Lib/DataflashManager.c **** 	while (TotalBlocks)
 434               		.loc 3 77 0
 435 00ac 0115      		cp r16,__zero_reg__
 436 00ae 1105      		cpc r17,__zero_reg__
 437 00b0 01F4      		brne .+2
 438 00b2 00C0      		rjmp .L57
 439 00b4 6501      		movw r12,r10
 440 00b6 CE0C      		add r12,r14
 441 00b8 DF1C      		adc r13,r15
 442 00ba 80E2      		ldi r24,lo8(32)
 443 00bc 582E      		mov r5,r24
 444               	.L56:
 445               	.LVL30:
 446               	.LBB558:
 447               	.LBB559:
 448               	.LBB560:
 449               		.file 4 "../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 128:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 132:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 133:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 136:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */			
 148:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 223:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 224:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 225:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 226:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 227:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 228:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 229:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 230:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 231:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 232:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 233:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 234:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 236:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 237:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 238:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 240:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 241:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 242:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 243:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 244:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 245:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 246:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 247:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 249:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 250:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 251:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 253:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 254:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 257:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 258:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 261:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 262:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 263:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 264:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 265:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 266:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 267:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 268:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 269:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 270:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 271:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 272:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 273:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 274:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 275:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 276:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 277:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 278:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 279:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 280:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 281:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 282:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 283:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 284:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 285:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 286:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 287:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 288:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 289:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 290:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 291:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 292:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 293:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 294:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 295:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 296:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 297:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 298:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 299:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 300:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 301:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 302:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 303:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 304:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 305:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 306:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 307:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 308:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 309:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 310:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 311:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 312:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 313:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 314:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 315:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 316:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 317:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 318:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 319:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 320:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 321:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 322:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 323:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 324:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 325:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 326:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 327:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 328:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 329:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 330:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 331:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 332:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 333:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 334:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 335:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 336:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 337:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 338:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 339:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 340:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 341:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 342:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 343:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 344:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 347:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 348:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 349:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 350:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 351:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 352:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 353:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 354:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 355:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 356:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 357:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 358:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 359:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 360:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 361:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 362:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 363:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 364:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 365:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 366:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 367:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 368:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 369:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 370:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 371:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 372:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 373:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 374:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 375:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 376:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 377:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 378:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 379:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 380:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 381:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 382:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 383:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 384:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 385:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 386:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 387:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 388:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 389:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 390:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 391:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 392:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 393:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 394:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 395:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 396:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 397:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 398:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 399:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 400:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 401:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 402:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 403:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 404:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 405:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 406:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 407:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 408:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 409:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 410:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 411:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 415:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 416:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 417:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 419:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 420:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 450               		.loc 4 420 0
 451 00be 8091 E800 		lds r24,232
 452               	.LBE560:
 453               	.LBE559:
  78:Lib/DataflashManager.c **** 	{
  79:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
  80:Lib/DataflashManager.c **** 
  81:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
  82:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
  83:Lib/DataflashManager.c **** 		{
  84:Lib/DataflashManager.c **** 			/* Check if the endpoint is currently empty */
  85:Lib/DataflashManager.c **** 			if (!(Endpoint_IsReadWriteAllowed()))
 454               		.loc 3 85 0
 455 00c2 85FF      		sbrs r24,5
 456 00c4 00C0      		rjmp .L28
 457               	.L31:
  86:Lib/DataflashManager.c **** 			{
  87:Lib/DataflashManager.c **** 				/* Clear the current endpoint bank */
  88:Lib/DataflashManager.c **** 				Endpoint_ClearOUT();
  89:Lib/DataflashManager.c **** 
  90:Lib/DataflashManager.c **** 				/* Wait until the host has sent another packet */
  91:Lib/DataflashManager.c **** 				if (Endpoint_WaitUntilReady())
  92:Lib/DataflashManager.c **** 				  return;
  93:Lib/DataflashManager.c **** 			}
  94:Lib/DataflashManager.c **** 
  95:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
  96:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 458               		.loc 3 96 0
 459 00c6 E0E4      		ldi r30,lo8(64)
 460 00c8 7E12      		cpse r7,r30
 461 00ca 00C0      		rjmp .L30
 462 00cc 00C0      		rjmp .L88
 463               	.L28:
 464               	.LBB561:
 465               	.LBB562:
 421:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 422:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 423:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 424:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 425:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 426:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 427:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 428:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 429:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 430:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 431:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 432:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 433:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 434:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 435:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 436:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 438:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 439:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 440:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 441:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 442:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 443:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 444:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 445:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 446:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 447:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 448:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 449:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 451:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 453:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 454:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 456:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 457:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 458:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 459:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 460:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 461:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 462:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 463:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 464:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 465:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 466:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 467:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 468:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 469:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 470:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 471:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 472:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 473:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 474:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 475:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 476:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 477:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 478:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 479:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 480:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 481:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 482:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 483:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 484:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 485:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 487:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 489:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 490:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 492:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 495:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 496:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 497:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 498:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 499:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 500:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 501:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 502:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 503:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 504:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 505:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 506:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 507:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 508:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 509:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 510:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 511:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 512:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 513:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 514:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 515:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 516:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 517:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 518:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 519:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 520:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 521:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 522:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 523:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 524:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 526:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 528:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 529:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 531:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 466               		.loc 4 531 0
 467 00ce 8091 E800 		lds r24,232
 468 00d2 8B77      		andi r24,lo8(123)
 469 00d4 8093 E800 		sts 232,r24
 470               	.LBE562:
 471               	.LBE561:
  91:Lib/DataflashManager.c **** 				  return;
 472               		.loc 3 91 0
 473 00d8 0E94 0000 		call Endpoint_WaitUntilReady
 474               	.LVL31:
 475 00dc 8823      		tst r24
 476 00de 01F0      		breq .L31
 477 00e0 00C0      		rjmp .L22
 478               	.L88:
  97:Lib/DataflashManager.c **** 			{
  98:Lib/DataflashManager.c **** 				/* Write the Dataflash buffer contents back to the Dataflash page */
  99:Lib/DataflashManager.c **** 				Dataflash_WaitWhileBusy();
 479               		.loc 3 99 0
 480 00e2 0E94 0000 		call Dataflash_WaitWhileBusy
 481               	.LVL32:
 100:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWI
 482               		.loc 3 100 0
 483 00e6 6110      		cpse r6,__zero_reg__
 484 00e8 00C0      		rjmp .L61
 485 00ea 83E8      		ldi r24,lo8(-125)
 486 00ec 00C0      		rjmp .L32
 487               	.L61:
 488 00ee 86E8      		ldi r24,lo8(-122)
 489               	.L32:
 490               	.LVL33:
 491               	.LBB563:
 492               	.LBB564:
 493               	.LBB565:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 494               		.loc 2 231 0 discriminator 4
 495 00f0 8EBD      		out 0x2e,r24
 496               	.L33:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 497               		.loc 2 232 0
 498 00f2 0DB4      		in __tmp_reg__,0x2d
 499 00f4 07FE      		sbrs __tmp_reg__,7
 500 00f6 00C0      		rjmp .L33
 501               	.LVL34:
 502               	.LBE565:
 503               	.LBE564:
 504               	.LBE563:
 101:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 505               		.loc 3 101 0 discriminator 4
 506 00f8 60E0      		ldi r22,0
 507 00fa 70E0      		ldi r23,0
 508 00fc CE01      		movw r24,r28
 509 00fe 0E94 0000 		call Dataflash_SendAddressBytes
 510               	.LVL35:
 102:Lib/DataflashManager.c **** 
 103:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 104:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 105:Lib/DataflashManager.c **** 				CurrDFPage++;
 511               		.loc 3 105 0 discriminator 4
 512 0102 2196      		adiw r28,1
 513               	.LVL36:
 514               	.LBB566:
 515               	.LBB567:
 106:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 516               		.loc 1 106 0 discriminator 4
 517 0104 8EB1      		in r24,0xe
 518               	.LBE567:
 519               	.LBE566:
 106:Lib/DataflashManager.c **** 
 107:Lib/DataflashManager.c **** 				/* Once all the Dataflash ICs have had their first buffers filled, switch buffers to maintain t
 108:Lib/DataflashManager.c **** 				if (Dataflash_GetSelectedChip() == DATAFLASH_CHIP_MASK(DATAFLASH_TOTALCHIPS))
 520               		.loc 3 108 0 discriminator 4
 521 0106 8370      		andi r24,lo8(3)
 522 0108 8130      		cpi r24,lo8(1)
 523 010a 01F4      		brne .L34
 109:Lib/DataflashManager.c **** 				  UsingSecondBuffer = !(UsingSecondBuffer);
 524               		.loc 3 109 0
 525 010c 6826      		eor r6,r24
 526               	.LVL37:
 527               	.L34:
 110:Lib/DataflashManager.c **** 
 111:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 112:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 528               		.loc 3 112 0
 529 010e CE01      		movw r24,r28
 530 0110 0E94 0000 		call Dataflash_SelectChipFromPage
 531               	.LVL38:
 113:Lib/DataflashManager.c **** 
 114:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
 115:Lib/DataflashManager.c **** 				/* If less than one Dataflash page remaining, copy over the existing page to preserve trailing 
 116:Lib/DataflashManager.c **** 				if ((TotalBlocks * (VIRTUAL_MEMORY_BLOCK_SIZE >> 4)) < (DATAFLASH_PAGE_SIZE >> 4))
 532               		.loc 3 116 0
 533 0114 F0E4      		ldi r31,64
 534 0116 CF16      		cp r12,r31
 535 0118 D104      		cpc r13,__zero_reg__
 536 011a 00F4      		brsh .L35
 117:Lib/DataflashManager.c **** 				{
 118:Lib/DataflashManager.c **** 					/* Copy selected dataflash's current page contents to the Dataflash buffer */
 119:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 537               		.loc 3 119 0
 538 011c 0E94 0000 		call Dataflash_WaitWhileBusy
 539               	.LVL39:
 120:Lib/DataflashManager.c **** 					Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_MAINMEMTOBUFF2 : DF_CMD_MAINMEMTOBUFF1);
 540               		.loc 3 120 0
 541 0120 6110      		cpse r6,__zero_reg__
 542 0122 00C0      		rjmp .L62
 543 0124 83E5      		ldi r24,lo8(83)
 544 0126 00C0      		rjmp .L36
 545               	.L62:
 546 0128 85E5      		ldi r24,lo8(85)
 547               	.L36:
 548               	.LVL40:
 549               	.LBB568:
 550               	.LBB569:
 551               	.LBB570:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 552               		.loc 2 231 0 discriminator 4
 553 012a 8EBD      		out 0x2e,r24
 554               	.L37:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 555               		.loc 2 232 0
 556 012c 0DB4      		in __tmp_reg__,0x2d
 557 012e 07FE      		sbrs __tmp_reg__,7
 558 0130 00C0      		rjmp .L37
 559               	.LVL41:
 560               	.LBE570:
 561               	.LBE569:
 562               	.LBE568:
 121:Lib/DataflashManager.c **** 					Dataflash_SendAddressBytes(CurrDFPage, 0);
 563               		.loc 3 121 0 discriminator 4
 564 0132 60E0      		ldi r22,0
 565 0134 70E0      		ldi r23,0
 566 0136 CE01      		movw r24,r28
 567 0138 0E94 0000 		call Dataflash_SendAddressBytes
 568               	.LVL42:
 122:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 569               		.loc 3 122 0 discriminator 4
 570 013c 0E94 0000 		call Dataflash_WaitWhileBusy
 571               	.LVL43:
 572               	.L35:
 123:Lib/DataflashManager.c **** 				}
 124:Lib/DataflashManager.c **** #endif
 125:Lib/DataflashManager.c **** 
 126:Lib/DataflashManager.c **** 				/* Send the Dataflash buffer write command */
 127:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2WRITE : DF_CMD_BUFF1WRITE);
 573               		.loc 3 127 0
 574 0140 6110      		cpse r6,__zero_reg__
 575 0142 00C0      		rjmp .L63
 576 0144 84E8      		ldi r24,lo8(-124)
 577 0146 00C0      		rjmp .L38
 578               	.L63:
 579 0148 87E8      		ldi r24,lo8(-121)
 580               	.L38:
 581               	.LVL44:
 582               	.LBB571:
 583               	.LBB572:
 584               	.LBB573:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 585               		.loc 2 231 0 discriminator 4
 586 014a 8EBD      		out 0x2e,r24
 587               	.L39:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 588               		.loc 2 232 0
 589 014c 0DB4      		in __tmp_reg__,0x2d
 590 014e 07FE      		sbrs __tmp_reg__,7
 591 0150 00C0      		rjmp .L39
 592               	.LVL45:
 593               	.LBE573:
 594               	.LBE572:
 595               	.LBE571:
 128:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(0, 0);
 596               		.loc 3 128 0 discriminator 4
 597 0152 60E0      		ldi r22,0
 598 0154 70E0      		ldi r23,0
 599 0156 80E0      		ldi r24,0
 600 0158 90E0      		ldi r25,0
 601 015a 0E94 0000 		call Dataflash_SendAddressBytes
 602               	.LVL46:
 104:Lib/DataflashManager.c **** 				CurrDFPage++;
 603               		.loc 3 104 0 discriminator 4
 604 015e 712C      		mov r7,__zero_reg__
 605               	.LVL47:
 606               	.L30:
 607               	.LBB574:
 608               	.LBB575:
 532:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 533:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 534:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 535:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 536:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 537:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 538:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 539:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 540:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 541:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 542:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 543:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 544:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 545:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 546:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 547:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 548:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 549:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 550:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 551:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 552:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 553:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 554:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 555:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 556:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 557:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 558:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 559:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 560:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 561:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 562:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 563:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 564:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 565:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 566:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 567:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 568:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 569:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 570:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 571:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 572:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 573:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 574:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 575:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 576:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 577:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 578:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 579:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 580:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 581:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 582:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 583:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 584:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 585:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 586:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 587:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 588:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 589:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 590:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 591:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 592:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 593:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 594:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 595:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 596:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 597:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 598:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 599:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 600:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 601:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 602:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 603:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 604:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 605:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 606:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 607:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 608:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 609:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 610:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 611:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 612:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 609               		.loc 4 612 0
 610 0160 8091 F100 		lds r24,241
 611               	.LBE575:
 612               	.LBE574:
 613               	.LBB576:
 614               	.LBB577:
 615               	.LBB578:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 616               		.loc 2 231 0
 617 0164 8EBD      		out 0x2e,r24
 618               	.L40:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 619               		.loc 2 232 0
 620 0166 0DB4      		in __tmp_reg__,0x2d
 621 0168 07FE      		sbrs __tmp_reg__,7
 622 016a 00C0      		rjmp .L40
 623               	.LBE578:
 624               	.LBE577:
 625               	.LBE576:
 626               	.LBB579:
 627               	.LBB580:
 628               		.loc 4 612 0
 629 016c 8091 F100 		lds r24,241
 630               	.LBE580:
 631               	.LBE579:
 632               	.LBB581:
 633               	.LBB582:
 634               	.LBB583:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 635               		.loc 2 231 0
 636 0170 8EBD      		out 0x2e,r24
 637               	.L41:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 638               		.loc 2 232 0
 639 0172 0DB4      		in __tmp_reg__,0x2d
 640 0174 07FE      		sbrs __tmp_reg__,7
 641 0176 00C0      		rjmp .L41
 642               	.LBE583:
 643               	.LBE582:
 644               	.LBE581:
 645               	.LBB584:
 646               	.LBB585:
 647               		.loc 4 612 0
 648 0178 8091 F100 		lds r24,241
 649               	.LBE585:
 650               	.LBE584:
 651               	.LBB586:
 652               	.LBB587:
 653               	.LBB588:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 654               		.loc 2 231 0
 655 017c 8EBD      		out 0x2e,r24
 656               	.L42:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 657               		.loc 2 232 0
 658 017e 0DB4      		in __tmp_reg__,0x2d
 659 0180 07FE      		sbrs __tmp_reg__,7
 660 0182 00C0      		rjmp .L42
 661               	.LBE588:
 662               	.LBE587:
 663               	.LBE586:
 664               	.LBB589:
 665               	.LBB590:
 666               		.loc 4 612 0
 667 0184 8091 F100 		lds r24,241
 668               	.LBE590:
 669               	.LBE589:
 670               	.LBB591:
 671               	.LBB592:
 672               	.LBB593:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 673               		.loc 2 231 0
 674 0188 8EBD      		out 0x2e,r24
 675               	.L43:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 676               		.loc 2 232 0
 677 018a 0DB4      		in __tmp_reg__,0x2d
 678 018c 07FE      		sbrs __tmp_reg__,7
 679 018e 00C0      		rjmp .L43
 680               	.LBE593:
 681               	.LBE592:
 682               	.LBE591:
 683               	.LBB594:
 684               	.LBB595:
 685               		.loc 4 612 0
 686 0190 8091 F100 		lds r24,241
 687               	.LBE595:
 688               	.LBE594:
 689               	.LBB596:
 690               	.LBB597:
 691               	.LBB598:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 692               		.loc 2 231 0
 693 0194 8EBD      		out 0x2e,r24
 694               	.L44:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 695               		.loc 2 232 0
 696 0196 0DB4      		in __tmp_reg__,0x2d
 697 0198 07FE      		sbrs __tmp_reg__,7
 698 019a 00C0      		rjmp .L44
 699               	.LBE598:
 700               	.LBE597:
 701               	.LBE596:
 702               	.LBB599:
 703               	.LBB600:
 704               		.loc 4 612 0
 705 019c 8091 F100 		lds r24,241
 706               	.LBE600:
 707               	.LBE599:
 708               	.LBB601:
 709               	.LBB602:
 710               	.LBB603:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 711               		.loc 2 231 0
 712 01a0 8EBD      		out 0x2e,r24
 713               	.L45:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 714               		.loc 2 232 0
 715 01a2 0DB4      		in __tmp_reg__,0x2d
 716 01a4 07FE      		sbrs __tmp_reg__,7
 717 01a6 00C0      		rjmp .L45
 718               	.LBE603:
 719               	.LBE602:
 720               	.LBE601:
 721               	.LBB604:
 722               	.LBB605:
 723               		.loc 4 612 0
 724 01a8 8091 F100 		lds r24,241
 725               	.LBE605:
 726               	.LBE604:
 727               	.LBB606:
 728               	.LBB607:
 729               	.LBB608:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 730               		.loc 2 231 0
 731 01ac 8EBD      		out 0x2e,r24
 732               	.L46:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 733               		.loc 2 232 0
 734 01ae 0DB4      		in __tmp_reg__,0x2d
 735 01b0 07FE      		sbrs __tmp_reg__,7
 736 01b2 00C0      		rjmp .L46
 737               	.LBE608:
 738               	.LBE607:
 739               	.LBE606:
 740               	.LBB609:
 741               	.LBB610:
 742               		.loc 4 612 0
 743 01b4 8091 F100 		lds r24,241
 744               	.LBE610:
 745               	.LBE609:
 746               	.LBB611:
 747               	.LBB612:
 748               	.LBB613:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 749               		.loc 2 231 0
 750 01b8 8EBD      		out 0x2e,r24
 751               	.L47:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 752               		.loc 2 232 0
 753 01ba 0DB4      		in __tmp_reg__,0x2d
 754 01bc 07FE      		sbrs __tmp_reg__,7
 755 01be 00C0      		rjmp .L47
 756               	.LBE613:
 757               	.LBE612:
 758               	.LBE611:
 759               	.LBB614:
 760               	.LBB615:
 761               		.loc 4 612 0
 762 01c0 8091 F100 		lds r24,241
 763               	.LBE615:
 764               	.LBE614:
 765               	.LBB616:
 766               	.LBB617:
 767               	.LBB618:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 768               		.loc 2 231 0
 769 01c4 8EBD      		out 0x2e,r24
 770               	.L48:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 771               		.loc 2 232 0
 772 01c6 0DB4      		in __tmp_reg__,0x2d
 773 01c8 07FE      		sbrs __tmp_reg__,7
 774 01ca 00C0      		rjmp .L48
 775               	.LBE618:
 776               	.LBE617:
 777               	.LBE616:
 778               	.LBB619:
 779               	.LBB620:
 780               		.loc 4 612 0
 781 01cc 8091 F100 		lds r24,241
 782               	.LBE620:
 783               	.LBE619:
 784               	.LBB621:
 785               	.LBB622:
 786               	.LBB623:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 787               		.loc 2 231 0
 788 01d0 8EBD      		out 0x2e,r24
 789               	.L49:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 790               		.loc 2 232 0
 791 01d2 0DB4      		in __tmp_reg__,0x2d
 792 01d4 07FE      		sbrs __tmp_reg__,7
 793 01d6 00C0      		rjmp .L49
 794               	.LBE623:
 795               	.LBE622:
 796               	.LBE621:
 797               	.LBB624:
 798               	.LBB625:
 799               		.loc 4 612 0
 800 01d8 8091 F100 		lds r24,241
 801               	.LBE625:
 802               	.LBE624:
 803               	.LBB626:
 804               	.LBB627:
 805               	.LBB628:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 806               		.loc 2 231 0
 807 01dc 8EBD      		out 0x2e,r24
 808               	.L50:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 809               		.loc 2 232 0
 810 01de 0DB4      		in __tmp_reg__,0x2d
 811 01e0 07FE      		sbrs __tmp_reg__,7
 812 01e2 00C0      		rjmp .L50
 813               	.LBE628:
 814               	.LBE627:
 815               	.LBE626:
 816               	.LBB629:
 817               	.LBB630:
 818               		.loc 4 612 0
 819 01e4 8091 F100 		lds r24,241
 820               	.LBE630:
 821               	.LBE629:
 822               	.LBB631:
 823               	.LBB632:
 824               	.LBB633:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 825               		.loc 2 231 0
 826 01e8 8EBD      		out 0x2e,r24
 827               	.L51:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 828               		.loc 2 232 0
 829 01ea 0DB4      		in __tmp_reg__,0x2d
 830 01ec 07FE      		sbrs __tmp_reg__,7
 831 01ee 00C0      		rjmp .L51
 832               	.LBE633:
 833               	.LBE632:
 834               	.LBE631:
 835               	.LBB634:
 836               	.LBB635:
 837               		.loc 4 612 0
 838 01f0 8091 F100 		lds r24,241
 839               	.LBE635:
 840               	.LBE634:
 841               	.LBB636:
 842               	.LBB637:
 843               	.LBB638:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 844               		.loc 2 231 0
 845 01f4 8EBD      		out 0x2e,r24
 846               	.L52:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 847               		.loc 2 232 0
 848 01f6 0DB4      		in __tmp_reg__,0x2d
 849 01f8 07FE      		sbrs __tmp_reg__,7
 850 01fa 00C0      		rjmp .L52
 851               	.LBE638:
 852               	.LBE637:
 853               	.LBE636:
 854               	.LBB639:
 855               	.LBB640:
 856               		.loc 4 612 0
 857 01fc 8091 F100 		lds r24,241
 858               	.LBE640:
 859               	.LBE639:
 860               	.LBB641:
 861               	.LBB642:
 862               	.LBB643:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 863               		.loc 2 231 0
 864 0200 8EBD      		out 0x2e,r24
 865               	.L53:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 866               		.loc 2 232 0
 867 0202 0DB4      		in __tmp_reg__,0x2d
 868 0204 07FE      		sbrs __tmp_reg__,7
 869 0206 00C0      		rjmp .L53
 870               	.LBE643:
 871               	.LBE642:
 872               	.LBE641:
 873               	.LBB644:
 874               	.LBB645:
 875               		.loc 4 612 0
 876 0208 8091 F100 		lds r24,241
 877               	.LBE645:
 878               	.LBE644:
 879               	.LBB646:
 880               	.LBB647:
 881               	.LBB648:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 882               		.loc 2 231 0
 883 020c 8EBD      		out 0x2e,r24
 884               	.L54:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 885               		.loc 2 232 0
 886 020e 0DB4      		in __tmp_reg__,0x2d
 887 0210 07FE      		sbrs __tmp_reg__,7
 888 0212 00C0      		rjmp .L54
 889               	.LBE648:
 890               	.LBE647:
 891               	.LBE646:
 892               	.LBB649:
 893               	.LBB650:
 894               		.loc 4 612 0
 895 0214 8091 F100 		lds r24,241
 896               	.LBE650:
 897               	.LBE649:
 898               	.LBB651:
 899               	.LBB652:
 900               	.LBB653:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 901               		.loc 2 231 0
 902 0218 8EBD      		out 0x2e,r24
 903               	.L55:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 904               		.loc 2 232 0
 905 021a 0DB4      		in __tmp_reg__,0x2d
 906 021c 07FE      		sbrs __tmp_reg__,7
 907 021e 00C0      		rjmp .L55
 908               	.LBE653:
 909               	.LBE652:
 910               	.LBE651:
 129:Lib/DataflashManager.c **** 			}
 130:Lib/DataflashManager.c **** 
 131:Lib/DataflashManager.c **** 			/* Write one 16-byte chunk of data to the Dataflash */
 132:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 133:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 134:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 135:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 136:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 137:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 138:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 139:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 140:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 141:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 142:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 143:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 144:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 145:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 146:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 147:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 148:Lib/DataflashManager.c **** 
 149:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 150:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 911               		.loc 3 150 0
 912 0220 7394      		inc r7
 913               	.LVL48:
 151:Lib/DataflashManager.c **** 
 152:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 153:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 154:Lib/DataflashManager.c **** 
 155:Lib/DataflashManager.c **** 			/* Check if the current command is being aborted by the host */
 156:Lib/DataflashManager.c **** 			if (MSInterfaceInfo->State.IsMassStoreReset)
 914               		.loc 3 156 0
 915 0222 F401      		movw r30,r8
 916 0224 86A9      		ldd r24,Z+54
 917 0226 8111      		cpse r24,__zero_reg__
 918 0228 00C0      		rjmp .L22
 919 022a 5A94      		dec r5
 920               	.LVL49:
  82:Lib/DataflashManager.c **** 		{
 921               		.loc 3 82 0
 922 022c 5110      		cpse r5,__zero_reg__
 923 022e 00C0      		rjmp .L56
 157:Lib/DataflashManager.c **** 			  return;
 158:Lib/DataflashManager.c **** 		}
 159:Lib/DataflashManager.c **** 
 160:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 161:Lib/DataflashManager.c **** 		TotalBlocks--;
 924               		.loc 3 161 0
 925 0230 0150      		subi r16,1
 926 0232 1109      		sbc r17,__zero_reg__
 927               	.LVL50:
 928 0234 F0E2      		ldi r31,32
 929 0236 EF1A      		sub r14,r31
 930 0238 F108      		sbc r15,__zero_reg__
 931 023a 00C0      		rjmp .L26
 932               	.LVL51:
 933               	.L57:
 934               	.LBE558:
 162:Lib/DataflashManager.c **** 	}
 163:Lib/DataflashManager.c **** 
 164:Lib/DataflashManager.c **** 	/* Write the Dataflash buffer contents back to the Dataflash page */
 165:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 935               		.loc 3 165 0
 936 023c 0E94 0000 		call Dataflash_WaitWhileBusy
 937               	.LVL52:
 166:Lib/DataflashManager.c **** 	Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWITHE
 938               		.loc 3 166 0
 939 0240 6110      		cpse r6,__zero_reg__
 940 0242 00C0      		rjmp .L64
 941 0244 83E8      		ldi r24,lo8(-125)
 942 0246 00C0      		rjmp .L58
 943               	.L64:
 944 0248 86E8      		ldi r24,lo8(-122)
 945               	.L58:
 946               	.LVL53:
 947               	.LBB654:
 948               	.LBB655:
 949               	.LBB656:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 950               		.loc 2 231 0 discriminator 4
 951 024a 8EBD      		out 0x2e,r24
 952               	.L59:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 953               		.loc 2 232 0
 954 024c 0DB4      		in __tmp_reg__,0x2d
 955 024e 07FE      		sbrs __tmp_reg__,7
 956 0250 00C0      		rjmp .L59
 957               	.LVL54:
 958               	.LBE656:
 959               	.LBE655:
 960               	.LBE654:
 167:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0x00);
 961               		.loc 3 167 0 discriminator 4
 962 0252 60E0      		ldi r22,0
 963 0254 70E0      		ldi r23,0
 964 0256 CE01      		movw r24,r28
 965 0258 0E94 0000 		call Dataflash_SendAddressBytes
 966               	.LVL55:
 168:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 967               		.loc 3 168 0 discriminator 4
 968 025c 0E94 0000 		call Dataflash_WaitWhileBusy
 969               	.LVL56:
 970               	.LBB657:
 971               	.LBB658:
 420:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 972               		.loc 4 420 0 discriminator 4
 973 0260 8091 E800 		lds r24,232
 974               	.LBE658:
 975               	.LBE657:
 169:Lib/DataflashManager.c **** 
 170:Lib/DataflashManager.c **** 	/* If the endpoint is empty, clear it ready for the next packet from the host */
 171:Lib/DataflashManager.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 976               		.loc 3 171 0 discriminator 4
 977 0264 85FD      		sbrc r24,5
 978 0266 00C0      		rjmp .L60
 979               	.LBB659:
 980               	.LBB660:
 531:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 981               		.loc 4 531 0
 982 0268 8091 E800 		lds r24,232
 983 026c 8B77      		andi r24,lo8(123)
 984 026e 8093 E800 		sts 232,r24
 985               	.L60:
 986               	.LVL57:
 987               	.LBE660:
 988               	.LBE659:
 989               	.LBB661:
 990               	.LBB662:
 991               	.LBB663:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 992               		.loc 1 117 0
 993 0272 8EB1      		in r24,0xe
 994 0274 8360      		ori r24,lo8(3)
 995 0276 8EB9      		out 0xe,r24
 996               	.LVL58:
 997               	.L22:
 998               	/* epilogue start */
 999               	.LBE663:
 1000               	.LBE662:
 1001               	.LBE661:
 172:Lib/DataflashManager.c **** 	  Endpoint_ClearOUT();
 173:Lib/DataflashManager.c **** 
 174:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 175:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 176:Lib/DataflashManager.c **** }
 1002               		.loc 3 176 0
 1003 0278 DF91      		pop r29
 1004 027a CF91      		pop r28
 1005 027c 1F91      		pop r17
 1006 027e 0F91      		pop r16
 1007               	.LVL59:
 1008 0280 FF90      		pop r15
 1009 0282 EF90      		pop r14
 1010 0284 DF90      		pop r13
 1011 0286 CF90      		pop r12
 1012 0288 BF90      		pop r11
 1013 028a AF90      		pop r10
 1014 028c 9F90      		pop r9
 1015 028e 8F90      		pop r8
 1016               	.LVL60:
 1017 0290 7F90      		pop r7
 1018 0292 6F90      		pop r6
 1019 0294 5F90      		pop r5
 1020 0296 4F90      		pop r4
 1021 0298 0895      		ret
 1022               		.cfi_endproc
 1023               	.LFE205:
 1025               		.section	.text.DataflashManager_ReadBlocks,"ax",@progbits
 1026               	.global	DataflashManager_ReadBlocks
 1028               	DataflashManager_ReadBlocks:
 1029               	.LFB206:
 177:Lib/DataflashManager.c **** 
 178:Lib/DataflashManager.c **** /** Reads blocks (OS blocks, not Dataflash pages) from the storage medium, the board Dataflash IC(s
 179:Lib/DataflashManager.c ****  *  the pre-selected data IN endpoint. This routine reads in Dataflash page sized blocks from the D
 180:Lib/DataflashManager.c ****  *  and writes them in OS sized blocks to the endpoint.
 181:Lib/DataflashManager.c ****  *
 182:Lib/DataflashManager.c ****  *  \param[in] MSInterfaceInfo  Pointer to a structure containing a Mass Storage Class configuratio
 183:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the read sequence
 184:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to read
 185:Lib/DataflashManager.c ****  */
 186:Lib/DataflashManager.c **** void DataflashManager_ReadBlocks(USB_ClassInfo_MS_Device_t* const MSInterfaceInfo,
 187:Lib/DataflashManager.c ****                                  const uint32_t BlockAddress,
 188:Lib/DataflashManager.c ****                                  uint16_t TotalBlocks)
 189:Lib/DataflashManager.c **** {
 1030               		.loc 3 189 0
 1031               		.cfi_startproc
 1032               	.LVL61:
 1033 0000 8F92      		push r8
 1034               	.LCFI16:
 1035               		.cfi_def_cfa_offset 3
 1036               		.cfi_offset 8, -2
 1037 0002 9F92      		push r9
 1038               	.LCFI17:
 1039               		.cfi_def_cfa_offset 4
 1040               		.cfi_offset 9, -3
 1041 0004 AF92      		push r10
 1042               	.LCFI18:
 1043               		.cfi_def_cfa_offset 5
 1044               		.cfi_offset 10, -4
 1045 0006 BF92      		push r11
 1046               	.LCFI19:
 1047               		.cfi_def_cfa_offset 6
 1048               		.cfi_offset 11, -5
 1049 0008 CF92      		push r12
 1050               	.LCFI20:
 1051               		.cfi_def_cfa_offset 7
 1052               		.cfi_offset 12, -6
 1053 000a DF92      		push r13
 1054               	.LCFI21:
 1055               		.cfi_def_cfa_offset 8
 1056               		.cfi_offset 13, -7
 1057 000c EF92      		push r14
 1058               	.LCFI22:
 1059               		.cfi_def_cfa_offset 9
 1060               		.cfi_offset 14, -8
 1061 000e FF92      		push r15
 1062               	.LCFI23:
 1063               		.cfi_def_cfa_offset 10
 1064               		.cfi_offset 15, -9
 1065 0010 0F93      		push r16
 1066               	.LCFI24:
 1067               		.cfi_def_cfa_offset 11
 1068               		.cfi_offset 16, -10
 1069 0012 1F93      		push r17
 1070               	.LCFI25:
 1071               		.cfi_def_cfa_offset 12
 1072               		.cfi_offset 17, -11
 1073 0014 CF93      		push r28
 1074               	.LCFI26:
 1075               		.cfi_def_cfa_offset 13
 1076               		.cfi_offset 28, -12
 1077 0016 DF93      		push r29
 1078               	.LCFI27:
 1079               		.cfi_def_cfa_offset 14
 1080               		.cfi_offset 29, -13
 1081               	/* prologue: function */
 1082               	/* frame size = 0 */
 1083               	/* stack size = 12 */
 1084               	.L__stack_usage = 12
 1085 0018 6C01      		movw r12,r24
 1086 001a 7901      		movw r14,r18
 190:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 1087               		.loc 3 190 0
 1088 001c 4A01      		movw r8,r20
 1089 001e 5B01      		movw r10,r22
 1090 0020 29E0      		ldi r18,9
 1091               		1:
 1092 0022 880C      		lsl r8
 1093 0024 991C      		rol r9
 1094 0026 AA1C      		rol r10
 1095 0028 BB1C      		rol r11
 1096 002a 2A95      		dec r18
 1097 002c 01F4      		brne 1b
 1098               	.LVL62:
 1099 002e 3AE0      		ldi r19,10
 1100               		1:
 1101 0030 B694      		lsr r11
 1102 0032 A794      		ror r10
 1103 0034 9794      		ror r9
 1104 0036 8794      		ror r8
 1105 0038 3A95      		dec r19
 1106 003a 01F4      		brne 1b
 1107 003c 8401      		movw r16,r8
 1108               	.LVL63:
 191:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 1109               		.loc 3 191 0
 1110 003e EA01      		movw r28,r20
 1111 0040 DC2F      		mov r29,r28
 1112 0042 CC27      		clr r28
 1113 0044 DD0F      		lsl r29
 1114               	.LVL64:
 1115 0046 CC27      		clr r28
 1116 0048 D270      		andi r29,2
 1117               	.LVL65:
 192:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
 193:Lib/DataflashManager.c **** 
 194:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
 195:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 1118               		.loc 3 195 0
 1119 004a C401      		movw r24,r8
 1120               	.LVL66:
 1121 004c 0E94 0000 		call Dataflash_SelectChipFromPage
 1122               	.LVL67:
 1123               	.LBB664:
 1124               	.LBB665:
 1125               	.LBB666:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1126               		.loc 2 231 0
 1127 0050 82ED      		ldi r24,lo8(-46)
 1128 0052 8EBD      		out 0x2e,r24
 1129               	.L90:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1130               		.loc 2 232 0
 1131 0054 0DB4      		in __tmp_reg__,0x2d
 1132 0056 07FE      		sbrs __tmp_reg__,7
 1133 0058 00C0      		rjmp .L90
 1134               	.LVL68:
 1135               	.LBE666:
 1136               	.LBE665:
 1137               	.LBE664:
 196:Lib/DataflashManager.c **** 
 197:Lib/DataflashManager.c **** 	/* Send the Dataflash main memory page read command */
 198:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 199:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, CurrDFPageByte);
 1138               		.loc 3 199 0
 1139 005a BE01      		movw r22,r28
 1140 005c C401      		movw r24,r8
 1141 005e 0E94 0000 		call Dataflash_SendAddressBytes
 1142               	.LVL69:
 1143               	.LBB667:
 1144               	.LBB668:
 1145               	.LBB669:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1146               		.loc 2 231 0
 1147 0062 1EBC      		out 0x2e,__zero_reg__
 1148               	.L91:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1149               		.loc 2 232 0
 1150 0064 0DB4      		in __tmp_reg__,0x2d
 1151 0066 07FE      		sbrs __tmp_reg__,7
 1152 0068 00C0      		rjmp .L91
 1153               	.LVL70:
 1154               	.LBE669:
 1155               	.LBE668:
 1156               	.LBE667:
 1157               	.LBB670:
 1158               	.LBB671:
 1159               	.LBB672:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1160               		.loc 2 231 0
 1161 006a 1EBC      		out 0x2e,__zero_reg__
 1162               	.L92:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1163               		.loc 2 232 0
 1164 006c 0DB4      		in __tmp_reg__,0x2d
 1165 006e 07FE      		sbrs __tmp_reg__,7
 1166 0070 00C0      		rjmp .L92
 1167               	.LVL71:
 1168               	.LBE672:
 1169               	.LBE671:
 1170               	.LBE670:
 1171               	.LBB673:
 1172               	.LBB674:
 1173               	.LBB675:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1174               		.loc 2 231 0
 1175 0072 1EBC      		out 0x2e,__zero_reg__
 1176               	.L93:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1177               		.loc 2 232 0
 1178 0074 0DB4      		in __tmp_reg__,0x2d
 1179 0076 07FE      		sbrs __tmp_reg__,7
 1180 0078 00C0      		rjmp .L93
 1181               	.LVL72:
 1182               	.LBE675:
 1183               	.LBE674:
 1184               	.LBE673:
 1185               	.LBB676:
 1186               	.LBB677:
 1187               	.LBB678:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1188               		.loc 2 231 0
 1189 007a 1EBC      		out 0x2e,__zero_reg__
 1190               	.L94:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1191               		.loc 2 232 0
 1192 007c 0DB4      		in __tmp_reg__,0x2d
 1193 007e 07FE      		sbrs __tmp_reg__,7
 1194 0080 00C0      		rjmp .L94
 1195               	.LVL73:
 1196               	.LBE678:
 1197               	.LBE677:
 1198               	.LBE676:
 200:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 201:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 202:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 203:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 204:Lib/DataflashManager.c **** 
 205:Lib/DataflashManager.c **** 	/* Wait until endpoint is ready before continuing */
 206:Lib/DataflashManager.c **** 	if (Endpoint_WaitUntilReady())
 1199               		.loc 3 206 0
 1200 0082 0E94 0000 		call Endpoint_WaitUntilReady
 1201               	.LVL74:
 1202 0086 8111      		cpse r24,__zero_reg__
 1203 0088 00C0      		rjmp .L89
 192:Lib/DataflashManager.c **** 
 1204               		.loc 3 192 0
 1205 008a 84E0      		ldi r24,4
 1206               		1:
 1207 008c D695      		lsr r29
 1208 008e C795      		ror r28
 1209 0090 8A95      		dec r24
 1210 0092 01F4      		brne 1b
 1211               	.LVL75:
 1212               	.LBB679:
 1213               	.LBB680:
 1214               	.LBB681:
 1215               	.LBB682:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1216               		.loc 2 231 0
 1217 0094 92ED      		ldi r25,lo8(-46)
 1218 0096 B92E      		mov r11,r25
 1219               	.LVL76:
 1220               	.L96:
 1221               	.LBE682:
 1222               	.LBE681:
 1223               	.LBE680:
 1224               	.LBE679:
 207:Lib/DataflashManager.c **** 	  return;
 208:Lib/DataflashManager.c **** 
 209:Lib/DataflashManager.c **** 	while (TotalBlocks)
 1225               		.loc 3 209 0
 1226 0098 E114      		cp r14,__zero_reg__
 1227 009a F104      		cpc r15,__zero_reg__
 1228 009c 01F4      		brne .+2
 1229 009e 00C0      		rjmp .L153
 1230 00a0 D0E2      		ldi r29,lo8(32)
 1231               	.L123:
 1232               	.LVL77:
 1233               	.LBB785:
 1234               	.LBB687:
 1235               	.LBB688:
 420:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1236               		.loc 4 420 0
 1237 00a2 8091 E800 		lds r24,232
 1238               	.LBE688:
 1239               	.LBE687:
 210:Lib/DataflashManager.c **** 	{
 211:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
 212:Lib/DataflashManager.c **** 
 213:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
 214:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
 215:Lib/DataflashManager.c **** 		{
 216:Lib/DataflashManager.c **** 			/* Check if the endpoint is currently full */
 217:Lib/DataflashManager.c **** 			if (!(Endpoint_IsReadWriteAllowed()))
 1240               		.loc 3 217 0
 1241 00a6 85FF      		sbrs r24,5
 1242 00a8 00C0      		rjmp .L98
 1243               	.L101:
 218:Lib/DataflashManager.c **** 			{
 219:Lib/DataflashManager.c **** 				/* Clear the endpoint bank to send its contents to the host */
 220:Lib/DataflashManager.c **** 				Endpoint_ClearIN();
 221:Lib/DataflashManager.c **** 
 222:Lib/DataflashManager.c **** 				/* Wait until the endpoint is ready for more data */
 223:Lib/DataflashManager.c **** 				if (Endpoint_WaitUntilReady())
 224:Lib/DataflashManager.c **** 				  return;
 225:Lib/DataflashManager.c **** 			}
 226:Lib/DataflashManager.c **** 
 227:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
 228:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 1244               		.loc 3 228 0
 1245 00aa C034      		cpi r28,lo8(64)
 1246 00ac 01F4      		brne .L100
 1247               	.LVL78:
 229:Lib/DataflashManager.c **** 			{
 230:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 231:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 232:Lib/DataflashManager.c **** 				CurrDFPage++;
 1248               		.loc 3 232 0
 1249 00ae 0F5F      		subi r16,-1
 1250 00b0 1F4F      		sbci r17,-1
 1251               	.LVL79:
 233:Lib/DataflashManager.c **** 
 234:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 235:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 1252               		.loc 3 235 0
 1253 00b2 C801      		movw r24,r16
 1254 00b4 0E94 0000 		call Dataflash_SelectChipFromPage
 1255               	.LVL80:
 1256               	.LBB689:
 1257               	.LBB685:
 1258               	.LBB683:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1259               		.loc 2 231 0
 1260 00b8 BEBC      		out 0x2e,r11
 1261 00ba 00C0      		rjmp .L102
 1262               	.LVL81:
 1263               	.L98:
 1264               	.LBE683:
 1265               	.LBE685:
 1266               	.LBE689:
 1267               	.LBB690:
 1268               	.LBB691:
 516:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1269               		.loc 4 516 0
 1270 00bc 8091 E800 		lds r24,232
 1271 00c0 8E77      		andi r24,lo8(126)
 1272 00c2 8093 E800 		sts 232,r24
 1273               	.LBE691:
 1274               	.LBE690:
 223:Lib/DataflashManager.c **** 				  return;
 1275               		.loc 3 223 0
 1276 00c6 0E94 0000 		call Endpoint_WaitUntilReady
 1277               	.LVL82:
 1278 00ca 8823      		tst r24
 1279 00cc 01F0      		breq .L101
 1280 00ce 00C0      		rjmp .L89
 1281               	.LVL83:
 1282               	.L102:
 1283               	.LBB692:
 1284               	.LBB686:
 1285               	.LBB684:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1286               		.loc 2 232 0
 1287 00d0 0DB4      		in __tmp_reg__,0x2d
 1288 00d2 07FE      		sbrs __tmp_reg__,7
 1289 00d4 00C0      		rjmp .L102
 1290               	.LVL84:
 1291               	.LBE684:
 1292               	.LBE686:
 1293               	.LBE692:
 236:Lib/DataflashManager.c **** 
 237:Lib/DataflashManager.c **** 				/* Send the Dataflash main memory page read command */
 238:Lib/DataflashManager.c **** 				Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 239:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 1294               		.loc 3 239 0
 1295 00d6 60E0      		ldi r22,0
 1296 00d8 70E0      		ldi r23,0
 1297 00da C801      		movw r24,r16
 1298 00dc 0E94 0000 		call Dataflash_SendAddressBytes
 1299               	.LVL85:
 1300               	.LBB693:
 1301               	.LBB694:
 1302               	.LBB695:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1303               		.loc 2 231 0
 1304 00e0 1EBC      		out 0x2e,__zero_reg__
 1305               	.L103:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1306               		.loc 2 232 0
 1307 00e2 0DB4      		in __tmp_reg__,0x2d
 1308 00e4 07FE      		sbrs __tmp_reg__,7
 1309 00e6 00C0      		rjmp .L103
 1310               	.LVL86:
 1311               	.LBE695:
 1312               	.LBE694:
 1313               	.LBE693:
 1314               	.LBB696:
 1315               	.LBB697:
 1316               	.LBB698:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1317               		.loc 2 231 0
 1318 00e8 1EBC      		out 0x2e,__zero_reg__
 1319               	.L104:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1320               		.loc 2 232 0
 1321 00ea 0DB4      		in __tmp_reg__,0x2d
 1322 00ec 07FE      		sbrs __tmp_reg__,7
 1323 00ee 00C0      		rjmp .L104
 1324               	.LVL87:
 1325               	.LBE698:
 1326               	.LBE697:
 1327               	.LBE696:
 1328               	.LBB699:
 1329               	.LBB700:
 1330               	.LBB701:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1331               		.loc 2 231 0
 1332 00f0 1EBC      		out 0x2e,__zero_reg__
 1333               	.L105:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1334               		.loc 2 232 0
 1335 00f2 0DB4      		in __tmp_reg__,0x2d
 1336 00f4 07FE      		sbrs __tmp_reg__,7
 1337 00f6 00C0      		rjmp .L105
 1338               	.LVL88:
 1339               	.LBE701:
 1340               	.LBE700:
 1341               	.LBE699:
 1342               	.LBB702:
 1343               	.LBB703:
 1344               	.LBB704:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1345               		.loc 2 231 0
 1346 00f8 1EBC      		out 0x2e,__zero_reg__
 1347               	.L106:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1348               		.loc 2 232 0
 1349 00fa 0DB4      		in __tmp_reg__,0x2d
 1350 00fc 07FE      		sbrs __tmp_reg__,7
 1351 00fe 00C0      		rjmp .L106
 1352               	.LBE704:
 1353               	.LBE703:
 1354               	.LBE702:
 231:Lib/DataflashManager.c **** 				CurrDFPage++;
 1355               		.loc 3 231 0
 1356 0100 C0E0      		ldi r28,0
 1357               	.LVL89:
 1358               	.L100:
 1359               	.LBB705:
 1360               	.LBB706:
 1361               	.LBB707:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1362               		.loc 2 243 0
 1363 0102 1EBC      		out 0x2e,__zero_reg__
 1364               	.L107:
 1365               		.loc 2 244 0
 1366 0104 0DB4      		in __tmp_reg__,0x2d
 1367 0106 07FE      		sbrs __tmp_reg__,7
 1368 0108 00C0      		rjmp .L107
 245:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1369               		.loc 2 245 0
 1370 010a 8EB5      		in r24,0x2e
 1371               	.LBE707:
 1372               	.LBE706:
 1373               	.LBE705:
 1374               	.LBB708:
 1375               	.LBB709:
 613:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 614:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 615:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 616:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 617:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 618:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 619:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 620:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 621:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 622:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 623:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 624:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1376               		.loc 4 624 0
 1377 010c 8093 F100 		sts 241,r24
 1378               	.LBE709:
 1379               	.LBE708:
 1380               	.LBB710:
 1381               	.LBB711:
 1382               	.LBB712:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1383               		.loc 2 243 0
 1384 0110 1EBC      		out 0x2e,__zero_reg__
 1385               	.L108:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1386               		.loc 2 244 0
 1387 0112 0DB4      		in __tmp_reg__,0x2d
 1388 0114 07FE      		sbrs __tmp_reg__,7
 1389 0116 00C0      		rjmp .L108
 1390               		.loc 2 245 0
 1391 0118 8EB5      		in r24,0x2e
 1392               	.LBE712:
 1393               	.LBE711:
 1394               	.LBE710:
 1395               	.LBB713:
 1396               	.LBB714:
 1397               		.loc 4 624 0
 1398 011a 8093 F100 		sts 241,r24
 1399               	.LBE714:
 1400               	.LBE713:
 1401               	.LBB715:
 1402               	.LBB716:
 1403               	.LBB717:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1404               		.loc 2 243 0
 1405 011e 1EBC      		out 0x2e,__zero_reg__
 1406               	.L109:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1407               		.loc 2 244 0
 1408 0120 0DB4      		in __tmp_reg__,0x2d
 1409 0122 07FE      		sbrs __tmp_reg__,7
 1410 0124 00C0      		rjmp .L109
 1411               		.loc 2 245 0
 1412 0126 8EB5      		in r24,0x2e
 1413               	.LBE717:
 1414               	.LBE716:
 1415               	.LBE715:
 1416               	.LBB718:
 1417               	.LBB719:
 1418               		.loc 4 624 0
 1419 0128 8093 F100 		sts 241,r24
 1420               	.LBE719:
 1421               	.LBE718:
 1422               	.LBB720:
 1423               	.LBB721:
 1424               	.LBB722:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1425               		.loc 2 243 0
 1426 012c 1EBC      		out 0x2e,__zero_reg__
 1427               	.L110:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1428               		.loc 2 244 0
 1429 012e 0DB4      		in __tmp_reg__,0x2d
 1430 0130 07FE      		sbrs __tmp_reg__,7
 1431 0132 00C0      		rjmp .L110
 1432               		.loc 2 245 0
 1433 0134 8EB5      		in r24,0x2e
 1434               	.LBE722:
 1435               	.LBE721:
 1436               	.LBE720:
 1437               	.LBB723:
 1438               	.LBB724:
 1439               		.loc 4 624 0
 1440 0136 8093 F100 		sts 241,r24
 1441               	.LBE724:
 1442               	.LBE723:
 1443               	.LBB725:
 1444               	.LBB726:
 1445               	.LBB727:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1446               		.loc 2 243 0
 1447 013a 1EBC      		out 0x2e,__zero_reg__
 1448               	.L111:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1449               		.loc 2 244 0
 1450 013c 0DB4      		in __tmp_reg__,0x2d
 1451 013e 07FE      		sbrs __tmp_reg__,7
 1452 0140 00C0      		rjmp .L111
 1453               		.loc 2 245 0
 1454 0142 8EB5      		in r24,0x2e
 1455               	.LBE727:
 1456               	.LBE726:
 1457               	.LBE725:
 1458               	.LBB728:
 1459               	.LBB729:
 1460               		.loc 4 624 0
 1461 0144 8093 F100 		sts 241,r24
 1462               	.LBE729:
 1463               	.LBE728:
 1464               	.LBB730:
 1465               	.LBB731:
 1466               	.LBB732:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1467               		.loc 2 243 0
 1468 0148 1EBC      		out 0x2e,__zero_reg__
 1469               	.L112:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1470               		.loc 2 244 0
 1471 014a 0DB4      		in __tmp_reg__,0x2d
 1472 014c 07FE      		sbrs __tmp_reg__,7
 1473 014e 00C0      		rjmp .L112
 1474               		.loc 2 245 0
 1475 0150 8EB5      		in r24,0x2e
 1476               	.LBE732:
 1477               	.LBE731:
 1478               	.LBE730:
 1479               	.LBB733:
 1480               	.LBB734:
 1481               		.loc 4 624 0
 1482 0152 8093 F100 		sts 241,r24
 1483               	.LBE734:
 1484               	.LBE733:
 1485               	.LBB735:
 1486               	.LBB736:
 1487               	.LBB737:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1488               		.loc 2 243 0
 1489 0156 1EBC      		out 0x2e,__zero_reg__
 1490               	.L113:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1491               		.loc 2 244 0
 1492 0158 0DB4      		in __tmp_reg__,0x2d
 1493 015a 07FE      		sbrs __tmp_reg__,7
 1494 015c 00C0      		rjmp .L113
 1495               		.loc 2 245 0
 1496 015e 8EB5      		in r24,0x2e
 1497               	.LBE737:
 1498               	.LBE736:
 1499               	.LBE735:
 1500               	.LBB738:
 1501               	.LBB739:
 1502               		.loc 4 624 0
 1503 0160 8093 F100 		sts 241,r24
 1504               	.LBE739:
 1505               	.LBE738:
 1506               	.LBB740:
 1507               	.LBB741:
 1508               	.LBB742:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1509               		.loc 2 243 0
 1510 0164 1EBC      		out 0x2e,__zero_reg__
 1511               	.L114:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1512               		.loc 2 244 0
 1513 0166 0DB4      		in __tmp_reg__,0x2d
 1514 0168 07FE      		sbrs __tmp_reg__,7
 1515 016a 00C0      		rjmp .L114
 1516               		.loc 2 245 0
 1517 016c 8EB5      		in r24,0x2e
 1518               	.LBE742:
 1519               	.LBE741:
 1520               	.LBE740:
 1521               	.LBB743:
 1522               	.LBB744:
 1523               		.loc 4 624 0
 1524 016e 8093 F100 		sts 241,r24
 1525               	.LBE744:
 1526               	.LBE743:
 1527               	.LBB745:
 1528               	.LBB746:
 1529               	.LBB747:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1530               		.loc 2 243 0
 1531 0172 1EBC      		out 0x2e,__zero_reg__
 1532               	.L115:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1533               		.loc 2 244 0
 1534 0174 0DB4      		in __tmp_reg__,0x2d
 1535 0176 07FE      		sbrs __tmp_reg__,7
 1536 0178 00C0      		rjmp .L115
 1537               		.loc 2 245 0
 1538 017a 8EB5      		in r24,0x2e
 1539               	.LBE747:
 1540               	.LBE746:
 1541               	.LBE745:
 1542               	.LBB748:
 1543               	.LBB749:
 1544               		.loc 4 624 0
 1545 017c 8093 F100 		sts 241,r24
 1546               	.LBE749:
 1547               	.LBE748:
 1548               	.LBB750:
 1549               	.LBB751:
 1550               	.LBB752:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1551               		.loc 2 243 0
 1552 0180 1EBC      		out 0x2e,__zero_reg__
 1553               	.L116:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1554               		.loc 2 244 0
 1555 0182 0DB4      		in __tmp_reg__,0x2d
 1556 0184 07FE      		sbrs __tmp_reg__,7
 1557 0186 00C0      		rjmp .L116
 1558               		.loc 2 245 0
 1559 0188 8EB5      		in r24,0x2e
 1560               	.LBE752:
 1561               	.LBE751:
 1562               	.LBE750:
 1563               	.LBB753:
 1564               	.LBB754:
 1565               		.loc 4 624 0
 1566 018a 8093 F100 		sts 241,r24
 1567               	.LBE754:
 1568               	.LBE753:
 1569               	.LBB755:
 1570               	.LBB756:
 1571               	.LBB757:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1572               		.loc 2 243 0
 1573 018e 1EBC      		out 0x2e,__zero_reg__
 1574               	.L117:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1575               		.loc 2 244 0
 1576 0190 0DB4      		in __tmp_reg__,0x2d
 1577 0192 07FE      		sbrs __tmp_reg__,7
 1578 0194 00C0      		rjmp .L117
 1579               		.loc 2 245 0
 1580 0196 8EB5      		in r24,0x2e
 1581               	.LBE757:
 1582               	.LBE756:
 1583               	.LBE755:
 1584               	.LBB758:
 1585               	.LBB759:
 1586               		.loc 4 624 0
 1587 0198 8093 F100 		sts 241,r24
 1588               	.LBE759:
 1589               	.LBE758:
 1590               	.LBB760:
 1591               	.LBB761:
 1592               	.LBB762:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1593               		.loc 2 243 0
 1594 019c 1EBC      		out 0x2e,__zero_reg__
 1595               	.L118:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1596               		.loc 2 244 0
 1597 019e 0DB4      		in __tmp_reg__,0x2d
 1598 01a0 07FE      		sbrs __tmp_reg__,7
 1599 01a2 00C0      		rjmp .L118
 1600               		.loc 2 245 0
 1601 01a4 8EB5      		in r24,0x2e
 1602               	.LBE762:
 1603               	.LBE761:
 1604               	.LBE760:
 1605               	.LBB763:
 1606               	.LBB764:
 1607               		.loc 4 624 0
 1608 01a6 8093 F100 		sts 241,r24
 1609               	.LBE764:
 1610               	.LBE763:
 1611               	.LBB765:
 1612               	.LBB766:
 1613               	.LBB767:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1614               		.loc 2 243 0
 1615 01aa 1EBC      		out 0x2e,__zero_reg__
 1616               	.L119:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1617               		.loc 2 244 0
 1618 01ac 0DB4      		in __tmp_reg__,0x2d
 1619 01ae 07FE      		sbrs __tmp_reg__,7
 1620 01b0 00C0      		rjmp .L119
 1621               		.loc 2 245 0
 1622 01b2 8EB5      		in r24,0x2e
 1623               	.LBE767:
 1624               	.LBE766:
 1625               	.LBE765:
 1626               	.LBB768:
 1627               	.LBB769:
 1628               		.loc 4 624 0
 1629 01b4 8093 F100 		sts 241,r24
 1630               	.LBE769:
 1631               	.LBE768:
 1632               	.LBB770:
 1633               	.LBB771:
 1634               	.LBB772:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1635               		.loc 2 243 0
 1636 01b8 1EBC      		out 0x2e,__zero_reg__
 1637               	.L120:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1638               		.loc 2 244 0
 1639 01ba 0DB4      		in __tmp_reg__,0x2d
 1640 01bc 07FE      		sbrs __tmp_reg__,7
 1641 01be 00C0      		rjmp .L120
 1642               		.loc 2 245 0
 1643 01c0 8EB5      		in r24,0x2e
 1644               	.LBE772:
 1645               	.LBE771:
 1646               	.LBE770:
 1647               	.LBB773:
 1648               	.LBB774:
 1649               		.loc 4 624 0
 1650 01c2 8093 F100 		sts 241,r24
 1651               	.LBE774:
 1652               	.LBE773:
 1653               	.LBB775:
 1654               	.LBB776:
 1655               	.LBB777:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1656               		.loc 2 243 0
 1657 01c6 1EBC      		out 0x2e,__zero_reg__
 1658               	.L121:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1659               		.loc 2 244 0
 1660 01c8 0DB4      		in __tmp_reg__,0x2d
 1661 01ca 07FE      		sbrs __tmp_reg__,7
 1662 01cc 00C0      		rjmp .L121
 1663               		.loc 2 245 0
 1664 01ce 8EB5      		in r24,0x2e
 1665               	.LBE777:
 1666               	.LBE776:
 1667               	.LBE775:
 1668               	.LBB778:
 1669               	.LBB779:
 1670               		.loc 4 624 0
 1671 01d0 8093 F100 		sts 241,r24
 1672               	.LBE779:
 1673               	.LBE778:
 1674               	.LBB780:
 1675               	.LBB781:
 1676               	.LBB782:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1677               		.loc 2 243 0
 1678 01d4 1EBC      		out 0x2e,__zero_reg__
 1679               	.L122:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1680               		.loc 2 244 0
 1681 01d6 0DB4      		in __tmp_reg__,0x2d
 1682 01d8 07FE      		sbrs __tmp_reg__,7
 1683 01da 00C0      		rjmp .L122
 1684               		.loc 2 245 0
 1685 01dc 8EB5      		in r24,0x2e
 1686               	.LBE782:
 1687               	.LBE781:
 1688               	.LBE780:
 1689               	.LBB783:
 1690               	.LBB784:
 1691               		.loc 4 624 0
 1692 01de 8093 F100 		sts 241,r24
 1693               	.LBE784:
 1694               	.LBE783:
 240:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 241:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 242:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 243:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 244:Lib/DataflashManager.c **** 			}
 245:Lib/DataflashManager.c **** 
 246:Lib/DataflashManager.c **** 			/* Read one 16-byte chunk of data from the Dataflash */
 247:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 248:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 249:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 250:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 251:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 252:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 253:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 254:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 255:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 256:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 257:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 258:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 259:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 260:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 261:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 262:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 263:Lib/DataflashManager.c **** 
 264:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 265:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 1695               		.loc 3 265 0
 1696 01e2 CF5F      		subi r28,lo8(-(1))
 1697               	.LVL90:
 266:Lib/DataflashManager.c **** 
 267:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 268:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 269:Lib/DataflashManager.c **** 
 270:Lib/DataflashManager.c **** 			/* Check if the current command is being aborted by the host */
 271:Lib/DataflashManager.c **** 			if (MSInterfaceInfo->State.IsMassStoreReset)
 1698               		.loc 3 271 0
 1699 01e4 F601      		movw r30,r12
 1700 01e6 86A9      		ldd r24,Z+54
 1701 01e8 8111      		cpse r24,__zero_reg__
 1702 01ea 00C0      		rjmp .L89
 1703 01ec D150      		subi r29,lo8(-(-1))
 1704               	.LVL91:
 214:Lib/DataflashManager.c **** 		{
 1705               		.loc 3 214 0
 1706 01ee 01F0      		breq .+2
 1707 01f0 00C0      		rjmp .L123
 272:Lib/DataflashManager.c **** 			  return;
 273:Lib/DataflashManager.c **** 		}
 274:Lib/DataflashManager.c **** 
 275:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 276:Lib/DataflashManager.c **** 		TotalBlocks--;
 1708               		.loc 3 276 0
 1709 01f2 F1E0      		ldi r31,1
 1710 01f4 EF1A      		sub r14,r31
 1711 01f6 F108      		sbc r15,__zero_reg__
 1712               	.LVL92:
 1713 01f8 00C0      		rjmp .L96
 1714               	.LVL93:
 1715               	.L153:
 1716               	.LBE785:
 1717               	.LBB786:
 1718               	.LBB787:
 420:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1719               		.loc 4 420 0
 1720 01fa 8091 E800 		lds r24,232
 1721               	.LBE787:
 1722               	.LBE786:
 277:Lib/DataflashManager.c **** 	}
 278:Lib/DataflashManager.c **** 
 279:Lib/DataflashManager.c **** 	/* If the endpoint is full, send its contents to the host */
 280:Lib/DataflashManager.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 1723               		.loc 3 280 0
 1724 01fe 85FD      		sbrc r24,5
 1725 0200 00C0      		rjmp .L125
 1726               	.LBB788:
 1727               	.LBB789:
 516:../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1728               		.loc 4 516 0
 1729 0202 8091 E800 		lds r24,232
 1730 0206 8E77      		andi r24,lo8(126)
 1731 0208 8093 E800 		sts 232,r24
 1732               	.L125:
 1733               	.LVL94:
 1734               	.LBE789:
 1735               	.LBE788:
 1736               	.LBB790:
 1737               	.LBB791:
 1738               	.LBB792:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 1739               		.loc 1 117 0
 1740 020c 8EB1      		in r24,0xe
 1741 020e 8360      		ori r24,lo8(3)
 1742 0210 8EB9      		out 0xe,r24
 1743               	.LVL95:
 1744               	.L89:
 1745               	/* epilogue start */
 1746               	.LBE792:
 1747               	.LBE791:
 1748               	.LBE790:
 281:Lib/DataflashManager.c **** 	  Endpoint_ClearIN();
 282:Lib/DataflashManager.c **** 
 283:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 284:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 285:Lib/DataflashManager.c **** }
 1749               		.loc 3 285 0
 1750 0212 DF91      		pop r29
 1751 0214 CF91      		pop r28
 1752 0216 1F91      		pop r17
 1753 0218 0F91      		pop r16
 1754 021a FF90      		pop r15
 1755 021c EF90      		pop r14
 1756               	.LVL96:
 1757 021e DF90      		pop r13
 1758 0220 CF90      		pop r12
 1759               	.LVL97:
 1760 0222 BF90      		pop r11
 1761 0224 AF90      		pop r10
 1762 0226 9F90      		pop r9
 1763 0228 8F90      		pop r8
 1764 022a 0895      		ret
 1765               		.cfi_endproc
 1766               	.LFE206:
 1768               		.section	.text.DataflashManager_WriteBlocks_RAM,"ax",@progbits
 1769               	.global	DataflashManager_WriteBlocks_RAM
 1771               	DataflashManager_WriteBlocks_RAM:
 1772               	.LFB207:
 286:Lib/DataflashManager.c **** 
 287:Lib/DataflashManager.c **** /** Writes blocks (OS blocks, not Dataflash pages) to the storage medium, the board Dataflash IC(s)
 288:Lib/DataflashManager.c ****  *  the given RAM buffer. This routine reads in OS sized blocks from the buffer and writes them to 
 289:Lib/DataflashManager.c ****  *  Dataflash in Dataflash page sized blocks. This can be linked to FAT libraries to write files to
 290:Lib/DataflashManager.c ****  *  Dataflash.
 291:Lib/DataflashManager.c ****  *
 292:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the write sequence
 293:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to write
 294:Lib/DataflashManager.c ****  *  \param[in] BufferPtr     Pointer to the data source RAM buffer
 295:Lib/DataflashManager.c ****  */
 296:Lib/DataflashManager.c **** void DataflashManager_WriteBlocks_RAM(const uint32_t BlockAddress,
 297:Lib/DataflashManager.c ****                                       uint16_t TotalBlocks,
 298:Lib/DataflashManager.c ****                                       const uint8_t* BufferPtr)
 299:Lib/DataflashManager.c **** {
 1773               		.loc 3 299 0
 1774               		.cfi_startproc
 1775               	.LVL98:
 1776 0000 4F92      		push r4
 1777               	.LCFI28:
 1778               		.cfi_def_cfa_offset 3
 1779               		.cfi_offset 4, -2
 1780 0002 5F92      		push r5
 1781               	.LCFI29:
 1782               		.cfi_def_cfa_offset 4
 1783               		.cfi_offset 5, -3
 1784 0004 6F92      		push r6
 1785               	.LCFI30:
 1786               		.cfi_def_cfa_offset 5
 1787               		.cfi_offset 6, -4
 1788 0006 7F92      		push r7
 1789               	.LCFI31:
 1790               		.cfi_def_cfa_offset 6
 1791               		.cfi_offset 7, -5
 1792 0008 8F92      		push r8
 1793               	.LCFI32:
 1794               		.cfi_def_cfa_offset 7
 1795               		.cfi_offset 8, -6
 1796 000a 9F92      		push r9
 1797               	.LCFI33:
 1798               		.cfi_def_cfa_offset 8
 1799               		.cfi_offset 9, -7
 1800 000c AF92      		push r10
 1801               	.LCFI34:
 1802               		.cfi_def_cfa_offset 9
 1803               		.cfi_offset 10, -8
 1804 000e BF92      		push r11
 1805               	.LCFI35:
 1806               		.cfi_def_cfa_offset 10
 1807               		.cfi_offset 11, -9
 1808 0010 CF92      		push r12
 1809               	.LCFI36:
 1810               		.cfi_def_cfa_offset 11
 1811               		.cfi_offset 12, -10
 1812 0012 DF92      		push r13
 1813               	.LCFI37:
 1814               		.cfi_def_cfa_offset 12
 1815               		.cfi_offset 13, -11
 1816 0014 EF92      		push r14
 1817               	.LCFI38:
 1818               		.cfi_def_cfa_offset 13
 1819               		.cfi_offset 14, -12
 1820 0016 FF92      		push r15
 1821               	.LCFI39:
 1822               		.cfi_def_cfa_offset 14
 1823               		.cfi_offset 15, -13
 1824 0018 0F93      		push r16
 1825               	.LCFI40:
 1826               		.cfi_def_cfa_offset 15
 1827               		.cfi_offset 16, -14
 1828 001a 1F93      		push r17
 1829               	.LCFI41:
 1830               		.cfi_def_cfa_offset 16
 1831               		.cfi_offset 17, -15
 1832 001c CF93      		push r28
 1833               	.LCFI42:
 1834               		.cfi_def_cfa_offset 17
 1835               		.cfi_offset 28, -16
 1836 001e DF93      		push r29
 1837               	.LCFI43:
 1838               		.cfi_def_cfa_offset 18
 1839               		.cfi_offset 29, -17
 1840               	/* prologue: function */
 1841               	/* frame size = 0 */
 1842               	/* stack size = 16 */
 1843               	.L__stack_usage = 16
 1844 0020 4A01      		movw r8,r20
 1845 0022 8901      		movw r16,r18
 300:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 1846               		.loc 3 300 0
 1847 0024 6B01      		movw r12,r22
 1848 0026 7C01      		movw r14,r24
 1849 0028 99E0      		ldi r25,9
 1850               		1:
 1851 002a CC0C      		lsl r12
 1852 002c DD1C      		rol r13
 1853 002e EE1C      		rol r14
 1854 0030 FF1C      		rol r15
 1855 0032 9A95      		dec r25
 1856 0034 01F4      		brne 1b
 1857 0036 5601      		movw r10,r12
 1858 0038 6701      		movw r12,r14
 1859 003a 2AE0      		ldi r18,10
 1860               		1:
 1861 003c D694      		lsr r13
 1862 003e C794      		ror r12
 1863 0040 B794      		ror r11
 1864 0042 A794      		ror r10
 1865 0044 2A95      		dec r18
 1866 0046 01F4      		brne 1b
 1867               	.LVL99:
 1868 0048 E501      		movw r28,r10
 1869               	.LVL100:
 301:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 1870               		.loc 3 301 0
 1871 004a 762F      		mov r23,r22
 1872 004c 6627      		clr r22
 1873 004e 770F      		lsl r23
 1874               	.LVL101:
 1875 0050 7B01      		movw r14,r22
 1876 0052 EE24      		clr r14
 1877 0054 82E0      		ldi r24,2
 1878 0056 F822      		and r15,r24
 1879               	.LVL102:
 302:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
 1880               		.loc 3 302 0
 1881 0058 2701      		movw r4,r14
 1882 005a 44E0      		ldi r20,4
 1883               		1:
 1884 005c 5694      		lsr r5
 1885 005e 4794      		ror r4
 1886 0060 4A95      		dec r20
 1887 0062 01F4      		brne 1b
 1888               	.LVL103:
 303:Lib/DataflashManager.c **** 	bool     UsingSecondBuffer   = false;
 304:Lib/DataflashManager.c **** 
 305:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
 306:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 1889               		.loc 3 306 0
 1890 0064 C501      		movw r24,r10
 1891 0066 0E94 0000 		call Dataflash_SelectChipFromPage
 1892               	.LVL104:
 1893               	.LBB793:
 1894               	.LBB794:
 1895               	.LBB795:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1896               		.loc 2 231 0
 1897 006a 83E5      		ldi r24,lo8(83)
 1898 006c 8EBD      		out 0x2e,r24
 1899               	.L155:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1900               		.loc 2 232 0
 1901 006e 0DB4      		in __tmp_reg__,0x2d
 1902 0070 07FE      		sbrs __tmp_reg__,7
 1903 0072 00C0      		rjmp .L155
 1904               	.LVL105:
 1905               	.LBE795:
 1906               	.LBE794:
 1907               	.LBE793:
 307:Lib/DataflashManager.c **** 
 308:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
 309:Lib/DataflashManager.c **** 	/* Copy selected dataflash's current page contents to the Dataflash buffer */
 310:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMTOBUFF1);
 311:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0);
 1908               		.loc 3 311 0
 1909 0074 60E0      		ldi r22,0
 1910 0076 70E0      		ldi r23,0
 1911 0078 C501      		movw r24,r10
 1912 007a 0E94 0000 		call Dataflash_SendAddressBytes
 1913               	.LVL106:
 312:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 1914               		.loc 3 312 0
 1915 007e 0E94 0000 		call Dataflash_WaitWhileBusy
 1916               	.LVL107:
 1917               	.LBB796:
 1918               	.LBB797:
 1919               	.LBB798:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1920               		.loc 2 231 0
 1921 0082 84E8      		ldi r24,lo8(-124)
 1922 0084 8EBD      		out 0x2e,r24
 1923               	.L156:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1924               		.loc 2 232 0
 1925 0086 0DB4      		in __tmp_reg__,0x2d
 1926 0088 07FE      		sbrs __tmp_reg__,7
 1927 008a 00C0      		rjmp .L156
 1928               	.LVL108:
 1929               	.LBE798:
 1930               	.LBE797:
 1931               	.LBE796:
 313:Lib/DataflashManager.c **** #endif
 314:Lib/DataflashManager.c **** 
 315:Lib/DataflashManager.c **** 	/* Send the Dataflash buffer write command */
 316:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_BUFF1WRITE);
 317:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(0, CurrDFPageByte);
 1932               		.loc 3 317 0
 1933 008c B701      		movw r22,r14
 1934 008e 80E0      		ldi r24,0
 1935 0090 90E0      		ldi r25,0
 1936 0092 0E94 0000 		call Dataflash_SendAddressBytes
 1937               	.LVL109:
 1938 0096 6401      		movw r12,r8
 1939 0098 85E0      		ldi r24,5
 1940               		1:
 1941 009a CC0C      		lsl r12
 1942 009c DD1C      		rol r13
 1943 009e 8A95      		dec r24
 1944 00a0 01F4      		brne 1b
 318:Lib/DataflashManager.c **** 
 319:Lib/DataflashManager.c **** 	while (TotalBlocks)
 1945               		.loc 3 319 0
 1946 00a2 E12C      		mov r14,__zero_reg__
 1947 00a4 F12C      		mov r15,__zero_reg__
 1948               	.LVL110:
 303:Lib/DataflashManager.c **** 
 1949               		.loc 3 303 0
 1950 00a6 512C      		mov r5,__zero_reg__
 1951               	.LVL111:
 1952               	.L157:
 1953               		.loc 3 319 0
 1954 00a8 8114      		cp r8,__zero_reg__
 1955 00aa 9104      		cpc r9,__zero_reg__
 1956 00ac 01F4      		brne .+2
 1957 00ae 00C0      		rjmp .L170
 1958 00b0 5801      		movw r10,r16
 1959 00b2 8EEF      		ldi r24,-2
 1960 00b4 B81A      		sub r11,r24
 1961 00b6 3701      		movw r6,r14
 1962 00b8 6C0C      		add r6,r12
 1963 00ba 7D1C      		adc r7,r13
 1964               	.L169:
 1965               	.LBB799:
 320:Lib/DataflashManager.c **** 	{
 321:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
 322:Lib/DataflashManager.c **** 
 323:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
 324:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
 325:Lib/DataflashManager.c **** 		{
 326:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
 327:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 1966               		.loc 3 327 0
 1967 00bc 80E4      		ldi r24,lo8(64)
 1968 00be 4812      		cpse r4,r24
 1969 00c0 00C0      		rjmp .L158
 328:Lib/DataflashManager.c **** 			{
 329:Lib/DataflashManager.c **** 				/* Write the Dataflash buffer contents back to the Dataflash page */
 330:Lib/DataflashManager.c **** 				Dataflash_WaitWhileBusy();
 1970               		.loc 3 330 0
 1971 00c2 0E94 0000 		call Dataflash_WaitWhileBusy
 1972               	.LVL112:
 331:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWI
 1973               		.loc 3 331 0
 1974 00c6 5110      		cpse r5,__zero_reg__
 1975 00c8 00C0      		rjmp .L173
 1976 00ca 83E8      		ldi r24,lo8(-125)
 1977 00cc 00C0      		rjmp .L159
 1978               	.L173:
 1979 00ce 86E8      		ldi r24,lo8(-122)
 1980               	.L159:
 1981               	.LVL113:
 1982               	.LBB800:
 1983               	.LBB801:
 1984               	.LBB802:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1985               		.loc 2 231 0 discriminator 4
 1986 00d0 8EBD      		out 0x2e,r24
 1987               	.L160:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1988               		.loc 2 232 0
 1989 00d2 0DB4      		in __tmp_reg__,0x2d
 1990 00d4 07FE      		sbrs __tmp_reg__,7
 1991 00d6 00C0      		rjmp .L160
 1992               	.LVL114:
 1993               	.LBE802:
 1994               	.LBE801:
 1995               	.LBE800:
 332:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 1996               		.loc 3 332 0 discriminator 4
 1997 00d8 60E0      		ldi r22,0
 1998 00da 70E0      		ldi r23,0
 1999 00dc CE01      		movw r24,r28
 2000 00de 0E94 0000 		call Dataflash_SendAddressBytes
 2001               	.LVL115:
 333:Lib/DataflashManager.c **** 
 334:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 335:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 336:Lib/DataflashManager.c **** 				CurrDFPage++;
 2002               		.loc 3 336 0 discriminator 4
 2003 00e2 2196      		adiw r28,1
 2004               	.LVL116:
 2005               	.LBB803:
 2006               	.LBB804:
 106:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2007               		.loc 1 106 0 discriminator 4
 2008 00e4 8EB1      		in r24,0xe
 2009               	.LBE804:
 2010               	.LBE803:
 337:Lib/DataflashManager.c **** 
 338:Lib/DataflashManager.c **** 				/* Once all the Dataflash ICs have had their first buffers filled, switch buffers to maintain t
 339:Lib/DataflashManager.c **** 				if (Dataflash_GetSelectedChip() == DATAFLASH_CHIP_MASK(DATAFLASH_TOTALCHIPS))
 2011               		.loc 3 339 0 discriminator 4
 2012 00e6 8370      		andi r24,lo8(3)
 2013 00e8 8130      		cpi r24,lo8(1)
 2014 00ea 01F4      		brne .L161
 340:Lib/DataflashManager.c **** 				  UsingSecondBuffer = !(UsingSecondBuffer);
 2015               		.loc 3 340 0
 2016 00ec 5826      		eor r5,r24
 2017               	.LVL117:
 2018               	.L161:
 341:Lib/DataflashManager.c **** 
 342:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 343:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 2019               		.loc 3 343 0
 2020 00ee CE01      		movw r24,r28
 2021 00f0 0E94 0000 		call Dataflash_SelectChipFromPage
 2022               	.LVL118:
 344:Lib/DataflashManager.c **** 
 345:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
 346:Lib/DataflashManager.c **** 				/* If less than one Dataflash page remaining, copy over the existing page to preserve trailing 
 347:Lib/DataflashManager.c **** 				if ((TotalBlocks * (VIRTUAL_MEMORY_BLOCK_SIZE >> 4)) < (DATAFLASH_PAGE_SIZE >> 4))
 2023               		.loc 3 347 0
 2024 00f4 80E4      		ldi r24,64
 2025 00f6 6816      		cp r6,r24
 2026 00f8 7104      		cpc r7,__zero_reg__
 2027 00fa 00F4      		brsh .L162
 348:Lib/DataflashManager.c **** 				{
 349:Lib/DataflashManager.c **** 					/* Copy selected dataflash's current page contents to the Dataflash buffer */
 350:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 2028               		.loc 3 350 0
 2029 00fc 0E94 0000 		call Dataflash_WaitWhileBusy
 2030               	.LVL119:
 351:Lib/DataflashManager.c **** 					Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_MAINMEMTOBUFF2 : DF_CMD_MAINMEMTOBUFF1);
 2031               		.loc 3 351 0
 2032 0100 5110      		cpse r5,__zero_reg__
 2033 0102 00C0      		rjmp .L174
 2034 0104 83E5      		ldi r24,lo8(83)
 2035 0106 00C0      		rjmp .L163
 2036               	.L174:
 2037 0108 85E5      		ldi r24,lo8(85)
 2038               	.L163:
 2039               	.LVL120:
 2040               	.LBB805:
 2041               	.LBB806:
 2042               	.LBB807:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2043               		.loc 2 231 0 discriminator 4
 2044 010a 8EBD      		out 0x2e,r24
 2045               	.L164:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2046               		.loc 2 232 0
 2047 010c 0DB4      		in __tmp_reg__,0x2d
 2048 010e 07FE      		sbrs __tmp_reg__,7
 2049 0110 00C0      		rjmp .L164
 2050               	.LVL121:
 2051               	.LBE807:
 2052               	.LBE806:
 2053               	.LBE805:
 352:Lib/DataflashManager.c **** 					Dataflash_SendAddressBytes(CurrDFPage, 0);
 2054               		.loc 3 352 0 discriminator 4
 2055 0112 60E0      		ldi r22,0
 2056 0114 70E0      		ldi r23,0
 2057 0116 CE01      		movw r24,r28
 2058 0118 0E94 0000 		call Dataflash_SendAddressBytes
 2059               	.LVL122:
 353:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 2060               		.loc 3 353 0 discriminator 4
 2061 011c 0E94 0000 		call Dataflash_WaitWhileBusy
 2062               	.LVL123:
 2063               	.L162:
 354:Lib/DataflashManager.c **** 				}
 355:Lib/DataflashManager.c **** #endif
 356:Lib/DataflashManager.c **** 
 357:Lib/DataflashManager.c **** 				/* Send the Dataflash buffer write command */
 358:Lib/DataflashManager.c **** 				Dataflash_ToggleSelectedChipCS();
 2064               		.loc 3 358 0
 2065 0120 0E94 0000 		call Dataflash_ToggleSelectedChipCS
 2066               	.LVL124:
 359:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2WRITE : DF_CMD_BUFF1WRITE);
 2067               		.loc 3 359 0
 2068 0124 5110      		cpse r5,__zero_reg__
 2069 0126 00C0      		rjmp .L175
 2070 0128 84E8      		ldi r24,lo8(-124)
 2071 012a 00C0      		rjmp .L165
 2072               	.L175:
 2073 012c 87E8      		ldi r24,lo8(-121)
 2074               	.L165:
 2075               	.LVL125:
 2076               	.LBB808:
 2077               	.LBB809:
 2078               	.LBB810:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2079               		.loc 2 231 0 discriminator 4
 2080 012e 8EBD      		out 0x2e,r24
 2081               	.L166:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2082               		.loc 2 232 0
 2083 0130 0DB4      		in __tmp_reg__,0x2d
 2084 0132 07FE      		sbrs __tmp_reg__,7
 2085 0134 00C0      		rjmp .L166
 2086               	.LVL126:
 2087               	.LBE810:
 2088               	.LBE809:
 2089               	.LBE808:
 360:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(0, 0);
 2090               		.loc 3 360 0 discriminator 4
 2091 0136 60E0      		ldi r22,0
 2092 0138 70E0      		ldi r23,0
 2093 013a 80E0      		ldi r24,0
 2094 013c 90E0      		ldi r25,0
 2095 013e 0E94 0000 		call Dataflash_SendAddressBytes
 2096               	.LVL127:
 335:Lib/DataflashManager.c **** 				CurrDFPage++;
 2097               		.loc 3 335 0 discriminator 4
 2098 0142 412C      		mov r4,__zero_reg__
 2099               	.LVL128:
 2100               	.L158:
 2101 0144 F801      		movw r30,r16
 2102 0146 005F      		subi r16,-16
 2103 0148 1F4F      		sbci r17,-1
 2104               	.LVL129:
 2105               	.L168:
 2106               	.LBB811:
 361:Lib/DataflashManager.c **** 			}
 362:Lib/DataflashManager.c **** 
 363:Lib/DataflashManager.c **** 			/* Write one 16-byte chunk of data to the Dataflash */
 364:Lib/DataflashManager.c **** 			for (uint8_t ByteNum = 0; ByteNum < 16; ByteNum++)
 365:Lib/DataflashManager.c **** 			  Dataflash_SendByte(*(BufferPtr++));
 2107               		.loc 3 365 0 discriminator 3
 2108 014a 8191      		ld r24,Z+
 2109               	.LVL130:
 2110               	.LBB812:
 2111               	.LBB813:
 2112               	.LBB814:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2113               		.loc 2 231 0 discriminator 3
 2114 014c 8EBD      		out 0x2e,r24
 2115               	.L167:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2116               		.loc 2 232 0
 2117 014e 0DB4      		in __tmp_reg__,0x2d
 2118 0150 07FE      		sbrs __tmp_reg__,7
 2119 0152 00C0      		rjmp .L167
 2120               	.LVL131:
 2121               	.LBE814:
 2122               	.LBE813:
 2123               	.LBE812:
 364:Lib/DataflashManager.c **** 			  Dataflash_SendByte(*(BufferPtr++));
 2124               		.loc 3 364 0 discriminator 3
 2125 0154 0E17      		cp r16,r30
 2126 0156 1F07      		cpc r17,r31
 2127 0158 01F4      		brne .L168
 2128               	.LBE811:
 366:Lib/DataflashManager.c **** 
 367:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 368:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 2129               		.loc 3 368 0
 2130 015a 4394      		inc r4
 2131               	.LVL132:
 324:Lib/DataflashManager.c **** 		{
 2132               		.loc 3 324 0
 2133 015c A016      		cp r10,r16
 2134 015e B106      		cpc r11,r17
 2135 0160 01F0      		breq .+2
 2136 0162 00C0      		rjmp .L169
 369:Lib/DataflashManager.c **** 
 370:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 371:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 372:Lib/DataflashManager.c **** 		}
 373:Lib/DataflashManager.c **** 
 374:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 375:Lib/DataflashManager.c **** 		TotalBlocks--;
 2137               		.loc 3 375 0
 2138 0164 81E0      		ldi r24,1
 2139 0166 881A      		sub r8,r24
 2140 0168 9108      		sbc r9,__zero_reg__
 2141               	.LVL133:
 2142 016a 80E2      		ldi r24,32
 2143 016c E81A      		sub r14,r24
 2144 016e F108      		sbc r15,__zero_reg__
 2145 0170 00C0      		rjmp .L157
 2146               	.LVL134:
 2147               	.L170:
 2148               	.LBE799:
 376:Lib/DataflashManager.c **** 	}
 377:Lib/DataflashManager.c **** 
 378:Lib/DataflashManager.c **** 	/* Write the Dataflash buffer contents back to the Dataflash page */
 379:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 2149               		.loc 3 379 0
 2150 0172 0E94 0000 		call Dataflash_WaitWhileBusy
 2151               	.LVL135:
 380:Lib/DataflashManager.c **** 	Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWITHE
 2152               		.loc 3 380 0
 2153 0176 5110      		cpse r5,__zero_reg__
 2154 0178 00C0      		rjmp .L176
 2155 017a 83E8      		ldi r24,lo8(-125)
 2156 017c 00C0      		rjmp .L171
 2157               	.L176:
 2158 017e 86E8      		ldi r24,lo8(-122)
 2159               	.L171:
 2160               	.LVL136:
 2161               	.LBB815:
 2162               	.LBB816:
 2163               	.LBB817:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2164               		.loc 2 231 0 discriminator 4
 2165 0180 8EBD      		out 0x2e,r24
 2166               	.L172:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2167               		.loc 2 232 0
 2168 0182 0DB4      		in __tmp_reg__,0x2d
 2169 0184 07FE      		sbrs __tmp_reg__,7
 2170 0186 00C0      		rjmp .L172
 2171               	.LVL137:
 2172               	.LBE817:
 2173               	.LBE816:
 2174               	.LBE815:
 381:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0x00);
 2175               		.loc 3 381 0 discriminator 4
 2176 0188 60E0      		ldi r22,0
 2177 018a 70E0      		ldi r23,0
 2178 018c CE01      		movw r24,r28
 2179 018e 0E94 0000 		call Dataflash_SendAddressBytes
 2180               	.LVL138:
 382:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 2181               		.loc 3 382 0 discriminator 4
 2182 0192 0E94 0000 		call Dataflash_WaitWhileBusy
 2183               	.LVL139:
 2184               	.LBB818:
 2185               	.LBB819:
 2186               	.LBB820:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2187               		.loc 1 117 0 discriminator 4
 2188 0196 8EB1      		in r24,0xe
 2189 0198 8360      		ori r24,lo8(3)
 2190 019a 8EB9      		out 0xe,r24
 2191               	.LVL140:
 2192               	/* epilogue start */
 2193               	.LBE820:
 2194               	.LBE819:
 2195               	.LBE818:
 383:Lib/DataflashManager.c **** 
 384:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 385:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 386:Lib/DataflashManager.c **** }
 2196               		.loc 3 386 0 discriminator 4
 2197 019c DF91      		pop r29
 2198 019e CF91      		pop r28
 2199               	.LVL141:
 2200 01a0 1F91      		pop r17
 2201 01a2 0F91      		pop r16
 2202               	.LVL142:
 2203 01a4 FF90      		pop r15
 2204 01a6 EF90      		pop r14
 2205 01a8 DF90      		pop r13
 2206 01aa CF90      		pop r12
 2207 01ac BF90      		pop r11
 2208 01ae AF90      		pop r10
 2209 01b0 9F90      		pop r9
 2210 01b2 8F90      		pop r8
 2211               	.LVL143:
 2212 01b4 7F90      		pop r7
 2213 01b6 6F90      		pop r6
 2214 01b8 5F90      		pop r5
 2215               	.LVL144:
 2216 01ba 4F90      		pop r4
 2217               	.LVL145:
 2218 01bc 0895      		ret
 2219               		.cfi_endproc
 2220               	.LFE207:
 2222               		.section	.text.DataflashManager_ReadBlocks_RAM,"ax",@progbits
 2223               	.global	DataflashManager_ReadBlocks_RAM
 2225               	DataflashManager_ReadBlocks_RAM:
 2226               	.LFB208:
 387:Lib/DataflashManager.c **** 
 388:Lib/DataflashManager.c **** /** Reads blocks (OS blocks, not Dataflash pages) from the storage medium, the board Dataflash IC(s
 389:Lib/DataflashManager.c ****  *  the preallocated RAM buffer. This routine reads in Dataflash page sized blocks from the Datafla
 390:Lib/DataflashManager.c ****  *  and writes them in OS sized blocks to the given buffer. This can be linked to FAT libraries to 
 391:Lib/DataflashManager.c ****  *  the files stored on the Dataflash.
 392:Lib/DataflashManager.c ****  *
 393:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the read sequence
 394:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to read
 395:Lib/DataflashManager.c ****  *  \param[out] BufferPtr    Pointer to the data destination RAM buffer
 396:Lib/DataflashManager.c ****  */
 397:Lib/DataflashManager.c **** void DataflashManager_ReadBlocks_RAM(const uint32_t BlockAddress,
 398:Lib/DataflashManager.c ****                                      uint16_t TotalBlocks,
 399:Lib/DataflashManager.c ****                                      uint8_t* BufferPtr)
 400:Lib/DataflashManager.c **** {
 2227               		.loc 3 400 0
 2228               		.cfi_startproc
 2229               	.LVL146:
 2230 0000 4F92      		push r4
 2231               	.LCFI44:
 2232               		.cfi_def_cfa_offset 3
 2233               		.cfi_offset 4, -2
 2234 0002 5F92      		push r5
 2235               	.LCFI45:
 2236               		.cfi_def_cfa_offset 4
 2237               		.cfi_offset 5, -3
 2238 0004 6F92      		push r6
 2239               	.LCFI46:
 2240               		.cfi_def_cfa_offset 5
 2241               		.cfi_offset 6, -4
 2242 0006 7F92      		push r7
 2243               	.LCFI47:
 2244               		.cfi_def_cfa_offset 6
 2245               		.cfi_offset 7, -5
 2246 0008 AF92      		push r10
 2247               	.LCFI48:
 2248               		.cfi_def_cfa_offset 7
 2249               		.cfi_offset 10, -6
 2250 000a BF92      		push r11
 2251               	.LCFI49:
 2252               		.cfi_def_cfa_offset 8
 2253               		.cfi_offset 11, -7
 2254 000c CF92      		push r12
 2255               	.LCFI50:
 2256               		.cfi_def_cfa_offset 9
 2257               		.cfi_offset 12, -8
 2258 000e DF92      		push r13
 2259               	.LCFI51:
 2260               		.cfi_def_cfa_offset 10
 2261               		.cfi_offset 13, -9
 2262 0010 FF92      		push r15
 2263               	.LCFI52:
 2264               		.cfi_def_cfa_offset 11
 2265               		.cfi_offset 15, -10
 2266 0012 0F93      		push r16
 2267               	.LCFI53:
 2268               		.cfi_def_cfa_offset 12
 2269               		.cfi_offset 16, -11
 2270 0014 1F93      		push r17
 2271               	.LCFI54:
 2272               		.cfi_def_cfa_offset 13
 2273               		.cfi_offset 17, -12
 2274 0016 CF93      		push r28
 2275               	.LCFI55:
 2276               		.cfi_def_cfa_offset 14
 2277               		.cfi_offset 28, -13
 2278 0018 DF93      		push r29
 2279               	.LCFI56:
 2280               		.cfi_def_cfa_offset 15
 2281               		.cfi_offset 29, -14
 2282               	/* prologue: function */
 2283               	/* frame size = 0 */
 2284               	/* stack size = 13 */
 2285               	.L__stack_usage = 13
 2286 001a 5A01      		movw r10,r20
 2287 001c 8901      		movw r16,r18
 401:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 2288               		.loc 3 401 0
 2289 001e 2B01      		movw r4,r22
 2290 0020 3C01      		movw r6,r24
 2291 0022 99E0      		ldi r25,9
 2292               		1:
 2293 0024 440C      		lsl r4
 2294 0026 551C      		rol r5
 2295 0028 661C      		rol r6
 2296 002a 771C      		rol r7
 2297 002c 9A95      		dec r25
 2298 002e 01F4      		brne 1b
 2299 0030 2AE0      		ldi r18,10
 2300               		1:
 2301 0032 7694      		lsr r7
 2302 0034 6794      		ror r6
 2303 0036 5794      		ror r5
 2304 0038 4794      		ror r4
 2305 003a 2A95      		dec r18
 2306 003c 01F4      		brne 1b
 2307               	.LVL147:
 2308 003e 6201      		movw r12,r4
 2309               	.LVL148:
 402:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 2310               		.loc 3 402 0
 2311 0040 EB01      		movw r28,r22
 2312 0042 DC2F      		mov r29,r28
 2313 0044 CC27      		clr r28
 2314 0046 DD0F      		lsl r29
 2315 0048 CC27      		clr r28
 2316 004a D270      		andi r29,2
 2317               	.LVL149:
 403:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
 2318               		.loc 3 403 0
 2319 004c CE01      		movw r24,r28
 2320 004e 44E0      		ldi r20,4
 2321               		1:
 2322 0050 9695      		lsr r25
 2323 0052 8795      		ror r24
 2324 0054 4A95      		dec r20
 2325 0056 01F4      		brne 1b
 2326               	.LVL150:
 2327 0058 F82E      		mov r15,r24
 2328               	.LVL151:
 404:Lib/DataflashManager.c **** 
 405:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
 406:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 2329               		.loc 3 406 0
 2330 005a C201      		movw r24,r4
 2331 005c 0E94 0000 		call Dataflash_SelectChipFromPage
 2332               	.LVL152:
 2333               	.LBB821:
 2334               	.LBB822:
 2335               	.LBB823:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2336               		.loc 2 231 0
 2337 0060 82ED      		ldi r24,lo8(-46)
 2338 0062 8EBD      		out 0x2e,r24
 2339               	.L187:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2340               		.loc 2 232 0
 2341 0064 0DB4      		in __tmp_reg__,0x2d
 2342 0066 07FE      		sbrs __tmp_reg__,7
 2343 0068 00C0      		rjmp .L187
 2344               	.LVL153:
 2345               	.LBE823:
 2346               	.LBE822:
 2347               	.LBE821:
 407:Lib/DataflashManager.c **** 
 408:Lib/DataflashManager.c **** 	/* Send the Dataflash main memory page read command */
 409:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 410:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, CurrDFPageByte);
 2348               		.loc 3 410 0
 2349 006a BE01      		movw r22,r28
 2350 006c C201      		movw r24,r4
 2351 006e 0E94 0000 		call Dataflash_SendAddressBytes
 2352               	.LVL154:
 2353               	.LBB824:
 2354               	.LBB825:
 2355               	.LBB826:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2356               		.loc 2 231 0
 2357 0072 1EBC      		out 0x2e,__zero_reg__
 2358               	.L188:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2359               		.loc 2 232 0
 2360 0074 0DB4      		in __tmp_reg__,0x2d
 2361 0076 07FE      		sbrs __tmp_reg__,7
 2362 0078 00C0      		rjmp .L188
 2363               	.LVL155:
 2364               	.LBE826:
 2365               	.LBE825:
 2366               	.LBE824:
 2367               	.LBB827:
 2368               	.LBB828:
 2369               	.LBB829:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2370               		.loc 2 231 0
 2371 007a 1EBC      		out 0x2e,__zero_reg__
 2372               	.L189:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2373               		.loc 2 232 0
 2374 007c 0DB4      		in __tmp_reg__,0x2d
 2375 007e 07FE      		sbrs __tmp_reg__,7
 2376 0080 00C0      		rjmp .L189
 2377               	.LVL156:
 2378               	.LBE829:
 2379               	.LBE828:
 2380               	.LBE827:
 2381               	.LBB830:
 2382               	.LBB831:
 2383               	.LBB832:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2384               		.loc 2 231 0
 2385 0082 1EBC      		out 0x2e,__zero_reg__
 2386               	.L190:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2387               		.loc 2 232 0
 2388 0084 0DB4      		in __tmp_reg__,0x2d
 2389 0086 07FE      		sbrs __tmp_reg__,7
 2390 0088 00C0      		rjmp .L190
 2391               	.LVL157:
 2392               	.LBE832:
 2393               	.LBE831:
 2394               	.LBE830:
 2395               	.LBB833:
 2396               	.LBB834:
 2397               	.LBB835:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2398               		.loc 2 231 0
 2399 008a 1EBC      		out 0x2e,__zero_reg__
 2400               	.L191:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2401               		.loc 2 232 0
 2402 008c 0DB4      		in __tmp_reg__,0x2d
 2403 008e 07FE      		sbrs __tmp_reg__,7
 2404 0090 00C0      		rjmp .L191
 2405               	.LBE835:
 2406               	.LBE834:
 2407               	.LBE833:
 2408               	.LBB836:
 2409               	.LBB837:
 2410               	.LBB838:
 2411               	.LBB839:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2412               		.loc 2 231 0
 2413 0092 82ED      		ldi r24,lo8(-46)
 2414 0094 782E      		mov r7,r24
 2415               	.LVL158:
 2416               	.L192:
 2417               	.LBE839:
 2418               	.LBE838:
 2419               	.LBE837:
 2420               	.LBE836:
 411:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 412:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 413:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 414:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 415:Lib/DataflashManager.c **** 
 416:Lib/DataflashManager.c **** 	while (TotalBlocks)
 2421               		.loc 3 416 0
 2422 0096 A114      		cp r10,__zero_reg__
 2423 0098 B104      		cpc r11,__zero_reg__
 2424 009a 01F0      		breq .L202
 2425 009c E801      		movw r28,r16
 2426 009e DE5F      		subi r29,-2
 2427               	.L201:
 2428               	.LBB859:
 417:Lib/DataflashManager.c **** 	{
 418:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
 419:Lib/DataflashManager.c **** 
 420:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
 421:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
 422:Lib/DataflashManager.c **** 		{
 423:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
 424:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 2429               		.loc 3 424 0
 2430 00a0 80E4      		ldi r24,lo8(64)
 2431 00a2 F812      		cpse r15,r24
 2432 00a4 00C0      		rjmp .L193
 2433               	.LVL159:
 425:Lib/DataflashManager.c **** 			{
 426:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 427:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 428:Lib/DataflashManager.c **** 				CurrDFPage++;
 2434               		.loc 3 428 0
 2435 00a6 8FEF      		ldi r24,-1
 2436 00a8 C81A      		sub r12,r24
 2437 00aa D80A      		sbc r13,r24
 2438               	.LVL160:
 429:Lib/DataflashManager.c **** 
 430:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 431:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 2439               		.loc 3 431 0
 2440 00ac C601      		movw r24,r12
 2441 00ae 0E94 0000 		call Dataflash_SelectChipFromPage
 2442               	.LVL161:
 2443               	.LBB842:
 2444               	.LBB841:
 2445               	.LBB840:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2446               		.loc 2 231 0
 2447 00b2 7EBC      		out 0x2e,r7
 2448               	.L194:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2449               		.loc 2 232 0
 2450 00b4 0DB4      		in __tmp_reg__,0x2d
 2451 00b6 07FE      		sbrs __tmp_reg__,7
 2452 00b8 00C0      		rjmp .L194
 2453               	.LVL162:
 2454               	.LBE840:
 2455               	.LBE841:
 2456               	.LBE842:
 432:Lib/DataflashManager.c **** 
 433:Lib/DataflashManager.c **** 				/* Send the Dataflash main memory page read command */
 434:Lib/DataflashManager.c **** 				Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 435:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 2457               		.loc 3 435 0
 2458 00ba 60E0      		ldi r22,0
 2459 00bc 70E0      		ldi r23,0
 2460 00be C601      		movw r24,r12
 2461 00c0 0E94 0000 		call Dataflash_SendAddressBytes
 2462               	.LVL163:
 2463               	.LBB843:
 2464               	.LBB844:
 2465               	.LBB845:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2466               		.loc 2 231 0
 2467 00c4 1EBC      		out 0x2e,__zero_reg__
 2468               	.L195:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2469               		.loc 2 232 0
 2470 00c6 0DB4      		in __tmp_reg__,0x2d
 2471 00c8 07FE      		sbrs __tmp_reg__,7
 2472 00ca 00C0      		rjmp .L195
 2473               	.LVL164:
 2474               	.LBE845:
 2475               	.LBE844:
 2476               	.LBE843:
 2477               	.LBB846:
 2478               	.LBB847:
 2479               	.LBB848:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2480               		.loc 2 231 0
 2481 00cc 1EBC      		out 0x2e,__zero_reg__
 2482               	.L196:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2483               		.loc 2 232 0
 2484 00ce 0DB4      		in __tmp_reg__,0x2d
 2485 00d0 07FE      		sbrs __tmp_reg__,7
 2486 00d2 00C0      		rjmp .L196
 2487               	.LVL165:
 2488               	.LBE848:
 2489               	.LBE847:
 2490               	.LBE846:
 2491               	.LBB849:
 2492               	.LBB850:
 2493               	.LBB851:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2494               		.loc 2 231 0
 2495 00d4 1EBC      		out 0x2e,__zero_reg__
 2496               	.L197:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2497               		.loc 2 232 0
 2498 00d6 0DB4      		in __tmp_reg__,0x2d
 2499 00d8 07FE      		sbrs __tmp_reg__,7
 2500 00da 00C0      		rjmp .L197
 2501               	.LVL166:
 2502               	.LBE851:
 2503               	.LBE850:
 2504               	.LBE849:
 2505               	.LBB852:
 2506               	.LBB853:
 2507               	.LBB854:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2508               		.loc 2 231 0
 2509 00dc 1EBC      		out 0x2e,__zero_reg__
 2510               	.L198:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2511               		.loc 2 232 0
 2512 00de 0DB4      		in __tmp_reg__,0x2d
 2513 00e0 07FE      		sbrs __tmp_reg__,7
 2514 00e2 00C0      		rjmp .L198
 2515               	.LBE854:
 2516               	.LBE853:
 2517               	.LBE852:
 427:Lib/DataflashManager.c **** 				CurrDFPage++;
 2518               		.loc 3 427 0
 2519 00e4 F12C      		mov r15,__zero_reg__
 2520               	.LVL167:
 2521               	.L193:
 2522 00e6 F801      		movw r30,r16
 2523 00e8 005F      		subi r16,-16
 2524 00ea 1F4F      		sbci r17,-1
 2525               	.LVL168:
 2526               	.L200:
 2527               	.LBB855:
 2528               	.LBB856:
 2529               	.LBB857:
 2530               	.LBB858:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2531               		.loc 2 243 0 discriminator 3
 2532 00ec 1EBC      		out 0x2e,__zero_reg__
 2533               	.L199:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2534               		.loc 2 244 0
 2535 00ee 0DB4      		in __tmp_reg__,0x2d
 2536 00f0 07FE      		sbrs __tmp_reg__,7
 2537 00f2 00C0      		rjmp .L199
 2538               		.loc 2 245 0
 2539 00f4 8EB5      		in r24,0x2e
 2540               	.LBE858:
 2541               	.LBE857:
 2542               	.LBE856:
 436:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 437:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 438:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 439:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 440:Lib/DataflashManager.c **** 			}
 441:Lib/DataflashManager.c **** 
 442:Lib/DataflashManager.c **** 			/* Read one 16-byte chunk of data from the Dataflash */
 443:Lib/DataflashManager.c **** 			for (uint8_t ByteNum = 0; ByteNum < 16; ByteNum++)
 444:Lib/DataflashManager.c **** 			  *(BufferPtr++) = Dataflash_ReceiveByte();
 2543               		.loc 3 444 0
 2544 00f6 8193      		st Z+,r24
 2545               	.LVL169:
 443:Lib/DataflashManager.c **** 			  *(BufferPtr++) = Dataflash_ReceiveByte();
 2546               		.loc 3 443 0
 2547 00f8 E017      		cp r30,r16
 2548 00fa F107      		cpc r31,r17
 2549 00fc 01F4      		brne .L200
 2550               	.LBE855:
 445:Lib/DataflashManager.c **** 
 446:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 447:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 2551               		.loc 3 447 0
 2552 00fe F394      		inc r15
 2553               	.LVL170:
 421:Lib/DataflashManager.c **** 		{
 2554               		.loc 3 421 0
 2555 0100 C017      		cp r28,r16
 2556 0102 D107      		cpc r29,r17
 2557 0104 01F4      		brne .L201
 448:Lib/DataflashManager.c **** 
 449:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 450:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 451:Lib/DataflashManager.c **** 		}
 452:Lib/DataflashManager.c **** 
 453:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 454:Lib/DataflashManager.c **** 		TotalBlocks--;
 2558               		.loc 3 454 0
 2559 0106 81E0      		ldi r24,1
 2560 0108 A81A      		sub r10,r24
 2561 010a B108      		sbc r11,__zero_reg__
 2562               	.LVL171:
 2563 010c 00C0      		rjmp .L192
 2564               	.LVL172:
 2565               	.L202:
 2566               	.LBE859:
 2567               	.LBB860:
 2568               	.LBB861:
 2569               	.LBB862:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2570               		.loc 1 117 0
 2571 010e 8EB1      		in r24,0xe
 2572 0110 8360      		ori r24,lo8(3)
 2573 0112 8EB9      		out 0xe,r24
 2574               	.LVL173:
 2575               	/* epilogue start */
 2576               	.LBE862:
 2577               	.LBE861:
 2578               	.LBE860:
 455:Lib/DataflashManager.c **** 	}
 456:Lib/DataflashManager.c **** 
 457:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 458:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 459:Lib/DataflashManager.c **** }
 2579               		.loc 3 459 0
 2580 0114 DF91      		pop r29
 2581 0116 CF91      		pop r28
 2582 0118 1F91      		pop r17
 2583 011a 0F91      		pop r16
 2584               	.LVL174:
 2585 011c FF90      		pop r15
 2586               	.LVL175:
 2587 011e DF90      		pop r13
 2588 0120 CF90      		pop r12
 2589               	.LVL176:
 2590 0122 BF90      		pop r11
 2591 0124 AF90      		pop r10
 2592               	.LVL177:
 2593 0126 7F90      		pop r7
 2594 0128 6F90      		pop r6
 2595 012a 5F90      		pop r5
 2596 012c 4F90      		pop r4
 2597 012e 0895      		ret
 2598               		.cfi_endproc
 2599               	.LFE208:
 2601               		.section	.text.DataflashManager_ResetDataflashProtections,"ax",@progbits
 2602               	.global	DataflashManager_ResetDataflashProtections
 2604               	DataflashManager_ResetDataflashProtections:
 2605               	.LFB209:
 460:Lib/DataflashManager.c **** 
 461:Lib/DataflashManager.c **** /** Disables the Dataflash memory write protection bits on the board Dataflash ICs, if enabled. */
 462:Lib/DataflashManager.c **** void DataflashManager_ResetDataflashProtections(void)
 463:Lib/DataflashManager.c **** {
 2606               		.loc 3 463 0
 2607               		.cfi_startproc
 2608               	/* prologue: function */
 2609               	/* frame size = 0 */
 2610               	/* stack size = 0 */
 2611               	.L__stack_usage = 0
 2612               	.LVL178:
 2613               	.LBB863:
 2614               	.LBB864:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2615               		.loc 1 117 0
 2616 0000 8EB1      		in r24,0xe
 2617 0002 8C7F      		andi r24,lo8(-4)
 2618 0004 8260      		ori r24,lo8(2)
 2619 0006 8EB9      		out 0xe,r24
 2620               	.LVL179:
 2621               	.LBE864:
 2622               	.LBE863:
 2623               	.LBB865:
 2624               	.LBB866:
 2625               	.LBB867:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2626               		.loc 2 231 0
 2627 0008 87ED      		ldi r24,lo8(-41)
 2628 000a 8EBD      		out 0x2e,r24
 2629               	.L217:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2630               		.loc 2 232 0
 2631 000c 0DB4      		in __tmp_reg__,0x2d
 2632 000e 07FE      		sbrs __tmp_reg__,7
 2633 0010 00C0      		rjmp .L217
 2634               	.LVL180:
 2635               	.LBE867:
 2636               	.LBE866:
 2637               	.LBE865:
 2638               	.LBB868:
 2639               	.LBB869:
 2640               	.LBB870:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2641               		.loc 2 243 0
 2642 0012 1EBC      		out 0x2e,__zero_reg__
 2643               	.L218:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2644               		.loc 2 244 0
 2645 0014 0DB4      		in __tmp_reg__,0x2d
 2646 0016 07FE      		sbrs __tmp_reg__,7
 2647 0018 00C0      		rjmp .L218
 2648               	.LBE870:
 2649               	.LBE869:
 2650               	.LBE868:
 464:Lib/DataflashManager.c **** 	/* Select first Dataflash chip, send the read status register command */
 465:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP1);
 466:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_GETSTATUS);
 467:Lib/DataflashManager.c **** 
 468:Lib/DataflashManager.c **** 	/* Check if sector protection is enabled */
 469:Lib/DataflashManager.c **** 	if (Dataflash_ReceiveByte() & DF_STATUS_SECTORPROTECTION_ON)
 2651               		.loc 3 469 0
 2652 001a 0EB4      		in __tmp_reg__,0x2e
 2653 001c 01FC      		sbrc __tmp_reg__,1
 2654 001e 00C0      		rjmp .L219
 2655               	.L225:
 2656               	.LVL181:
 2657               	.LBB871:
 2658               	.LBB872:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2659               		.loc 1 117 0
 2660 0020 8EB1      		in r24,0xe
 2661 0022 8C7F      		andi r24,lo8(-4)
 2662 0024 8160      		ori r24,lo8(1)
 2663 0026 8EB9      		out 0xe,r24
 2664               	.LVL182:
 2665               	.LBE872:
 2666               	.LBE871:
 2667               	.LBB873:
 2668               	.LBB874:
 2669               	.LBB875:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2670               		.loc 2 231 0
 2671 0028 87ED      		ldi r24,lo8(-41)
 2672 002a 8EBD      		out 0x2e,r24
 2673 002c 00C0      		rjmp .L220
 2674               	.LVL183:
 2675               	.L219:
 2676               	.LBE875:
 2677               	.LBE874:
 2678               	.LBE873:
 470:Lib/DataflashManager.c **** 	{
 471:Lib/DataflashManager.c **** 		Dataflash_ToggleSelectedChipCS();
 2679               		.loc 3 471 0
 2680 002e 0E94 0000 		call Dataflash_ToggleSelectedChipCS
 2681               	.LVL184:
 2682               	.LBB878:
 2683               	.LBB879:
 2684               	.LBB880:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2685               		.loc 2 231 0
 2686 0032 8DE3      		ldi r24,lo8(61)
 2687 0034 8EBD      		out 0x2e,r24
 2688               	.L221:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2689               		.loc 2 232 0
 2690 0036 0DB4      		in __tmp_reg__,0x2d
 2691 0038 07FE      		sbrs __tmp_reg__,7
 2692 003a 00C0      		rjmp .L221
 2693               	.LVL185:
 2694               	.LBE880:
 2695               	.LBE879:
 2696               	.LBE878:
 2697               	.LBB881:
 2698               	.LBB882:
 2699               	.LBB883:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2700               		.loc 2 231 0
 2701 003c 8AE2      		ldi r24,lo8(42)
 2702 003e 8EBD      		out 0x2e,r24
 2703               	.L222:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2704               		.loc 2 232 0
 2705 0040 0DB4      		in __tmp_reg__,0x2d
 2706 0042 07FE      		sbrs __tmp_reg__,7
 2707 0044 00C0      		rjmp .L222
 2708               	.LVL186:
 2709               	.LBE883:
 2710               	.LBE882:
 2711               	.LBE881:
 2712               	.LBB884:
 2713               	.LBB885:
 2714               	.LBB886:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2715               		.loc 2 231 0
 2716 0046 8FE7      		ldi r24,lo8(127)
 2717 0048 8EBD      		out 0x2e,r24
 2718               	.L223:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2719               		.loc 2 232 0
 2720 004a 0DB4      		in __tmp_reg__,0x2d
 2721 004c 07FE      		sbrs __tmp_reg__,7
 2722 004e 00C0      		rjmp .L223
 2723               	.LVL187:
 2724               	.LBE886:
 2725               	.LBE885:
 2726               	.LBE884:
 2727               	.LBB887:
 2728               	.LBB888:
 2729               	.LBB889:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2730               		.loc 2 231 0
 2731 0050 8AE9      		ldi r24,lo8(-102)
 2732 0052 8EBD      		out 0x2e,r24
 2733               	.L224:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2734               		.loc 2 232 0
 2735 0054 0DB4      		in __tmp_reg__,0x2d
 2736 0056 07FE      		sbrs __tmp_reg__,7
 2737 0058 00C0      		rjmp .L224
 2738 005a 00C0      		rjmp .L225
 2739               	.LVL188:
 2740               	.L220:
 2741               	.LBE889:
 2742               	.LBE888:
 2743               	.LBE887:
 2744               	.LBB890:
 2745               	.LBB877:
 2746               	.LBB876:
 2747 005c 0DB4      		in __tmp_reg__,0x2d
 2748 005e 07FE      		sbrs __tmp_reg__,7
 2749 0060 00C0      		rjmp .L220
 2750               	.LVL189:
 2751               	.LBE876:
 2752               	.LBE877:
 2753               	.LBE890:
 2754               	.LBB891:
 2755               	.LBB892:
 2756               	.LBB893:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2757               		.loc 2 243 0
 2758 0062 1EBC      		out 0x2e,__zero_reg__
 2759               	.L226:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2760               		.loc 2 244 0
 2761 0064 0DB4      		in __tmp_reg__,0x2d
 2762 0066 07FE      		sbrs __tmp_reg__,7
 2763 0068 00C0      		rjmp .L226
 2764               	.LBE893:
 2765               	.LBE892:
 2766               	.LBE891:
 472:Lib/DataflashManager.c **** 
 473:Lib/DataflashManager.c **** 		/* Send the commands to disable sector protection */
 474:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[0]);
 475:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[1]);
 476:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[2]);
 477:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[3]);
 478:Lib/DataflashManager.c **** 	}
 479:Lib/DataflashManager.c **** 
 480:Lib/DataflashManager.c **** 	/* Select second Dataflash chip (if present on selected board), send read status register command 
 481:Lib/DataflashManager.c **** 	#if (DATAFLASH_TOTALCHIPS == 2)
 482:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP2);
 483:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_GETSTATUS);
 484:Lib/DataflashManager.c **** 
 485:Lib/DataflashManager.c **** 	/* Check if sector protection is enabled */
 486:Lib/DataflashManager.c **** 	if (Dataflash_ReceiveByte() & DF_STATUS_SECTORPROTECTION_ON)
 2767               		.loc 3 486 0
 2768 006a 0EB4      		in __tmp_reg__,0x2e
 2769 006c 01FC      		sbrc __tmp_reg__,1
 2770 006e 00C0      		rjmp .L227
 2771               	.L232:
 2772               	.LVL190:
 2773               	.LBB894:
 2774               	.LBB895:
 2775               	.LBB896:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2776               		.loc 1 117 0
 2777 0070 8EB1      		in r24,0xe
 2778 0072 8360      		ori r24,lo8(3)
 2779 0074 8EB9      		out 0xe,r24
 2780               	.LVL191:
 2781               	.LBE896:
 2782               	.LBE895:
 2783               	.LBE894:
 487:Lib/DataflashManager.c **** 	{
 488:Lib/DataflashManager.c **** 		Dataflash_ToggleSelectedChipCS();
 489:Lib/DataflashManager.c **** 
 490:Lib/DataflashManager.c **** 		/* Send the commands to disable sector protection */
 491:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[0]);
 492:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[1]);
 493:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[2]);
 494:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[3]);
 495:Lib/DataflashManager.c **** 	}
 496:Lib/DataflashManager.c **** 	#endif
 497:Lib/DataflashManager.c **** 
 498:Lib/DataflashManager.c **** 	/* Deselect current Dataflash chip */
 499:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 500:Lib/DataflashManager.c **** }
 2784               		.loc 3 500 0
 2785 0076 0895      		ret
 2786               	.L227:
 488:Lib/DataflashManager.c **** 
 2787               		.loc 3 488 0
 2788 0078 0E94 0000 		call Dataflash_ToggleSelectedChipCS
 2789               	.LVL192:
 2790               	.LBB897:
 2791               	.LBB898:
 2792               	.LBB899:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2793               		.loc 2 231 0
 2794 007c 8DE3      		ldi r24,lo8(61)
 2795 007e 8EBD      		out 0x2e,r24
 2796               	.L228:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2797               		.loc 2 232 0
 2798 0080 0DB4      		in __tmp_reg__,0x2d
 2799 0082 07FE      		sbrs __tmp_reg__,7
 2800 0084 00C0      		rjmp .L228
 2801               	.LVL193:
 2802               	.LBE899:
 2803               	.LBE898:
 2804               	.LBE897:
 2805               	.LBB900:
 2806               	.LBB901:
 2807               	.LBB902:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2808               		.loc 2 231 0
 2809 0086 8AE2      		ldi r24,lo8(42)
 2810 0088 8EBD      		out 0x2e,r24
 2811               	.L229:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2812               		.loc 2 232 0
 2813 008a 0DB4      		in __tmp_reg__,0x2d
 2814 008c 07FE      		sbrs __tmp_reg__,7
 2815 008e 00C0      		rjmp .L229
 2816               	.LVL194:
 2817               	.LBE902:
 2818               	.LBE901:
 2819               	.LBE900:
 2820               	.LBB903:
 2821               	.LBB904:
 2822               	.LBB905:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2823               		.loc 2 231 0
 2824 0090 8FE7      		ldi r24,lo8(127)
 2825 0092 8EBD      		out 0x2e,r24
 2826               	.L230:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2827               		.loc 2 232 0
 2828 0094 0DB4      		in __tmp_reg__,0x2d
 2829 0096 07FE      		sbrs __tmp_reg__,7
 2830 0098 00C0      		rjmp .L230
 2831               	.LVL195:
 2832               	.LBE905:
 2833               	.LBE904:
 2834               	.LBE903:
 2835               	.LBB906:
 2836               	.LBB907:
 2837               	.LBB908:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2838               		.loc 2 231 0
 2839 009a 8AE9      		ldi r24,lo8(-102)
 2840 009c 8EBD      		out 0x2e,r24
 2841               	.L231:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2842               		.loc 2 232 0
 2843 009e 0DB4      		in __tmp_reg__,0x2d
 2844 00a0 07FE      		sbrs __tmp_reg__,7
 2845 00a2 00C0      		rjmp .L231
 2846 00a4 00C0      		rjmp .L232
 2847               	.LBE908:
 2848               	.LBE907:
 2849               	.LBE906:
 2850               		.cfi_endproc
 2851               	.LFE209:
 2853               		.section	.text.DataflashManager_CheckDataflashOperation,"ax",@progbits
 2854               	.global	DataflashManager_CheckDataflashOperation
 2856               	DataflashManager_CheckDataflashOperation:
 2857               	.LFB210:
 501:Lib/DataflashManager.c **** 
 502:Lib/DataflashManager.c **** /** Performs a simple test on the attached Dataflash IC(s) to ensure that they are working.
 503:Lib/DataflashManager.c ****  *
 504:Lib/DataflashManager.c ****  *  \return Boolean true if all media chips are working, false otherwise
 505:Lib/DataflashManager.c ****  */
 506:Lib/DataflashManager.c **** bool DataflashManager_CheckDataflashOperation(void)
 507:Lib/DataflashManager.c **** {
 2858               		.loc 3 507 0
 2859               		.cfi_startproc
 2860               	/* prologue: function */
 2861               	/* frame size = 0 */
 2862               	/* stack size = 0 */
 2863               	.L__stack_usage = 0
 2864               	.LVL196:
 2865               	.LBB909:
 2866               	.LBB910:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2867               		.loc 1 117 0
 2868 0000 8EB1      		in r24,0xe
 2869 0002 8C7F      		andi r24,lo8(-4)
 2870 0004 8260      		ori r24,lo8(2)
 2871 0006 8EB9      		out 0xe,r24
 2872               	.LVL197:
 2873               	.LBE910:
 2874               	.LBE909:
 2875               	.LBB911:
 2876               	.LBB912:
 2877               	.LBB913:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2878               		.loc 2 231 0
 2879 0008 8FE9      		ldi r24,lo8(-97)
 2880 000a 8EBD      		out 0x2e,r24
 2881               	.L247:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2882               		.loc 2 232 0
 2883 000c 0DB4      		in __tmp_reg__,0x2d
 2884 000e 07FE      		sbrs __tmp_reg__,7
 2885 0010 00C0      		rjmp .L247
 2886               	.LVL198:
 2887               	.LBE913:
 2888               	.LBE912:
 2889               	.LBE911:
 2890               	.LBB914:
 2891               	.LBB915:
 2892               	.LBB916:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2893               		.loc 2 243 0
 2894 0012 1EBC      		out 0x2e,__zero_reg__
 2895               	.L248:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2896               		.loc 2 244 0
 2897 0014 0DB4      		in __tmp_reg__,0x2d
 2898 0016 07FE      		sbrs __tmp_reg__,7
 2899 0018 00C0      		rjmp .L248
 2900               		.loc 2 245 0
 2901 001a 9EB5      		in r25,0x2e
 2902               	.LVL199:
 2903               	.LBE916:
 2904               	.LBE915:
 2905               	.LBE914:
 2906               	.LBB917:
 2907               	.LBB918:
 2908               	.LBB919:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2909               		.loc 1 117 0
 2910 001c 8EB1      		in r24,0xe
 2911 001e 8360      		ori r24,lo8(3)
 2912 0020 8EB9      		out 0xe,r24
 2913               	.LVL200:
 2914               	.LBE919:
 2915               	.LBE918:
 2916               	.LBE917:
 508:Lib/DataflashManager.c **** 	uint8_t ReturnByte;
 509:Lib/DataflashManager.c **** 
 510:Lib/DataflashManager.c **** 	/* Test first Dataflash IC is present and responding to commands */
 511:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP1);
 512:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_READMANUFACTURERDEVICEINFO);
 513:Lib/DataflashManager.c **** 	ReturnByte = Dataflash_ReceiveByte();
 514:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 515:Lib/DataflashManager.c **** 
 516:Lib/DataflashManager.c **** 	/* If returned data is invalid, fail the command */
 517:Lib/DataflashManager.c **** 	if (ReturnByte != DF_MANUFACTURER_ATMEL)
 2917               		.loc 3 517 0
 2918 0022 9F31      		cpi r25,lo8(31)
 2919 0024 01F4      		brne .L253
 2920               	.LVL201:
 2921               	.LBB920:
 2922               	.LBB921:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2923               		.loc 1 117 0
 2924 0026 8EB1      		in r24,0xe
 2925 0028 8C7F      		andi r24,lo8(-4)
 2926 002a 8160      		ori r24,lo8(1)
 2927 002c 8EB9      		out 0xe,r24
 2928               	.LVL202:
 2929               	.LBE921:
 2930               	.LBE920:
 2931               	.LBB922:
 2932               	.LBB923:
 2933               	.LBB924:
 231:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2934               		.loc 2 231 0
 2935 002e 8FE9      		ldi r24,lo8(-97)
 2936 0030 8EBD      		out 0x2e,r24
 2937               	.L250:
 232:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2938               		.loc 2 232 0
 2939 0032 0DB4      		in __tmp_reg__,0x2d
 2940 0034 07FE      		sbrs __tmp_reg__,7
 2941 0036 00C0      		rjmp .L250
 2942               	.LVL203:
 2943               	.LBE924:
 2944               	.LBE923:
 2945               	.LBE922:
 2946               	.LBB925:
 2947               	.LBB926:
 2948               	.LBB927:
 243:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2949               		.loc 2 243 0
 2950 0038 1EBC      		out 0x2e,__zero_reg__
 2951               	.L251:
 244:../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2952               		.loc 2 244 0
 2953 003a 0DB4      		in __tmp_reg__,0x2d
 2954 003c 07FE      		sbrs __tmp_reg__,7
 2955 003e 00C0      		rjmp .L251
 2956               		.loc 2 245 0
 2957 0040 9EB5      		in r25,0x2e
 2958               	.LVL204:
 2959               	.LBE927:
 2960               	.LBE926:
 2961               	.LBE925:
 2962               	.LBB928:
 2963               	.LBB929:
 2964               	.LBB930:
 117:../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2965               		.loc 1 117 0
 2966 0042 8EB1      		in r24,0xe
 2967 0044 8360      		ori r24,lo8(3)
 2968 0046 8EB9      		out 0xe,r24
 2969               	.LVL205:
 2970               	.LBE930:
 2971               	.LBE929:
 2972               	.LBE928:
 518:Lib/DataflashManager.c **** 	  return false;
 519:Lib/DataflashManager.c **** 
 520:Lib/DataflashManager.c **** 	#if (DATAFLASH_TOTALCHIPS == 2)
 521:Lib/DataflashManager.c **** 	/* Test second Dataflash IC is present and responding to commands */
 522:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP2);
 523:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_READMANUFACTURERDEVICEINFO);
 524:Lib/DataflashManager.c **** 	ReturnByte = Dataflash_ReceiveByte();
 525:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 526:Lib/DataflashManager.c **** 
 527:Lib/DataflashManager.c **** 	/* If returned data is invalid, fail the command */
 528:Lib/DataflashManager.c **** 	if (ReturnByte != DF_MANUFACTURER_ATMEL)
 2973               		.loc 3 528 0
 2974 0048 81E0      		ldi r24,lo8(1)
 2975 004a 9F31      		cpi r25,lo8(31)
 2976 004c 01F0      		breq .L249
 2977               	.L253:
 518:Lib/DataflashManager.c **** 	  return false;
 2978               		.loc 3 518 0
 2979 004e 80E0      		ldi r24,0
 2980               	.L249:
 529:Lib/DataflashManager.c **** 	  return false;
 530:Lib/DataflashManager.c **** 	#endif
 531:Lib/DataflashManager.c **** 
 532:Lib/DataflashManager.c **** 	return true;
 533:Lib/DataflashManager.c **** }
 2981               		.loc 3 533 0
 2982 0050 0895      		ret
 2983               		.cfi_endproc
 2984               	.LFE210:
 2986               		.text
 2987               	.Letext0:
 2988               		.file 5 "/usr/lib/avr/include/stdint.h"
 2989               		.file 6 "../../LUFA/Drivers/USB/Class/Device/../Common/MassStorage.h"
 2990               		.file 7 "../../LUFA/Drivers/USB/Class/Device/MassStorage.h"
 2991               		.file 8 "../../LUFA/Drivers/Board/Dataflash.h"
 2992               		.file 9 "../../LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 DataflashManager.c
     /tmp/ccM8u68d.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccM8u68d.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccM8u68d.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccM8u68d.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccM8u68d.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccM8u68d.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccM8u68d.s:13     .text.Dataflash_ToggleSelectedChipCS:0000000000000000 Dataflash_ToggleSelectedChipCS
     /tmp/ccM8u68d.s:55     .text.Dataflash_WaitWhileBusy:0000000000000000 Dataflash_WaitWhileBusy
     /tmp/ccM8u68d.s:107    .text.Dataflash_SendAddressBytes:0000000000000000 Dataflash_SendAddressBytes
     /tmp/ccM8u68d.s:184    .text.Dataflash_SelectChipFromPage:0000000000000000 Dataflash_SelectChipFromPage
     /tmp/ccM8u68d.s:252    .text.DataflashManager_WriteBlocks:0000000000000000 DataflashManager_WriteBlocks
     /tmp/ccM8u68d.s:1028   .text.DataflashManager_ReadBlocks:0000000000000000 DataflashManager_ReadBlocks
     /tmp/ccM8u68d.s:1771   .text.DataflashManager_WriteBlocks_RAM:0000000000000000 DataflashManager_WriteBlocks_RAM
     /tmp/ccM8u68d.s:2225   .text.DataflashManager_ReadBlocks_RAM:0000000000000000 DataflashManager_ReadBlocks_RAM
     /tmp/ccM8u68d.s:2604   .text.DataflashManager_ResetDataflashProtections:0000000000000000 DataflashManager_ResetDataflashProtections
     /tmp/ccM8u68d.s:2856   .text.DataflashManager_CheckDataflashOperation:0000000000000000 DataflashManager_CheckDataflashOperation

UNDEFINED SYMBOLS
Endpoint_WaitUntilReady
