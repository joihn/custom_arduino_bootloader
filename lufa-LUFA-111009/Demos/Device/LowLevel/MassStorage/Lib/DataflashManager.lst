   1               		.file	"DataflashManager.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.Dataflash_ToggleSelectedChipCS,"ax",@progbits
  13               	Dataflash_ToggleSelectedChipCS:
  14               	.LFB123:
  15               		.file 1 "../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h"
   1:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /*
   2:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****              LUFA Library
   3:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****      Copyright (C) Dean Camera, 2011.
   4:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
   5:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****            www.lufa-lib.org
   7:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** */
   8:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
   9:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /*
  10:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  12:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   all copies and that both that the copyright notice and this
  16:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   documentation, and that the name of the author not be used in
  18:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   software without specific, written prior permission.
  20:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  21:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   The author disclaim all warranties with regard to this
  22:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   software, including all implied warranties of merchantability
  23:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   special, indirect or consequential damages or any damages
  25:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   arising out of or in connection with the use or performance of
  28:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****   this software.
  29:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** */
  30:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  31:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /** \file
  32:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \brief Board specific Dataflash driver header for the Atmel USBKEY.
  33:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \copydetails Group_Dataflash_USBKEY
  34:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *
  35:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *        dispatch header located in LUFA/Drivers/Board/Dataflash.h.
  37:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  */
  38:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  39:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** /** \ingroup Group_Dataflash
  40:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \defgroup Group_Dataflash_USBKEY USBKEY
  41:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  \brief Board specific Dataflash driver header for the Atmel USBKEY.
  42:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *
  43:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  Board specific Dataflash driver header for the Atmel USBKEY board.
  44:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *
  45:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  *  @{
  46:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h ****  */
  47:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  48:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** #ifndef __DATAFLASH_USBKEY_H__
  49:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** #define __DATAFLASH_USBKEY_H__
  50:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  51:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Includes: */
  52:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#include "../../../../Common/Common.h"
  53:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#include "../../../Misc/AT45DB642D.h"
  54:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  55:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Preprocessor Checks: */
  56:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#if !defined(__INCLUDE_FROM_DATAFLASH_H)
  57:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#error Do not include this file directly. Include LUFA/Drivers/Board/Dataflash.h instead.
  58:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		#endif
  59:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  60:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Private Interface - For use in library only: */
  61:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	#if !defined(__DOXYGEN__)
  62:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		/* Macros: */
  63:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIPCS_MASK                ((1 << 1) | (1 << 0))
  64:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIPCS_DDR                 DDRE
  65:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIPCS_PORT                PORTE
  66:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	#endif
  67:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  68:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 	/* Public Interface - May be used in end-application: */
  69:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		/* Macros: */
  70:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Constant indicating the total number of dataflash ICs mounted on the selected board. */
  71:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_TOTALCHIPS                 2
  72:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  73:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Mask for no dataflash chip selected. */
  74:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_NO_CHIP                    DATAFLASH_CHIPCS_MASK
  75:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  76:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Mask for the first dataflash chip selected. */
  77:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIP1                      (1 << 1)
  78:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  79:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Mask for the second dataflash chip selected. */
  80:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_CHIP2                      (1 << 0)
  81:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  82:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Internal main memory page size for the board's dataflash ICs. */
  83:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_PAGE_SIZE                  1024
  84:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  85:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Total number of pages inside each of the board's dataflash ICs. */
  86:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			#define DATAFLASH_PAGES                      8192
  87:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  88:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 		/* Inline Functions: */
  89:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Initializes the dataflash driver so that commands and data may be sent to an attached datafl
  90:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  The microcontroller's SPI driver MUST be initialized before any of the dataflash commands ar
  91:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
  92:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_Init(void)
  93:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
  94:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				DATAFLASH_CHIPCS_DDR  |= DATAFLASH_CHIPCS_MASK;
  95:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				DATAFLASH_CHIPCS_PORT |= DATAFLASH_CHIPCS_MASK;
  96:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
  97:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
  98:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Determines the currently selected dataflash chip.
  99:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 100:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \return Mask of the currently selected Dataflash chip, either \ref DATAFLASH_NO_CHIP if no c
 101:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  or a DATAFLASH_CHIPn mask (where n is the chip number).
 102:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 103:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline uint8_t Dataflash_GetSelectedChip(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 104:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline uint8_t Dataflash_GetSelectedChip(void)
 105:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 106:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				return (DATAFLASH_CHIPCS_PORT & DATAFLASH_CHIPCS_MASK);
 107:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 108:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 109:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Selects the given dataflash chip.
 110:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 111:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in]  ChipMask  Mask of the Dataflash IC to select, in the form of DATAFLASH_CHIPn mas
 112:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *              the chip number).
 113:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 114:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SelectChip(const uint8_t ChipMask) ATTR_ALWAYS_INLINE;
 115:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SelectChip(const uint8_t ChipMask)
 116:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				DATAFLASH_CHIPCS_PORT = ((DATAFLASH_CHIPCS_PORT & ~DATAFLASH_CHIPCS_MASK) | ChipMask);
 118:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 119:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 120:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Deselects the current dataflash chip, so that no dataflash is selected. */
 121:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_DeselectChip(void) ATTR_ALWAYS_INLINE;
 122:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_DeselectChip(void)
 123:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 124:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SelectChip(DATAFLASH_NO_CHIP);
 125:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 126:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 127:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Selects a dataflash IC from the given page number, which should range from 0 to
 128:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  ((DATAFLASH_PAGES * DATAFLASH_TOTALCHIPS) - 1). For boards containing only one
 129:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  dataflash IC, this will select DATAFLASH_CHIP1. If the given page number is outside
 130:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  the total number of pages contained in the boards dataflash ICs, all dataflash ICs
 131:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  are deselected.
 132:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 133:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in] PageAddress  Address of the page to manipulate, ranging from
 134:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *                          0 to ((DATAFLASH_PAGES * DATAFLASH_TOTALCHIPS) - 1).
 135:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 136:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SelectChipFromPage(const uint16_t PageAddress)
 137:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 138:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_DeselectChip();
 139:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 140:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				if (PageAddress >= (DATAFLASH_PAGES * DATAFLASH_TOTALCHIPS))
 141:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  return;
 142:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 143:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				if (PageAddress & 0x01)
 144:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  Dataflash_SelectChip(DATAFLASH_CHIP2);
 145:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				else
 146:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  Dataflash_SelectChip(DATAFLASH_CHIP1);
 147:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 148:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 149:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Toggles the select line of the currently selected dataflash IC, so that it is ready to recei
 150:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  a new command.
 151:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 152:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_ToggleSelectedChipCS(void)
 153:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
  16               		.loc 1 153 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               	.LBB505:
  23               	.LBB506:
 106:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
  24               		.loc 1 106 0
  25 0000 8EB1      		in r24,0xe
  26               	.LVL0:
  27               	.LBE506:
  28               	.LBE505:
  29               	.LBB507:
  30               	.LBB508:
  31               	.LBB509:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
  32               		.loc 1 117 0
  33 0002 9EB1      		in r25,0xe
  34 0004 9360      		ori r25,lo8(3)
  35 0006 9EB9      		out 0xe,r25
  36               	.LVL1:
  37               	.LBE509:
  38               	.LBE508:
  39               	.LBE507:
  40               	.LBB510:
  41               	.LBB511:
  42 0008 9EB1      		in r25,0xe
  43 000a 9C7F      		andi r25,lo8(-4)
  44 000c 8370      		andi r24,lo8(3)
  45 000e 892B      		or r24,r25
  46 0010 8EB9      		out 0xe,r24
  47 0012 0895      		ret
  48               	.LBE511:
  49               	.LBE510:
  50               		.cfi_endproc
  51               	.LFE123:
  53               		.section	.text.Dataflash_WaitWhileBusy,"ax",@progbits
  55               	Dataflash_WaitWhileBusy:
  56               	.LFB124:
 154:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				uint8_t SelectedChipMask = Dataflash_GetSelectedChip();
 155:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 156:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_DeselectChip();
 157:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SelectChip(SelectedChipMask);
 158:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 159:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 160:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Spin-loops while the currently selected dataflash is busy executing a command, such as a mai
 161:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  memory page program or main memory to buffer transfer.
 162:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 163:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_WaitWhileBusy(void)
 164:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
  57               		.loc 1 164 0
  58               		.cfi_startproc
  59               	/* prologue: function */
  60               	/* frame size = 0 */
  61               	/* stack size = 0 */
  62               	.L__stack_usage = 0
 165:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_ToggleSelectedChipCS();
  63               		.loc 1 165 0
  64 0000 0E94 0000 		call Dataflash_ToggleSelectedChipCS
  65               	.LVL2:
  66               	.LBB512:
  67               	.LBB513:
  68               	.LBB514:
  69               		.file 2 "../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h"
   1:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /*
   2:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****              LUFA Library
   3:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
   5:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****            www.lufa-lib.org
   7:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** */
   8:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
   9:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /*
  10:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  12:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   software without specific, written prior permission.
  20:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  21:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****   this software.
  29:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** */
  30:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  31:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /** \file
  32:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \brief SPI Peripheral Driver (AVR8)
  33:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  34:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  On-chip SPI driver for the 8-bit AVR microcontrollers.
  35:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  36:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  37:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *        dispatch header located in LUFA/Drivers/Peripheral/SPI.h.
  38:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  */
  39:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  40:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** /** \ingroup Group_SPI
  41:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \defgroup Group_SPI_AVR8 SPI Peripheral Driver (AVR8)
  42:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  43:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \section Sec_ModDescription Module Description
  44:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  Driver for the hardware SPI port available on most 8-bit AVR microcontroller models. This
  45:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  module provides an easy to use driver for the setup and transfer of data over the
  46:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  AVR's SPI port.
  47:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  48:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  49:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *        dispatch header located in LUFA/Drivers/Peripheral/SPI.h.
  50:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  51:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \section Sec_ExampleUsage Example Usage
  52:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  The following snippet is an example of how this module may be used within a typical
  53:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  application.
  54:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  55:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \code
  56:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Initialize the SPI driver before first use
  57:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_Init(SPI_SPEED_FCPU_DIV_2 | SPI_ORDER_MSB_FIRST | SPI_SCK_LEAD_FALLING |
  58:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *               SPI_SAMPLE_TRAILING | SPI_MODE_MASTER);
  59:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  60:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Send several bytes, ignoring the returned data
  61:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_SendByte(0x01);
  62:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_SendByte(0x02);
  63:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      SPI_SendByte(0x03);
  64:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  65:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Receive several bytes, sending a dummy 0x00 byte each time
  66:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t Byte1 = SPI_ReceiveByte();
  67:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t Byte2 = SPI_ReceiveByte();
  68:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t Byte3 = SPI_ReceiveByte();
  69:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *
  70:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      // Send a byte, and store the received byte from the same transaction
  71:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *      uint8_t ResponseByte = SPI_TransferByte(0xDC);
  72:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  \endcode
  73:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  * 
  74:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  *  @{
  75:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h ****  */
  76:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  77:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** #ifndef __SPI_AVR8_H__
  78:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** #define __SPI_AVR8_H__
  79:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  80:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Includes: */
  81:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#include "../../../Common/Common.h"
  82:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  83:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  84:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#if defined(__cplusplus)
  85:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			extern "C" {
  86:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#endif
  87:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  88:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Preprocessor Checks: */
  89:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#if !defined(__INCLUDE_FROM_SPI_H)
  90:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/Peripheral/SPI.h instead.
  91:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		#endif
  92:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  93:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Private Interface - For use in library only: */
  94:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	#if !defined(__DOXYGEN__)
  95:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		/* Macros: */
  96:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_USE_DOUBLESPEED            (1 << SPE)
  97:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	#endif
  98:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
  99:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 100:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		/* Macros: */
 101:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Prescaler Configuration Masks */
 102:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 103:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 2. */
 104:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_2           SPI_USE_DOUBLESPEED
 105:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 106:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 4. */
 107:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_4           0
 108:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 109:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 8. */
 110:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_8           (SPI_USE_DOUBLESPEED | (1 << SPR0))
 111:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 112:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 16. */
 113:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_16          (1 << SPR0)
 114:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 115:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 32. */
 116:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_32          (SPI_USE_DOUBLESPEED | (1 << SPR1))
 117:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 118:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 64. */
 119:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_64          (SPI_USE_DOUBLESPEED | (1 << SPR1) | (1 << SPR0))
 120:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 121:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI prescaler mask for \c SPI_Init(). Divides the system clock by a factor of 128. */
 122:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SPEED_FCPU_DIV_128         ((1 << SPR1) | (1 << SPR0))
 123:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 124:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 125:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI SCK Polarity Configuration Masks */
 126:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 127:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI clock polarity mask for \c SPI_Init(). Indicates that the SCK should lead on the rising 
 128:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SCK_LEAD_RISING            (0 << CPOL)
 129:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 130:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI clock polarity mask for \c SPI_Init(). Indicates that the SCK should lead on the falling
 131:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SCK_LEAD_FALLING           (1 << CPOL)
 132:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 133:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 134:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Sample Edge Configuration Masks */
 135:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 136:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data sample mode mask for \c SPI_Init(). Indicates that the data should sampled on the l
 137:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SAMPLE_LEADING             (0 << CPHA)
 138:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 139:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data sample mode mask for \c SPI_Init(). Indicates that the data should be sampled on th
 140:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_SAMPLE_TRAILING            (1 << CPHA)
 141:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 142:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 143:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Data Ordering Configuration Masks */
 144:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 145:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data order mask for \c SPI_Init(). Indicates that data should be shifted out MSB first. 
 146:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_ORDER_MSB_FIRST            (0 << DORD)
 147:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 148:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI data order mask for \c SPI_Init(). Indicates that data should be shifted out LSB first. 
 149:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_ORDER_LSB_FIRST            (1 << DORD)
 150:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 151:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 152:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** \name SPI Mode Configuration Masks */
 153:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@{
 154:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI mode mask for \c SPI_Init(). Indicates that the SPI interface should be initialized into
 155:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_MODE_SLAVE                 (0 << MSTR)
 156:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 157:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** SPI mode mask for \c SPI_Init(). Indicates that the SPI interface should be initialized into
 158:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			#define SPI_MODE_MASTER                (1 << MSTR)
 159:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			//@}
 160:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 161:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 		/* Inline Functions: */
 162:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Initializes the SPI subsystem, ready for transfers. Must be called before calling any other
 163:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  SPI routines.
 164:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 165:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \param[in] SPIOptions  SPI Options, a mask consisting of one of each of the \c SPI_SPEED_*,
 166:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *                         \c SPI_SCK_*, \c SPI_SAMPLE_*, \c SPI_ORDER_* and \c SPI_MODE_* masks
 167:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 168:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_Init(const uint8_t SPIOptions)
 169:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 170:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				/* Prevent high rise times on PB.0 (/SS) from forcing a change to SPI slave mode */
 171:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  |= (1 << 0);
 172:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				PORTB |= (1 << 0);
 173:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 174:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  |=  ((1 << 1) | (1 << 2));
 175:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  &= ~(1 << 3);
 176:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				PORTB |=  (1 << 3);
 177:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 178:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				if (SPIOptions & SPI_USE_DOUBLESPEED)
 179:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				  SPSR |= (1 << SPI2X);
 180:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				else
 181:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				  SPSR &= ~(1 << SPI2X);
 182:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 183:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				/* Switch /SS to input mode after configuration to allow for forced mode changes */
 184:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB &= ~(1 << 0);
 185:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 186:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPCR  = ((1 << SPE) | SPIOptions);
 187:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 188:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 189:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Turns off the SPI driver, disabling and returning used hardware to their default configurati
 190:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_Disable(void)
 191:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 192:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				DDRB  &= ~((1 << 1) | (1 << 2));
 193:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				PORTB &= ~((1 << 0) | (1 << 3));
 194:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 195:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPCR   = 0;
 196:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPSR   = 0;
 197:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 198:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			
 199:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Retrieves the currently selected SPI mode, once the SPI interface has been configured.
 200:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 201:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \return \ref SPI_MODE_MASTER if the interface is currently in SPI Master mode, \ref SPI_MODE
 202:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 203:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_GetCurrentMode(void) ATTR_ALWAYS_INLINE;
 204:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_GetCurrentMode(void)
 205:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 206:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return (SPCR & SPI_MODE_MASTER);
 207:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 208:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 209:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Sends and receives a byte through the SPI interface, blocking until the transfer is complete
 210:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 211:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \param[in] Byte  Byte to send through the SPI interface.
 212:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 213:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \return Response byte from the attached SPI device.
 214:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 215:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 216:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
 217:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 218:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPDR = Byte;
 219:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 220:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 221:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 222:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 223:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Sends a byte through the SPI interface, blocking until the transfer is complete. The respons
 224:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  byte sent to from the attached SPI device is ignored.
 225:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 226:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \param[in] Byte  Byte to send through the SPI interface.
 227:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 228:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_SendByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 229:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline void SPI_SendByte(const uint8_t Byte)
 230:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPDR = Byte;
  70               		.loc 2 231 0
  71 0004 87ED      		ldi r24,lo8(-41)
  72 0006 8EBD      		out 0x2e,r24
  73               	.L3:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
  74               		.loc 2 232 0
  75 0008 0DB4      		in __tmp_reg__,0x2d
  76 000a 07FE      		sbrs __tmp_reg__,7
  77 000c 00C0      		rjmp .L3
  78               	.L6:
  79               	.LBE514:
  80               	.LBE513:
  81               	.LBE512:
  82               	.LBB515:
  83               	.LBB516:
  84               	.LBB517:
 233:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 234:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 
 235:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			/** Sends a dummy byte through the SPI interface, blocking until the transfer is complete. The r
 236:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  byte from the attached SPI device is returned.
 237:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *
 238:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 *  \return The response byte from the attached SPI device.
 239:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			 */
 240:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_ReceiveByte(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 241:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			static inline uint8_t SPI_ReceiveByte(void)
 242:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			{
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				SPDR = 0x00;
  85               		.loc 2 243 0 discriminator 1
  86 000e 1EBC      		out 0x2e,__zero_reg__
  87               	.L4:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
  88               		.loc 2 244 0
  89 0010 0DB4      		in __tmp_reg__,0x2d
  90 0012 07FE      		sbrs __tmp_reg__,7
  91 0014 00C0      		rjmp .L4
  92               	.LBE517:
  93               	.LBE516:
  94               	.LBE515:
 166:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte(DF_CMD_GETSTATUS);
 167:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				while (!(Dataflash_ReceiveByte() & DF_STATUS_READY));
  95               		.loc 1 167 0
  96 0016 0EB4      		in __tmp_reg__,0x2e
  97 0018 07FE      		sbrs __tmp_reg__,7
  98 001a 00C0      		rjmp .L6
 168:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_ToggleSelectedChipCS();
  99               		.loc 1 168 0
 100 001c 0C94 0000 		jmp Dataflash_ToggleSelectedChipCS
 101               	.LVL3:
 102               		.cfi_endproc
 103               	.LFE124:
 105               		.section	.text.Dataflash_SendAddressBytes,"ax",@progbits
 107               	Dataflash_SendAddressBytes:
 108               	.LFB125:
 169:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 170:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 171:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			/** Sends a set of page and buffer address bytes to the currently selected dataflash IC, for use
 172:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  dataflash commands which require a complete 24-bit address.
 173:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *
 174:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in] PageAddress  Page address within the selected dataflash IC
 175:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 *  \param[in] BufferByte   Address within the dataflash's buffer
 176:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			 */
 177:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			static inline void Dataflash_SendAddressBytes(uint16_t PageAddress,
 178:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			                                              const uint16_t BufferByte)
 179:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			{
 109               		.loc 1 179 0
 110               		.cfi_startproc
 111               	.LVL4:
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
 180:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				PageAddress >>= 1;
 116               		.loc 1 180 0
 117 0000 9C01      		movw r18,r24
 118 0002 3695      		lsr r19
 119 0004 2795      		ror r18
 120               	.LVL5:
 181:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 
 182:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte(PageAddress >> 5);
 121               		.loc 1 182 0
 122 0006 56E0      		ldi r21,6
 123               		1:
 124 0008 9695      		lsr r25
 125 000a 8795      		ror r24
 126 000c 5A95      		dec r21
 127 000e 01F4      		brne 1b
 128               	.LVL6:
 129               	.LBB518:
 130               	.LBB519:
 131               	.LBB520:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 132               		.loc 2 231 0
 133 0010 8EBD      		out 0x2e,r24
 134               	.L12:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 135               		.loc 2 232 0
 136 0012 0DB4      		in __tmp_reg__,0x2d
 137 0014 07FE      		sbrs __tmp_reg__,7
 138 0016 00C0      		rjmp .L12
 139               	.LVL7:
 140               	.LBE520:
 141               	.LBE519:
 142               	.LBE518:
 183:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte((PageAddress << 3) | (BufferByte >> 8));
 143               		.loc 1 183 0
 144 0018 220F      		lsl r18
 145 001a 220F      		lsl r18
 146 001c 220F      		lsl r18
 147 001e 722B      		or r23,r18
 148               	.LVL8:
 149               	.LBB521:
 150               	.LBB522:
 151               	.LBB523:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 152               		.loc 2 231 0
 153 0020 7EBD      		out 0x2e,r23
 154               	.L13:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 155               		.loc 2 232 0
 156 0022 0DB4      		in __tmp_reg__,0x2d
 157 0024 07FE      		sbrs __tmp_reg__,7
 158 0026 00C0      		rjmp .L13
 159               	.LVL9:
 160               	.LBE523:
 161               	.LBE522:
 162               	.LBE521:
 163               	.LBB524:
 164               	.LBB525:
 165               	.LBB526:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 166               		.loc 2 231 0
 167 0028 6EBD      		out 0x2e,r22
 168               	.L14:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 169               		.loc 2 232 0
 170 002a 0DB4      		in __tmp_reg__,0x2d
 171 002c 07FE      		sbrs __tmp_reg__,7
 172 002e 00C0      		rjmp .L14
 173               	/* epilogue start */
 174               	.LBE526:
 175               	.LBE525:
 176               	.LBE524:
 184:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_SendByte(BufferByte);
 185:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 177               		.loc 1 185 0
 178 0030 0895      		ret
 179               		.cfi_endproc
 180               	.LFE125:
 182               		.section	.text.Dataflash_SelectChipFromPage,"ax",@progbits
 184               	Dataflash_SelectChipFromPage:
 185               	.LFB122:
 137:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				Dataflash_DeselectChip();
 186               		.loc 1 137 0
 187               		.cfi_startproc
 188               	.LVL10:
 189               	/* prologue: function */
 190               	/* frame size = 0 */
 191               	/* stack size = 0 */
 192               	.L__stack_usage = 0
 193 0000 9C01      		movw r18,r24
 194               	.LVL11:
 195               	.LBB541:
 196               	.LBB542:
 197               	.LBB543:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 198               		.loc 1 117 0
 199 0002 9EB1      		in r25,0xe
 200 0004 9360      		ori r25,lo8(3)
 201 0006 9EB9      		out 0xe,r25
 202               	.LVL12:
 203               	.LBE543:
 204               	.LBE542:
 205               	.LBE541:
 140:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  return;
 206               		.loc 1 140 0
 207 0008 2115      		cp r18,__zero_reg__
 208 000a 80E4      		ldi r24,64
 209 000c 3807      		cpc r19,r24
 210               	.LVL13:
 211 000e 00F4      		brsh .L18
 212               	.LBB544:
 213               	.LBB545:
 214               	.LBB546:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 215               		.loc 1 117 0
 216 0010 8EB1      		in r24,0xe
 217 0012 8C7F      		andi r24,lo8(-4)
 218               	.LBE546:
 219               	.LBE545:
 220               	.LBE544:
 143:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 				  Dataflash_SelectChip(DATAFLASH_CHIP2);
 221               		.loc 1 143 0
 222 0014 20FF      		sbrs r18,0
 223 0016 00C0      		rjmp .L20
 224               	.LVL14:
 225               	.LBB549:
 226               	.LBB548:
 227               	.LBB547:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 228               		.loc 1 117 0
 229 0018 8160      		ori r24,lo8(1)
 230 001a 00C0      		rjmp .L21
 231               	.LVL15:
 232               	.L20:
 233               	.LBE547:
 234               	.LBE548:
 235               	.LBE549:
 236               	.LBB550:
 237               	.LBB551:
 238 001c 8260      		ori r24,lo8(2)
 239               	.LVL16:
 240               	.L21:
 241 001e 8EB9      		out 0xe,r24
 242               	.L18:
 243 0020 0895      		ret
 244               	.LBE551:
 245               	.LBE550:
 246               		.cfi_endproc
 247               	.LFE122:
 249               		.section	.text.DataflashManager_WriteBlocks,"ax",@progbits
 250               	.global	DataflashManager_WriteBlocks
 252               	DataflashManager_WriteBlocks:
 253               	.LFB126:
 254               		.file 3 "Lib/DataflashManager.c"
   1:Lib/DataflashManager.c **** /*
   2:Lib/DataflashManager.c ****              LUFA Library
   3:Lib/DataflashManager.c ****      Copyright (C) Dean Camera, 2011.
   4:Lib/DataflashManager.c **** 
   5:Lib/DataflashManager.c ****   dean [at] fourwalledcubicle [dot] com
   6:Lib/DataflashManager.c ****            www.lufa-lib.org
   7:Lib/DataflashManager.c **** */
   8:Lib/DataflashManager.c **** 
   9:Lib/DataflashManager.c **** /*
  10:Lib/DataflashManager.c ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:Lib/DataflashManager.c **** 
  12:Lib/DataflashManager.c ****   Permission to use, copy, modify, distribute, and sell this
  13:Lib/DataflashManager.c ****   software and its documentation for any purpose is hereby granted
  14:Lib/DataflashManager.c ****   without fee, provided that the above copyright notice appear in
  15:Lib/DataflashManager.c ****   all copies and that both that the copyright notice and this
  16:Lib/DataflashManager.c ****   permission notice and warranty disclaimer appear in supporting
  17:Lib/DataflashManager.c ****   documentation, and that the name of the author not be used in
  18:Lib/DataflashManager.c ****   advertising or publicity pertaining to distribution of the
  19:Lib/DataflashManager.c ****   software without specific, written prior permission.
  20:Lib/DataflashManager.c **** 
  21:Lib/DataflashManager.c ****   The author disclaim all warranties with regard to this
  22:Lib/DataflashManager.c ****   software, including all implied warranties of merchantability
  23:Lib/DataflashManager.c ****   and fitness.  In no event shall the author be liable for any
  24:Lib/DataflashManager.c ****   special, indirect or consequential damages or any damages
  25:Lib/DataflashManager.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:Lib/DataflashManager.c ****   in an action of contract, negligence or other tortious action,
  27:Lib/DataflashManager.c ****   arising out of or in connection with the use or performance of
  28:Lib/DataflashManager.c ****   this software.
  29:Lib/DataflashManager.c **** */
  30:Lib/DataflashManager.c **** 
  31:Lib/DataflashManager.c **** /** \file
  32:Lib/DataflashManager.c ****  *
  33:Lib/DataflashManager.c ****  *  Functions to manage the physical Dataflash media, including reading and writing of
  34:Lib/DataflashManager.c ****  *  blocks of data. These functions are called by the SCSI layer when data must be stored
  35:Lib/DataflashManager.c ****  *  or retrieved to/from the physical storage media. If a different media is used (such
  36:Lib/DataflashManager.c ****  *  as a SD card or EEPROM), functions similar to these will need to be generated.
  37:Lib/DataflashManager.c ****  */
  38:Lib/DataflashManager.c **** 
  39:Lib/DataflashManager.c **** #define  INCLUDE_FROM_DATAFLASHMANAGER_C
  40:Lib/DataflashManager.c **** #include "DataflashManager.h"
  41:Lib/DataflashManager.c **** 
  42:Lib/DataflashManager.c **** /** Writes blocks (OS blocks, not Dataflash pages) to the storage medium, the board Dataflash IC(s)
  43:Lib/DataflashManager.c ****  *  the pre-selected data OUT endpoint. This routine reads in OS sized blocks from the endpoint and
  44:Lib/DataflashManager.c ****  *  them to the Dataflash in Dataflash page sized blocks.
  45:Lib/DataflashManager.c ****  *
  46:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the write sequence
  47:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to write
  48:Lib/DataflashManager.c ****  */
  49:Lib/DataflashManager.c **** void DataflashManager_WriteBlocks(const uint32_t BlockAddress,
  50:Lib/DataflashManager.c ****                                   uint16_t TotalBlocks)
  51:Lib/DataflashManager.c **** {
 255               		.loc 3 51 0
 256               		.cfi_startproc
 257               	.LVL17:
 258 0000 7F92      		push r7
 259               	.LCFI0:
 260               		.cfi_def_cfa_offset 3
 261               		.cfi_offset 7, -2
 262 0002 8F92      		push r8
 263               	.LCFI1:
 264               		.cfi_def_cfa_offset 4
 265               		.cfi_offset 8, -3
 266 0004 9F92      		push r9
 267               	.LCFI2:
 268               		.cfi_def_cfa_offset 5
 269               		.cfi_offset 9, -4
 270 0006 AF92      		push r10
 271               	.LCFI3:
 272               		.cfi_def_cfa_offset 6
 273               		.cfi_offset 10, -5
 274 0008 BF92      		push r11
 275               	.LCFI4:
 276               		.cfi_def_cfa_offset 7
 277               		.cfi_offset 11, -6
 278 000a CF92      		push r12
 279               	.LCFI5:
 280               		.cfi_def_cfa_offset 8
 281               		.cfi_offset 12, -7
 282 000c DF92      		push r13
 283               	.LCFI6:
 284               		.cfi_def_cfa_offset 9
 285               		.cfi_offset 13, -8
 286 000e EF92      		push r14
 287               	.LCFI7:
 288               		.cfi_def_cfa_offset 10
 289               		.cfi_offset 14, -9
 290 0010 FF92      		push r15
 291               	.LCFI8:
 292               		.cfi_def_cfa_offset 11
 293               		.cfi_offset 15, -10
 294 0012 0F93      		push r16
 295               	.LCFI9:
 296               		.cfi_def_cfa_offset 12
 297               		.cfi_offset 16, -11
 298 0014 1F93      		push r17
 299               	.LCFI10:
 300               		.cfi_def_cfa_offset 13
 301               		.cfi_offset 17, -12
 302 0016 CF93      		push r28
 303               	.LCFI11:
 304               		.cfi_def_cfa_offset 14
 305               		.cfi_offset 28, -13
 306 0018 DF93      		push r29
 307               	.LCFI12:
 308               		.cfi_def_cfa_offset 15
 309               		.cfi_offset 29, -14
 310               	/* prologue: function */
 311               	/* frame size = 0 */
 312               	/* stack size = 13 */
 313               	.L__stack_usage = 13
 314 001a 8A01      		movw r16,r20
  52:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 315               		.loc 3 52 0
 316 001c 4B01      		movw r8,r22
 317 001e 5C01      		movw r10,r24
 318 0020 39E0      		ldi r19,9
 319               		1:
 320 0022 880C      		lsl r8
 321 0024 991C      		rol r9
 322 0026 AA1C      		rol r10
 323 0028 BB1C      		rol r11
 324 002a 3A95      		dec r19
 325 002c 01F4      		brne 1b
 326 002e 4AE0      		ldi r20,10
 327               		1:
 328 0030 B694      		lsr r11
 329 0032 A794      		ror r10
 330 0034 9794      		ror r9
 331 0036 8794      		ror r8
 332 0038 4A95      		dec r20
 333 003a 01F4      		brne 1b
 334               	.LVL18:
 335 003c E401      		movw r28,r8
 336               	.LVL19:
  53:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 337               		.loc 3 53 0
 338 003e 762F      		mov r23,r22
 339 0040 6627      		clr r22
 340 0042 770F      		lsl r23
 341               	.LVL20:
 342 0044 7B01      		movw r14,r22
 343 0046 EE24      		clr r14
 344 0048 82E0      		ldi r24,2
 345 004a F822      		and r15,r24
 346               	.LVL21:
  54:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
  55:Lib/DataflashManager.c **** 	bool     UsingSecondBuffer   = false;
  56:Lib/DataflashManager.c **** 
  57:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
  58:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 347               		.loc 3 58 0
 348 004c C401      		movw r24,r8
 349 004e 0E94 0000 		call Dataflash_SelectChipFromPage
 350               	.LVL22:
 351               	.LBB552:
 352               	.LBB553:
 353               	.LBB554:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 354               		.loc 2 231 0
 355 0052 83E5      		ldi r24,lo8(83)
 356 0054 8EBD      		out 0x2e,r24
 357               	.L23:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 358               		.loc 2 232 0
 359 0056 0DB4      		in __tmp_reg__,0x2d
 360 0058 07FE      		sbrs __tmp_reg__,7
 361 005a 00C0      		rjmp .L23
 362               	.LVL23:
 363               	.LBE554:
 364               	.LBE553:
 365               	.LBE552:
  59:Lib/DataflashManager.c **** 
  60:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
  61:Lib/DataflashManager.c **** 	/* Copy selected dataflash's current page contents to the Dataflash buffer */
  62:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMTOBUFF1);
  63:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0);
 366               		.loc 3 63 0
 367 005c 60E0      		ldi r22,0
 368 005e 70E0      		ldi r23,0
 369 0060 C401      		movw r24,r8
 370 0062 0E94 0000 		call Dataflash_SendAddressBytes
 371               	.LVL24:
  64:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 372               		.loc 3 64 0
 373 0066 0E94 0000 		call Dataflash_WaitWhileBusy
 374               	.LVL25:
 375               	.LBB555:
 376               	.LBB556:
 377               	.LBB557:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 378               		.loc 2 231 0
 379 006a 84E8      		ldi r24,lo8(-124)
 380 006c 8EBD      		out 0x2e,r24
 381               	.L24:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 382               		.loc 2 232 0
 383 006e 0DB4      		in __tmp_reg__,0x2d
 384 0070 07FE      		sbrs __tmp_reg__,7
 385 0072 00C0      		rjmp .L24
 386               	.LVL26:
 387               	.LBE557:
 388               	.LBE556:
 389               	.LBE555:
  65:Lib/DataflashManager.c **** #endif
  66:Lib/DataflashManager.c **** 
  67:Lib/DataflashManager.c **** 	/* Send the Dataflash buffer write command */
  68:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_BUFF1WRITE);
  69:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(0, CurrDFPageByte);
 390               		.loc 3 69 0
 391 0074 B701      		movw r22,r14
 392 0076 80E0      		ldi r24,0
 393 0078 90E0      		ldi r25,0
 394 007a 0E94 0000 		call Dataflash_SendAddressBytes
 395               	.LVL27:
  70:Lib/DataflashManager.c **** 
  71:Lib/DataflashManager.c **** 	/* Wait until endpoint is ready before continuing */
  72:Lib/DataflashManager.c **** 	if (Endpoint_WaitUntilReady())
 396               		.loc 3 72 0
 397 007e 0E94 0000 		call Endpoint_WaitUntilReady
 398               	.LVL28:
 399 0082 8111      		cpse r24,__zero_reg__
 400 0084 00C0      		rjmp .L22
  54:Lib/DataflashManager.c **** 	bool     UsingSecondBuffer   = false;
 401               		.loc 3 54 0
 402 0086 B701      		movw r22,r14
 403 0088 94E0      		ldi r25,4
 404               		1:
 405 008a 7695      		lsr r23
 406 008c 6795      		ror r22
 407 008e 9A95      		dec r25
 408 0090 01F4      		brne 1b
 409 0092 962E      		mov r9,r22
 410 0094 5801      		movw r10,r16
 411 0096 25E0      		ldi r18,5
 412               		1:
 413 0098 AA0C      		lsl r10
 414 009a BB1C      		rol r11
 415 009c 2A95      		dec r18
 416 009e 01F4      		brne 1b
 417 00a0 E12C      		mov r14,__zero_reg__
 418 00a2 F12C      		mov r15,__zero_reg__
 419               	.LVL29:
 420 00a4 812C      		mov r8,__zero_reg__
 421               	.LVL30:
 422               	.L26:
  73:Lib/DataflashManager.c **** 	  return;
  74:Lib/DataflashManager.c **** 
  75:Lib/DataflashManager.c **** 	while (TotalBlocks)
 423               		.loc 3 75 0
 424 00a6 0115      		cp r16,__zero_reg__
 425 00a8 1105      		cpc r17,__zero_reg__
 426 00aa 01F4      		brne .+2
 427 00ac 00C0      		rjmp .L57
 428 00ae 6501      		movw r12,r10
 429 00b0 CE0C      		add r12,r14
 430 00b2 DF1C      		adc r13,r15
 431 00b4 80E2      		ldi r24,lo8(32)
 432 00b6 782E      		mov r7,r24
 433               	.L56:
 434               	.LVL31:
 435               	.LBB558:
 436               	.LBB559:
 437               	.LBB560:
 438               		.file 4 "../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 128:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 132:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 133:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 136:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */			
 148:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 223:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 224:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 225:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 226:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 227:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 228:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 229:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 230:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 231:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 232:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 233:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 234:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 236:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 237:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 238:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 240:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 241:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 242:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 243:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 244:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 245:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 246:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 247:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 249:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 250:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 251:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 253:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 254:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 257:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 258:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 261:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 262:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 263:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 264:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 265:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 266:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 267:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 268:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 269:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 270:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 271:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 272:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 273:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 274:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 275:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 276:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 277:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 278:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 279:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 280:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 281:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 282:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 283:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 284:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 285:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 286:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 287:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 288:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 289:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 290:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 291:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 292:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 293:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 294:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 295:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 296:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 297:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 298:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 299:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 300:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 301:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 302:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 303:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 304:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 305:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 306:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 307:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 308:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 309:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 310:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 311:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 312:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 313:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 314:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 315:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 316:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 317:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 318:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 319:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 320:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 321:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 322:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 323:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 324:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 325:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 326:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 327:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 328:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 329:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 330:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 331:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 332:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 333:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 334:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 335:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 336:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 337:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 338:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 339:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 340:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 341:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 342:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 343:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 344:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 347:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 348:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 349:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 350:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 351:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 352:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 353:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 354:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 355:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 356:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 357:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 358:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 359:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 360:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 361:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 362:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 363:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 364:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 365:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 366:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 367:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 368:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 369:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 370:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 371:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 372:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 373:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 374:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 375:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 376:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 377:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 378:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 379:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 380:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 381:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 382:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 383:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 384:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 385:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 386:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 387:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 388:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 389:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 390:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 391:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 392:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 393:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 394:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 395:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 396:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 397:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 398:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 399:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 400:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 401:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 402:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 403:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 404:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 405:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 406:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 407:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 408:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 409:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 410:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 411:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 415:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 416:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 417:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 419:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 420:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 439               		.loc 4 420 0
 440 00b8 8091 E800 		lds r24,232
 441               	.LBE560:
 442               	.LBE559:
  76:Lib/DataflashManager.c **** 	{
  77:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
  78:Lib/DataflashManager.c **** 
  79:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
  80:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
  81:Lib/DataflashManager.c **** 		{
  82:Lib/DataflashManager.c **** 			/* Check if the endpoint is currently empty */
  83:Lib/DataflashManager.c **** 			if (!(Endpoint_IsReadWriteAllowed()))
 443               		.loc 3 83 0
 444 00bc 85FF      		sbrs r24,5
 445 00be 00C0      		rjmp .L28
 446               	.L31:
  84:Lib/DataflashManager.c **** 			{
  85:Lib/DataflashManager.c **** 				/* Clear the current endpoint bank */
  86:Lib/DataflashManager.c **** 				Endpoint_ClearOUT();
  87:Lib/DataflashManager.c **** 
  88:Lib/DataflashManager.c **** 				/* Wait until the host has sent another packet */
  89:Lib/DataflashManager.c **** 				if (Endpoint_WaitUntilReady())
  90:Lib/DataflashManager.c **** 				  return;
  91:Lib/DataflashManager.c **** 			}
  92:Lib/DataflashManager.c **** 
  93:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
  94:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 447               		.loc 3 94 0
 448 00c0 80E4      		ldi r24,lo8(64)
 449 00c2 9812      		cpse r9,r24
 450 00c4 00C0      		rjmp .L30
 451 00c6 00C0      		rjmp .L88
 452               	.L28:
 453               	.LBB561:
 454               	.LBB562:
 421:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 422:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 423:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 424:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 425:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 426:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 427:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 428:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 429:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 430:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 431:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 432:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 433:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 434:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 435:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 436:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 438:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 439:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 440:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 441:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 442:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 443:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 444:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 445:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 446:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 447:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 448:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 449:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 451:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 453:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 454:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 456:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 457:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 458:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 459:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 460:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 461:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 462:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 463:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 464:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 465:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 466:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 467:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 468:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 469:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 470:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 471:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 472:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 473:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 474:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 475:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 476:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 477:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 478:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 479:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 480:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 481:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 482:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 483:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 484:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 485:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 487:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 489:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 490:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 492:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 495:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 496:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 497:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 498:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 499:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 500:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 501:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 502:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 503:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 504:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 505:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 506:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 507:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 508:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 509:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 510:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 511:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 512:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 513:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 514:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 515:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 516:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 517:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 518:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 519:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 520:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 521:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 522:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 523:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 524:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 526:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 528:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 529:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 531:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 455               		.loc 4 531 0
 456 00c8 8091 E800 		lds r24,232
 457 00cc 8B77      		andi r24,lo8(123)
 458 00ce 8093 E800 		sts 232,r24
 459               	.LBE562:
 460               	.LBE561:
  89:Lib/DataflashManager.c **** 				  return;
 461               		.loc 3 89 0
 462 00d2 0E94 0000 		call Endpoint_WaitUntilReady
 463               	.LVL32:
 464 00d6 8823      		tst r24
 465 00d8 01F0      		breq .L31
 466 00da 00C0      		rjmp .L22
 467               	.L88:
  95:Lib/DataflashManager.c **** 			{
  96:Lib/DataflashManager.c **** 				/* Write the Dataflash buffer contents back to the Dataflash page */
  97:Lib/DataflashManager.c **** 				Dataflash_WaitWhileBusy();
 468               		.loc 3 97 0
 469 00dc 0E94 0000 		call Dataflash_WaitWhileBusy
 470               	.LVL33:
  98:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWI
 471               		.loc 3 98 0
 472 00e0 8110      		cpse r8,__zero_reg__
 473 00e2 00C0      		rjmp .L61
 474 00e4 83E8      		ldi r24,lo8(-125)
 475 00e6 00C0      		rjmp .L32
 476               	.L61:
 477 00e8 86E8      		ldi r24,lo8(-122)
 478               	.L32:
 479               	.LVL34:
 480               	.LBB563:
 481               	.LBB564:
 482               	.LBB565:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 483               		.loc 2 231 0 discriminator 4
 484 00ea 8EBD      		out 0x2e,r24
 485               	.L33:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 486               		.loc 2 232 0
 487 00ec 0DB4      		in __tmp_reg__,0x2d
 488 00ee 07FE      		sbrs __tmp_reg__,7
 489 00f0 00C0      		rjmp .L33
 490               	.LVL35:
 491               	.LBE565:
 492               	.LBE564:
 493               	.LBE563:
  99:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 494               		.loc 3 99 0 discriminator 4
 495 00f2 60E0      		ldi r22,0
 496 00f4 70E0      		ldi r23,0
 497 00f6 CE01      		movw r24,r28
 498 00f8 0E94 0000 		call Dataflash_SendAddressBytes
 499               	.LVL36:
 100:Lib/DataflashManager.c **** 
 101:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 102:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 103:Lib/DataflashManager.c **** 				CurrDFPage++;
 500               		.loc 3 103 0 discriminator 4
 501 00fc 2196      		adiw r28,1
 502               	.LVL37:
 503               	.LBB566:
 504               	.LBB567:
 106:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 505               		.loc 1 106 0 discriminator 4
 506 00fe 8EB1      		in r24,0xe
 507               	.LBE567:
 508               	.LBE566:
 104:Lib/DataflashManager.c **** 
 105:Lib/DataflashManager.c **** 				/* Once all the Dataflash ICs have had their first buffers filled, switch buffers to maintain t
 106:Lib/DataflashManager.c **** 				if (Dataflash_GetSelectedChip() == DATAFLASH_CHIP_MASK(DATAFLASH_TOTALCHIPS))
 509               		.loc 3 106 0 discriminator 4
 510 0100 8370      		andi r24,lo8(3)
 511 0102 8130      		cpi r24,lo8(1)
 512 0104 01F4      		brne .L34
 107:Lib/DataflashManager.c **** 				  UsingSecondBuffer = !(UsingSecondBuffer);
 513               		.loc 3 107 0
 514 0106 8826      		eor r8,r24
 515               	.LVL38:
 516               	.L34:
 108:Lib/DataflashManager.c **** 
 109:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 110:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 517               		.loc 3 110 0
 518 0108 CE01      		movw r24,r28
 519 010a 0E94 0000 		call Dataflash_SelectChipFromPage
 520               	.LVL39:
 111:Lib/DataflashManager.c **** 
 112:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
 113:Lib/DataflashManager.c **** 				/* If less than one Dataflash page remaining, copy over the existing page to preserve trailing 
 114:Lib/DataflashManager.c **** 				if ((TotalBlocks * (VIRTUAL_MEMORY_BLOCK_SIZE >> 4)) < (DATAFLASH_PAGE_SIZE >> 4))
 521               		.loc 3 114 0
 522 010e 80E4      		ldi r24,64
 523 0110 C816      		cp r12,r24
 524 0112 D104      		cpc r13,__zero_reg__
 525 0114 00F4      		brsh .L35
 115:Lib/DataflashManager.c **** 				{
 116:Lib/DataflashManager.c **** 					/* Copy selected dataflash's current page contents to the Dataflash buffer */
 117:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 526               		.loc 3 117 0
 527 0116 0E94 0000 		call Dataflash_WaitWhileBusy
 528               	.LVL40:
 118:Lib/DataflashManager.c **** 					Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_MAINMEMTOBUFF2 : DF_CMD_MAINMEMTOBUFF1);
 529               		.loc 3 118 0
 530 011a 8110      		cpse r8,__zero_reg__
 531 011c 00C0      		rjmp .L62
 532 011e 83E5      		ldi r24,lo8(83)
 533 0120 00C0      		rjmp .L36
 534               	.L62:
 535 0122 85E5      		ldi r24,lo8(85)
 536               	.L36:
 537               	.LVL41:
 538               	.LBB568:
 539               	.LBB569:
 540               	.LBB570:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 541               		.loc 2 231 0 discriminator 4
 542 0124 8EBD      		out 0x2e,r24
 543               	.L37:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 544               		.loc 2 232 0
 545 0126 0DB4      		in __tmp_reg__,0x2d
 546 0128 07FE      		sbrs __tmp_reg__,7
 547 012a 00C0      		rjmp .L37
 548               	.LVL42:
 549               	.LBE570:
 550               	.LBE569:
 551               	.LBE568:
 119:Lib/DataflashManager.c **** 					Dataflash_SendAddressBytes(CurrDFPage, 0);
 552               		.loc 3 119 0 discriminator 4
 553 012c 60E0      		ldi r22,0
 554 012e 70E0      		ldi r23,0
 555 0130 CE01      		movw r24,r28
 556 0132 0E94 0000 		call Dataflash_SendAddressBytes
 557               	.LVL43:
 120:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 558               		.loc 3 120 0 discriminator 4
 559 0136 0E94 0000 		call Dataflash_WaitWhileBusy
 560               	.LVL44:
 561               	.L35:
 121:Lib/DataflashManager.c **** 				}
 122:Lib/DataflashManager.c **** #endif
 123:Lib/DataflashManager.c **** 
 124:Lib/DataflashManager.c **** 				/* Send the Dataflash buffer write command */
 125:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2WRITE : DF_CMD_BUFF1WRITE);
 562               		.loc 3 125 0
 563 013a 8110      		cpse r8,__zero_reg__
 564 013c 00C0      		rjmp .L63
 565 013e 84E8      		ldi r24,lo8(-124)
 566 0140 00C0      		rjmp .L38
 567               	.L63:
 568 0142 87E8      		ldi r24,lo8(-121)
 569               	.L38:
 570               	.LVL45:
 571               	.LBB571:
 572               	.LBB572:
 573               	.LBB573:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 574               		.loc 2 231 0 discriminator 4
 575 0144 8EBD      		out 0x2e,r24
 576               	.L39:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 577               		.loc 2 232 0
 578 0146 0DB4      		in __tmp_reg__,0x2d
 579 0148 07FE      		sbrs __tmp_reg__,7
 580 014a 00C0      		rjmp .L39
 581               	.LVL46:
 582               	.LBE573:
 583               	.LBE572:
 584               	.LBE571:
 126:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(0, 0);
 585               		.loc 3 126 0 discriminator 4
 586 014c 60E0      		ldi r22,0
 587 014e 70E0      		ldi r23,0
 588 0150 80E0      		ldi r24,0
 589 0152 90E0      		ldi r25,0
 590 0154 0E94 0000 		call Dataflash_SendAddressBytes
 591               	.LVL47:
 102:Lib/DataflashManager.c **** 				CurrDFPage++;
 592               		.loc 3 102 0 discriminator 4
 593 0158 912C      		mov r9,__zero_reg__
 594               	.LVL48:
 595               	.L30:
 596               	.LBB574:
 597               	.LBB575:
 532:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 533:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 534:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 535:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 536:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 537:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 538:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 539:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 540:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 541:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 542:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 543:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 544:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 545:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 546:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 547:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 548:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 549:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 550:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 551:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 552:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 553:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 554:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 555:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 556:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 557:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 558:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 559:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 560:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 561:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 562:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 563:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 564:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 565:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 566:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 567:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 568:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 569:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 570:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 571:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 572:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 573:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 574:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 575:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 576:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 577:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 578:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 579:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 580:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 581:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 582:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 583:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 584:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 585:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 586:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 587:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 588:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 589:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 590:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 591:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 592:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 593:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 594:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 595:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 596:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 597:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 598:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 599:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 600:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 601:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 602:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 603:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 604:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 605:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 606:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 607:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 608:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 609:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 610:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 611:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 612:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 598               		.loc 4 612 0
 599 015a 8091 F100 		lds r24,241
 600               	.LBE575:
 601               	.LBE574:
 602               	.LBB576:
 603               	.LBB577:
 604               	.LBB578:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 605               		.loc 2 231 0
 606 015e 8EBD      		out 0x2e,r24
 607               	.L40:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 608               		.loc 2 232 0
 609 0160 0DB4      		in __tmp_reg__,0x2d
 610 0162 07FE      		sbrs __tmp_reg__,7
 611 0164 00C0      		rjmp .L40
 612               	.LBE578:
 613               	.LBE577:
 614               	.LBE576:
 615               	.LBB579:
 616               	.LBB580:
 617               		.loc 4 612 0
 618 0166 8091 F100 		lds r24,241
 619               	.LBE580:
 620               	.LBE579:
 621               	.LBB581:
 622               	.LBB582:
 623               	.LBB583:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 624               		.loc 2 231 0
 625 016a 8EBD      		out 0x2e,r24
 626               	.L41:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 627               		.loc 2 232 0
 628 016c 0DB4      		in __tmp_reg__,0x2d
 629 016e 07FE      		sbrs __tmp_reg__,7
 630 0170 00C0      		rjmp .L41
 631               	.LBE583:
 632               	.LBE582:
 633               	.LBE581:
 634               	.LBB584:
 635               	.LBB585:
 636               		.loc 4 612 0
 637 0172 8091 F100 		lds r24,241
 638               	.LBE585:
 639               	.LBE584:
 640               	.LBB586:
 641               	.LBB587:
 642               	.LBB588:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 643               		.loc 2 231 0
 644 0176 8EBD      		out 0x2e,r24
 645               	.L42:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 646               		.loc 2 232 0
 647 0178 0DB4      		in __tmp_reg__,0x2d
 648 017a 07FE      		sbrs __tmp_reg__,7
 649 017c 00C0      		rjmp .L42
 650               	.LBE588:
 651               	.LBE587:
 652               	.LBE586:
 653               	.LBB589:
 654               	.LBB590:
 655               		.loc 4 612 0
 656 017e 8091 F100 		lds r24,241
 657               	.LBE590:
 658               	.LBE589:
 659               	.LBB591:
 660               	.LBB592:
 661               	.LBB593:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 662               		.loc 2 231 0
 663 0182 8EBD      		out 0x2e,r24
 664               	.L43:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 665               		.loc 2 232 0
 666 0184 0DB4      		in __tmp_reg__,0x2d
 667 0186 07FE      		sbrs __tmp_reg__,7
 668 0188 00C0      		rjmp .L43
 669               	.LBE593:
 670               	.LBE592:
 671               	.LBE591:
 672               	.LBB594:
 673               	.LBB595:
 674               		.loc 4 612 0
 675 018a 8091 F100 		lds r24,241
 676               	.LBE595:
 677               	.LBE594:
 678               	.LBB596:
 679               	.LBB597:
 680               	.LBB598:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 681               		.loc 2 231 0
 682 018e 8EBD      		out 0x2e,r24
 683               	.L44:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 684               		.loc 2 232 0
 685 0190 0DB4      		in __tmp_reg__,0x2d
 686 0192 07FE      		sbrs __tmp_reg__,7
 687 0194 00C0      		rjmp .L44
 688               	.LBE598:
 689               	.LBE597:
 690               	.LBE596:
 691               	.LBB599:
 692               	.LBB600:
 693               		.loc 4 612 0
 694 0196 8091 F100 		lds r24,241
 695               	.LBE600:
 696               	.LBE599:
 697               	.LBB601:
 698               	.LBB602:
 699               	.LBB603:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 700               		.loc 2 231 0
 701 019a 8EBD      		out 0x2e,r24
 702               	.L45:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 703               		.loc 2 232 0
 704 019c 0DB4      		in __tmp_reg__,0x2d
 705 019e 07FE      		sbrs __tmp_reg__,7
 706 01a0 00C0      		rjmp .L45
 707               	.LBE603:
 708               	.LBE602:
 709               	.LBE601:
 710               	.LBB604:
 711               	.LBB605:
 712               		.loc 4 612 0
 713 01a2 8091 F100 		lds r24,241
 714               	.LBE605:
 715               	.LBE604:
 716               	.LBB606:
 717               	.LBB607:
 718               	.LBB608:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 719               		.loc 2 231 0
 720 01a6 8EBD      		out 0x2e,r24
 721               	.L46:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 722               		.loc 2 232 0
 723 01a8 0DB4      		in __tmp_reg__,0x2d
 724 01aa 07FE      		sbrs __tmp_reg__,7
 725 01ac 00C0      		rjmp .L46
 726               	.LBE608:
 727               	.LBE607:
 728               	.LBE606:
 729               	.LBB609:
 730               	.LBB610:
 731               		.loc 4 612 0
 732 01ae 8091 F100 		lds r24,241
 733               	.LBE610:
 734               	.LBE609:
 735               	.LBB611:
 736               	.LBB612:
 737               	.LBB613:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 738               		.loc 2 231 0
 739 01b2 8EBD      		out 0x2e,r24
 740               	.L47:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 741               		.loc 2 232 0
 742 01b4 0DB4      		in __tmp_reg__,0x2d
 743 01b6 07FE      		sbrs __tmp_reg__,7
 744 01b8 00C0      		rjmp .L47
 745               	.LBE613:
 746               	.LBE612:
 747               	.LBE611:
 748               	.LBB614:
 749               	.LBB615:
 750               		.loc 4 612 0
 751 01ba 8091 F100 		lds r24,241
 752               	.LBE615:
 753               	.LBE614:
 754               	.LBB616:
 755               	.LBB617:
 756               	.LBB618:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 757               		.loc 2 231 0
 758 01be 8EBD      		out 0x2e,r24
 759               	.L48:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 760               		.loc 2 232 0
 761 01c0 0DB4      		in __tmp_reg__,0x2d
 762 01c2 07FE      		sbrs __tmp_reg__,7
 763 01c4 00C0      		rjmp .L48
 764               	.LBE618:
 765               	.LBE617:
 766               	.LBE616:
 767               	.LBB619:
 768               	.LBB620:
 769               		.loc 4 612 0
 770 01c6 8091 F100 		lds r24,241
 771               	.LBE620:
 772               	.LBE619:
 773               	.LBB621:
 774               	.LBB622:
 775               	.LBB623:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 776               		.loc 2 231 0
 777 01ca 8EBD      		out 0x2e,r24
 778               	.L49:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 779               		.loc 2 232 0
 780 01cc 0DB4      		in __tmp_reg__,0x2d
 781 01ce 07FE      		sbrs __tmp_reg__,7
 782 01d0 00C0      		rjmp .L49
 783               	.LBE623:
 784               	.LBE622:
 785               	.LBE621:
 786               	.LBB624:
 787               	.LBB625:
 788               		.loc 4 612 0
 789 01d2 8091 F100 		lds r24,241
 790               	.LBE625:
 791               	.LBE624:
 792               	.LBB626:
 793               	.LBB627:
 794               	.LBB628:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 795               		.loc 2 231 0
 796 01d6 8EBD      		out 0x2e,r24
 797               	.L50:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 798               		.loc 2 232 0
 799 01d8 0DB4      		in __tmp_reg__,0x2d
 800 01da 07FE      		sbrs __tmp_reg__,7
 801 01dc 00C0      		rjmp .L50
 802               	.LBE628:
 803               	.LBE627:
 804               	.LBE626:
 805               	.LBB629:
 806               	.LBB630:
 807               		.loc 4 612 0
 808 01de 8091 F100 		lds r24,241
 809               	.LBE630:
 810               	.LBE629:
 811               	.LBB631:
 812               	.LBB632:
 813               	.LBB633:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 814               		.loc 2 231 0
 815 01e2 8EBD      		out 0x2e,r24
 816               	.L51:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 817               		.loc 2 232 0
 818 01e4 0DB4      		in __tmp_reg__,0x2d
 819 01e6 07FE      		sbrs __tmp_reg__,7
 820 01e8 00C0      		rjmp .L51
 821               	.LBE633:
 822               	.LBE632:
 823               	.LBE631:
 824               	.LBB634:
 825               	.LBB635:
 826               		.loc 4 612 0
 827 01ea 8091 F100 		lds r24,241
 828               	.LBE635:
 829               	.LBE634:
 830               	.LBB636:
 831               	.LBB637:
 832               	.LBB638:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 833               		.loc 2 231 0
 834 01ee 8EBD      		out 0x2e,r24
 835               	.L52:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 836               		.loc 2 232 0
 837 01f0 0DB4      		in __tmp_reg__,0x2d
 838 01f2 07FE      		sbrs __tmp_reg__,7
 839 01f4 00C0      		rjmp .L52
 840               	.LBE638:
 841               	.LBE637:
 842               	.LBE636:
 843               	.LBB639:
 844               	.LBB640:
 845               		.loc 4 612 0
 846 01f6 8091 F100 		lds r24,241
 847               	.LBE640:
 848               	.LBE639:
 849               	.LBB641:
 850               	.LBB642:
 851               	.LBB643:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 852               		.loc 2 231 0
 853 01fa 8EBD      		out 0x2e,r24
 854               	.L53:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 855               		.loc 2 232 0
 856 01fc 0DB4      		in __tmp_reg__,0x2d
 857 01fe 07FE      		sbrs __tmp_reg__,7
 858 0200 00C0      		rjmp .L53
 859               	.LBE643:
 860               	.LBE642:
 861               	.LBE641:
 862               	.LBB644:
 863               	.LBB645:
 864               		.loc 4 612 0
 865 0202 8091 F100 		lds r24,241
 866               	.LBE645:
 867               	.LBE644:
 868               	.LBB646:
 869               	.LBB647:
 870               	.LBB648:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 871               		.loc 2 231 0
 872 0206 8EBD      		out 0x2e,r24
 873               	.L54:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 874               		.loc 2 232 0
 875 0208 0DB4      		in __tmp_reg__,0x2d
 876 020a 07FE      		sbrs __tmp_reg__,7
 877 020c 00C0      		rjmp .L54
 878               	.LBE648:
 879               	.LBE647:
 880               	.LBE646:
 881               	.LBB649:
 882               	.LBB650:
 883               		.loc 4 612 0
 884 020e 8091 F100 		lds r24,241
 885               	.LBE650:
 886               	.LBE649:
 887               	.LBB651:
 888               	.LBB652:
 889               	.LBB653:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 890               		.loc 2 231 0
 891 0212 8EBD      		out 0x2e,r24
 892               	.L55:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 893               		.loc 2 232 0
 894 0214 0DB4      		in __tmp_reg__,0x2d
 895 0216 07FE      		sbrs __tmp_reg__,7
 896 0218 00C0      		rjmp .L55
 897               	.LBE653:
 898               	.LBE652:
 899               	.LBE651:
 127:Lib/DataflashManager.c **** 			}
 128:Lib/DataflashManager.c **** 
 129:Lib/DataflashManager.c **** 			/* Write one 16-byte chunk of data to the Dataflash */
 130:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 131:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 132:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 133:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 134:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 135:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 136:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 137:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 138:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 139:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 140:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 141:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 142:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 143:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 144:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 145:Lib/DataflashManager.c **** 			Dataflash_SendByte(Endpoint_Read_8());
 146:Lib/DataflashManager.c **** 
 147:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 148:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 900               		.loc 3 148 0
 901 021a 9394      		inc r9
 902               	.LVL49:
 149:Lib/DataflashManager.c **** 
 150:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 151:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 152:Lib/DataflashManager.c **** 
 153:Lib/DataflashManager.c **** 			/* Check if the current command is being aborted by the host */
 154:Lib/DataflashManager.c **** 			if (IsMassStoreReset)
 903               		.loc 3 154 0
 904 021c 8091 0000 		lds r24,IsMassStoreReset
 905 0220 8111      		cpse r24,__zero_reg__
 906 0222 00C0      		rjmp .L22
 907 0224 7A94      		dec r7
 908               	.LVL50:
  80:Lib/DataflashManager.c **** 		{
 909               		.loc 3 80 0
 910 0226 7110      		cpse r7,__zero_reg__
 911 0228 00C0      		rjmp .L56
 155:Lib/DataflashManager.c **** 			  return;
 156:Lib/DataflashManager.c **** 		}
 157:Lib/DataflashManager.c **** 
 158:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 159:Lib/DataflashManager.c **** 		TotalBlocks--;
 912               		.loc 3 159 0
 913 022a 0150      		subi r16,1
 914 022c 1109      		sbc r17,__zero_reg__
 915               	.LVL51:
 916 022e 80E2      		ldi r24,32
 917 0230 E81A      		sub r14,r24
 918 0232 F108      		sbc r15,__zero_reg__
 919 0234 00C0      		rjmp .L26
 920               	.LVL52:
 921               	.L57:
 922               	.LBE558:
 160:Lib/DataflashManager.c **** 	}
 161:Lib/DataflashManager.c **** 
 162:Lib/DataflashManager.c **** 	/* Write the Dataflash buffer contents back to the Dataflash page */
 163:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 923               		.loc 3 163 0
 924 0236 0E94 0000 		call Dataflash_WaitWhileBusy
 925               	.LVL53:
 164:Lib/DataflashManager.c **** 	Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWITHE
 926               		.loc 3 164 0
 927 023a 8110      		cpse r8,__zero_reg__
 928 023c 00C0      		rjmp .L64
 929 023e 83E8      		ldi r24,lo8(-125)
 930 0240 00C0      		rjmp .L58
 931               	.L64:
 932 0242 86E8      		ldi r24,lo8(-122)
 933               	.L58:
 934               	.LVL54:
 935               	.LBB654:
 936               	.LBB655:
 937               	.LBB656:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 938               		.loc 2 231 0 discriminator 4
 939 0244 8EBD      		out 0x2e,r24
 940               	.L59:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 941               		.loc 2 232 0
 942 0246 0DB4      		in __tmp_reg__,0x2d
 943 0248 07FE      		sbrs __tmp_reg__,7
 944 024a 00C0      		rjmp .L59
 945               	.LVL55:
 946               	.LBE656:
 947               	.LBE655:
 948               	.LBE654:
 165:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0x00);
 949               		.loc 3 165 0 discriminator 4
 950 024c 60E0      		ldi r22,0
 951 024e 70E0      		ldi r23,0
 952 0250 CE01      		movw r24,r28
 953 0252 0E94 0000 		call Dataflash_SendAddressBytes
 954               	.LVL56:
 166:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 955               		.loc 3 166 0 discriminator 4
 956 0256 0E94 0000 		call Dataflash_WaitWhileBusy
 957               	.LVL57:
 958               	.LBB657:
 959               	.LBB658:
 420:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 960               		.loc 4 420 0 discriminator 4
 961 025a 8091 E800 		lds r24,232
 962               	.LBE658:
 963               	.LBE657:
 167:Lib/DataflashManager.c **** 
 168:Lib/DataflashManager.c **** 	/* If the endpoint is empty, clear it ready for the next packet from the host */
 169:Lib/DataflashManager.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 964               		.loc 3 169 0 discriminator 4
 965 025e 85FD      		sbrc r24,5
 966 0260 00C0      		rjmp .L60
 967               	.LBB659:
 968               	.LBB660:
 531:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 969               		.loc 4 531 0
 970 0262 8091 E800 		lds r24,232
 971 0266 8B77      		andi r24,lo8(123)
 972 0268 8093 E800 		sts 232,r24
 973               	.L60:
 974               	.LVL58:
 975               	.LBE660:
 976               	.LBE659:
 977               	.LBB661:
 978               	.LBB662:
 979               	.LBB663:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 980               		.loc 1 117 0
 981 026c 8EB1      		in r24,0xe
 982 026e 8360      		ori r24,lo8(3)
 983 0270 8EB9      		out 0xe,r24
 984               	.LVL59:
 985               	.L22:
 986               	/* epilogue start */
 987               	.LBE663:
 988               	.LBE662:
 989               	.LBE661:
 170:Lib/DataflashManager.c **** 	  Endpoint_ClearOUT();
 171:Lib/DataflashManager.c **** 
 172:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 173:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 174:Lib/DataflashManager.c **** }
 990               		.loc 3 174 0
 991 0272 DF91      		pop r29
 992 0274 CF91      		pop r28
 993 0276 1F91      		pop r17
 994 0278 0F91      		pop r16
 995               	.LVL60:
 996 027a FF90      		pop r15
 997 027c EF90      		pop r14
 998 027e DF90      		pop r13
 999 0280 CF90      		pop r12
 1000 0282 BF90      		pop r11
 1001 0284 AF90      		pop r10
 1002 0286 9F90      		pop r9
 1003 0288 8F90      		pop r8
 1004 028a 7F90      		pop r7
 1005 028c 0895      		ret
 1006               		.cfi_endproc
 1007               	.LFE126:
 1009               		.section	.text.DataflashManager_ReadBlocks,"ax",@progbits
 1010               	.global	DataflashManager_ReadBlocks
 1012               	DataflashManager_ReadBlocks:
 1013               	.LFB127:
 175:Lib/DataflashManager.c **** 
 176:Lib/DataflashManager.c **** /** Reads blocks (OS blocks, not Dataflash pages) from the storage medium, the board Dataflash IC(s
 177:Lib/DataflashManager.c ****  *  the pre-selected data IN endpoint. This routine reads in Dataflash page sized blocks from the D
 178:Lib/DataflashManager.c ****  *  and writes them in OS sized blocks to the endpoint.
 179:Lib/DataflashManager.c ****  *
 180:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the read sequence
 181:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to read
 182:Lib/DataflashManager.c ****  */
 183:Lib/DataflashManager.c **** void DataflashManager_ReadBlocks(const uint32_t BlockAddress,
 184:Lib/DataflashManager.c ****                                  uint16_t TotalBlocks)
 185:Lib/DataflashManager.c **** {
 1014               		.loc 3 185 0
 1015               		.cfi_startproc
 1016               	.LVL61:
 1017 0000 8F92      		push r8
 1018               	.LCFI13:
 1019               		.cfi_def_cfa_offset 3
 1020               		.cfi_offset 8, -2
 1021 0002 9F92      		push r9
 1022               	.LCFI14:
 1023               		.cfi_def_cfa_offset 4
 1024               		.cfi_offset 9, -3
 1025 0004 AF92      		push r10
 1026               	.LCFI15:
 1027               		.cfi_def_cfa_offset 5
 1028               		.cfi_offset 10, -4
 1029 0006 BF92      		push r11
 1030               	.LCFI16:
 1031               		.cfi_def_cfa_offset 6
 1032               		.cfi_offset 11, -5
 1033 0008 EF92      		push r14
 1034               	.LCFI17:
 1035               		.cfi_def_cfa_offset 7
 1036               		.cfi_offset 14, -6
 1037 000a FF92      		push r15
 1038               	.LCFI18:
 1039               		.cfi_def_cfa_offset 8
 1040               		.cfi_offset 15, -7
 1041 000c 0F93      		push r16
 1042               	.LCFI19:
 1043               		.cfi_def_cfa_offset 9
 1044               		.cfi_offset 16, -8
 1045 000e 1F93      		push r17
 1046               	.LCFI20:
 1047               		.cfi_def_cfa_offset 10
 1048               		.cfi_offset 17, -9
 1049 0010 CF93      		push r28
 1050               	.LCFI21:
 1051               		.cfi_def_cfa_offset 11
 1052               		.cfi_offset 28, -10
 1053 0012 DF93      		push r29
 1054               	.LCFI22:
 1055               		.cfi_def_cfa_offset 12
 1056               		.cfi_offset 29, -11
 1057               	/* prologue: function */
 1058               	/* frame size = 0 */
 1059               	/* stack size = 10 */
 1060               	.L__stack_usage = 10
 1061 0014 8A01      		movw r16,r20
 186:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 1062               		.loc 3 186 0
 1063 0016 4B01      		movw r8,r22
 1064 0018 5C01      		movw r10,r24
 1065 001a 39E0      		ldi r19,9
 1066               		1:
 1067 001c 880C      		lsl r8
 1068 001e 991C      		rol r9
 1069 0020 AA1C      		rol r10
 1070 0022 BB1C      		rol r11
 1071 0024 3A95      		dec r19
 1072 0026 01F4      		brne 1b
 1073 0028 4AE0      		ldi r20,10
 1074               		1:
 1075 002a B694      		lsr r11
 1076 002c A794      		ror r10
 1077 002e 9794      		ror r9
 1078 0030 8794      		ror r8
 1079 0032 4A95      		dec r20
 1080 0034 01F4      		brne 1b
 1081               	.LVL62:
 1082 0036 E401      		movw r28,r8
 1083               	.LVL63:
 187:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 1084               		.loc 3 187 0
 1085 0038 762F      		mov r23,r22
 1086 003a 6627      		clr r22
 1087 003c 770F      		lsl r23
 1088               	.LVL64:
 1089 003e 7B01      		movw r14,r22
 1090 0040 EE24      		clr r14
 1091 0042 82E0      		ldi r24,2
 1092 0044 F822      		and r15,r24
 1093               	.LVL65:
 188:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
 189:Lib/DataflashManager.c **** 
 190:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
 191:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 1094               		.loc 3 191 0
 1095 0046 C401      		movw r24,r8
 1096 0048 0E94 0000 		call Dataflash_SelectChipFromPage
 1097               	.LVL66:
 1098               	.LBB664:
 1099               	.LBB665:
 1100               	.LBB666:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1101               		.loc 2 231 0
 1102 004c 82ED      		ldi r24,lo8(-46)
 1103 004e 8EBD      		out 0x2e,r24
 1104               	.L90:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1105               		.loc 2 232 0
 1106 0050 0DB4      		in __tmp_reg__,0x2d
 1107 0052 07FE      		sbrs __tmp_reg__,7
 1108 0054 00C0      		rjmp .L90
 1109               	.LVL67:
 1110               	.LBE666:
 1111               	.LBE665:
 1112               	.LBE664:
 192:Lib/DataflashManager.c **** 
 193:Lib/DataflashManager.c **** 	/* Send the Dataflash main memory page read command */
 194:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 195:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, CurrDFPageByte);
 1113               		.loc 3 195 0
 1114 0056 B701      		movw r22,r14
 1115 0058 C401      		movw r24,r8
 1116 005a 0E94 0000 		call Dataflash_SendAddressBytes
 1117               	.LVL68:
 1118               	.LBB667:
 1119               	.LBB668:
 1120               	.LBB669:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1121               		.loc 2 231 0
 1122 005e 1EBC      		out 0x2e,__zero_reg__
 1123               	.L91:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1124               		.loc 2 232 0
 1125 0060 0DB4      		in __tmp_reg__,0x2d
 1126 0062 07FE      		sbrs __tmp_reg__,7
 1127 0064 00C0      		rjmp .L91
 1128               	.LVL69:
 1129               	.LBE669:
 1130               	.LBE668:
 1131               	.LBE667:
 1132               	.LBB670:
 1133               	.LBB671:
 1134               	.LBB672:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1135               		.loc 2 231 0
 1136 0066 1EBC      		out 0x2e,__zero_reg__
 1137               	.L92:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1138               		.loc 2 232 0
 1139 0068 0DB4      		in __tmp_reg__,0x2d
 1140 006a 07FE      		sbrs __tmp_reg__,7
 1141 006c 00C0      		rjmp .L92
 1142               	.LVL70:
 1143               	.LBE672:
 1144               	.LBE671:
 1145               	.LBE670:
 1146               	.LBB673:
 1147               	.LBB674:
 1148               	.LBB675:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1149               		.loc 2 231 0
 1150 006e 1EBC      		out 0x2e,__zero_reg__
 1151               	.L93:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1152               		.loc 2 232 0
 1153 0070 0DB4      		in __tmp_reg__,0x2d
 1154 0072 07FE      		sbrs __tmp_reg__,7
 1155 0074 00C0      		rjmp .L93
 1156               	.LVL71:
 1157               	.LBE675:
 1158               	.LBE674:
 1159               	.LBE673:
 1160               	.LBB676:
 1161               	.LBB677:
 1162               	.LBB678:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1163               		.loc 2 231 0
 1164 0076 1EBC      		out 0x2e,__zero_reg__
 1165               	.L94:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1166               		.loc 2 232 0
 1167 0078 0DB4      		in __tmp_reg__,0x2d
 1168 007a 07FE      		sbrs __tmp_reg__,7
 1169 007c 00C0      		rjmp .L94
 1170               	.LVL72:
 1171               	.LBE678:
 1172               	.LBE677:
 1173               	.LBE676:
 196:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 197:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 198:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 199:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 200:Lib/DataflashManager.c **** 
 201:Lib/DataflashManager.c **** 	/* Wait until endpoint is ready before continuing */
 202:Lib/DataflashManager.c **** 	if (Endpoint_WaitUntilReady())
 1174               		.loc 3 202 0
 1175 007e 0E94 0000 		call Endpoint_WaitUntilReady
 1176               	.LVL73:
 1177 0082 8111      		cpse r24,__zero_reg__
 1178 0084 00C0      		rjmp .L89
 188:Lib/DataflashManager.c **** 
 1179               		.loc 3 188 0
 1180 0086 B701      		movw r22,r14
 1181 0088 94E0      		ldi r25,4
 1182               		1:
 1183 008a 7695      		lsr r23
 1184 008c 6795      		ror r22
 1185 008e 9A95      		dec r25
 1186 0090 01F4      		brne 1b
 1187 0092 F62E      		mov r15,r22
 1188               	.LBB679:
 1189               	.LBB680:
 1190               	.LBB681:
 1191               	.LBB682:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1192               		.loc 2 231 0
 1193 0094 22ED      		ldi r18,lo8(-46)
 1194 0096 B22E      		mov r11,r18
 1195               	.LVL74:
 1196               	.L96:
 1197               	.LBE682:
 1198               	.LBE681:
 1199               	.LBE680:
 1200               	.LBE679:
 203:Lib/DataflashManager.c **** 	  return;
 204:Lib/DataflashManager.c **** 
 205:Lib/DataflashManager.c **** 	while (TotalBlocks)
 1201               		.loc 3 205 0
 1202 0098 0115      		cp r16,__zero_reg__
 1203 009a 1105      		cpc r17,__zero_reg__
 1204 009c 01F4      		brne .+2
 1205 009e 00C0      		rjmp .L153
 1206 00a0 80E2      		ldi r24,lo8(32)
 1207 00a2 E82E      		mov r14,r24
 1208               	.L123:
 1209               	.LVL75:
 1210               	.LBB785:
 1211               	.LBB687:
 1212               	.LBB688:
 420:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1213               		.loc 4 420 0
 1214 00a4 8091 E800 		lds r24,232
 1215               	.LBE688:
 1216               	.LBE687:
 206:Lib/DataflashManager.c **** 	{
 207:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
 208:Lib/DataflashManager.c **** 
 209:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
 210:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
 211:Lib/DataflashManager.c **** 		{
 212:Lib/DataflashManager.c **** 			/* Check if the endpoint is currently full */
 213:Lib/DataflashManager.c **** 			if (!(Endpoint_IsReadWriteAllowed()))
 1217               		.loc 3 213 0
 1218 00a8 85FF      		sbrs r24,5
 1219 00aa 00C0      		rjmp .L98
 1220               	.L101:
 214:Lib/DataflashManager.c **** 			{
 215:Lib/DataflashManager.c **** 				/* Clear the endpoint bank to send its contents to the host */
 216:Lib/DataflashManager.c **** 				Endpoint_ClearIN();
 217:Lib/DataflashManager.c **** 
 218:Lib/DataflashManager.c **** 				/* Wait until the endpoint is ready for more data */
 219:Lib/DataflashManager.c **** 				if (Endpoint_WaitUntilReady())
 220:Lib/DataflashManager.c **** 				  return;
 221:Lib/DataflashManager.c **** 			}
 222:Lib/DataflashManager.c **** 
 223:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
 224:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 1221               		.loc 3 224 0
 1222 00ac 80E4      		ldi r24,lo8(64)
 1223 00ae F812      		cpse r15,r24
 1224 00b0 00C0      		rjmp .L100
 1225               	.LVL76:
 225:Lib/DataflashManager.c **** 			{
 226:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 227:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 228:Lib/DataflashManager.c **** 				CurrDFPage++;
 1226               		.loc 3 228 0
 1227 00b2 2196      		adiw r28,1
 1228               	.LVL77:
 229:Lib/DataflashManager.c **** 
 230:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 231:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 1229               		.loc 3 231 0
 1230 00b4 CE01      		movw r24,r28
 1231 00b6 0E94 0000 		call Dataflash_SelectChipFromPage
 1232               	.LVL78:
 1233               	.LBB689:
 1234               	.LBB685:
 1235               	.LBB683:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1236               		.loc 2 231 0
 1237 00ba BEBC      		out 0x2e,r11
 1238 00bc 00C0      		rjmp .L102
 1239               	.LVL79:
 1240               	.L98:
 1241               	.LBE683:
 1242               	.LBE685:
 1243               	.LBE689:
 1244               	.LBB690:
 1245               	.LBB691:
 516:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1246               		.loc 4 516 0
 1247 00be 8091 E800 		lds r24,232
 1248 00c2 8E77      		andi r24,lo8(126)
 1249 00c4 8093 E800 		sts 232,r24
 1250               	.LBE691:
 1251               	.LBE690:
 219:Lib/DataflashManager.c **** 				  return;
 1252               		.loc 3 219 0
 1253 00c8 0E94 0000 		call Endpoint_WaitUntilReady
 1254               	.LVL80:
 1255 00cc 8823      		tst r24
 1256 00ce 01F0      		breq .L101
 1257 00d0 00C0      		rjmp .L89
 1258               	.LVL81:
 1259               	.L102:
 1260               	.LBB692:
 1261               	.LBB686:
 1262               	.LBB684:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1263               		.loc 2 232 0
 1264 00d2 0DB4      		in __tmp_reg__,0x2d
 1265 00d4 07FE      		sbrs __tmp_reg__,7
 1266 00d6 00C0      		rjmp .L102
 1267               	.LVL82:
 1268               	.LBE684:
 1269               	.LBE686:
 1270               	.LBE692:
 232:Lib/DataflashManager.c **** 
 233:Lib/DataflashManager.c **** 				/* Send the Dataflash main memory page read command */
 234:Lib/DataflashManager.c **** 				Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 235:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 1271               		.loc 3 235 0
 1272 00d8 60E0      		ldi r22,0
 1273 00da 70E0      		ldi r23,0
 1274 00dc CE01      		movw r24,r28
 1275 00de 0E94 0000 		call Dataflash_SendAddressBytes
 1276               	.LVL83:
 1277               	.LBB693:
 1278               	.LBB694:
 1279               	.LBB695:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1280               		.loc 2 231 0
 1281 00e2 1EBC      		out 0x2e,__zero_reg__
 1282               	.L103:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1283               		.loc 2 232 0
 1284 00e4 0DB4      		in __tmp_reg__,0x2d
 1285 00e6 07FE      		sbrs __tmp_reg__,7
 1286 00e8 00C0      		rjmp .L103
 1287               	.LVL84:
 1288               	.LBE695:
 1289               	.LBE694:
 1290               	.LBE693:
 1291               	.LBB696:
 1292               	.LBB697:
 1293               	.LBB698:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1294               		.loc 2 231 0
 1295 00ea 1EBC      		out 0x2e,__zero_reg__
 1296               	.L104:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1297               		.loc 2 232 0
 1298 00ec 0DB4      		in __tmp_reg__,0x2d
 1299 00ee 07FE      		sbrs __tmp_reg__,7
 1300 00f0 00C0      		rjmp .L104
 1301               	.LVL85:
 1302               	.LBE698:
 1303               	.LBE697:
 1304               	.LBE696:
 1305               	.LBB699:
 1306               	.LBB700:
 1307               	.LBB701:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1308               		.loc 2 231 0
 1309 00f2 1EBC      		out 0x2e,__zero_reg__
 1310               	.L105:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1311               		.loc 2 232 0
 1312 00f4 0DB4      		in __tmp_reg__,0x2d
 1313 00f6 07FE      		sbrs __tmp_reg__,7
 1314 00f8 00C0      		rjmp .L105
 1315               	.LVL86:
 1316               	.LBE701:
 1317               	.LBE700:
 1318               	.LBE699:
 1319               	.LBB702:
 1320               	.LBB703:
 1321               	.LBB704:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1322               		.loc 2 231 0
 1323 00fa 1EBC      		out 0x2e,__zero_reg__
 1324               	.L106:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1325               		.loc 2 232 0
 1326 00fc 0DB4      		in __tmp_reg__,0x2d
 1327 00fe 07FE      		sbrs __tmp_reg__,7
 1328 0100 00C0      		rjmp .L106
 1329               	.LBE704:
 1330               	.LBE703:
 1331               	.LBE702:
 227:Lib/DataflashManager.c **** 				CurrDFPage++;
 1332               		.loc 3 227 0
 1333 0102 F12C      		mov r15,__zero_reg__
 1334               	.LVL87:
 1335               	.L100:
 1336               	.LBB705:
 1337               	.LBB706:
 1338               	.LBB707:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1339               		.loc 2 243 0
 1340 0104 1EBC      		out 0x2e,__zero_reg__
 1341               	.L107:
 1342               		.loc 2 244 0
 1343 0106 0DB4      		in __tmp_reg__,0x2d
 1344 0108 07FE      		sbrs __tmp_reg__,7
 1345 010a 00C0      		rjmp .L107
 245:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1346               		.loc 2 245 0
 1347 010c 8EB5      		in r24,0x2e
 1348               	.LBE707:
 1349               	.LBE706:
 1350               	.LBE705:
 1351               	.LBB708:
 1352               	.LBB709:
 613:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 614:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 615:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 616:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 617:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 618:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 619:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 620:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 621:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 622:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 623:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 624:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1353               		.loc 4 624 0
 1354 010e 8093 F100 		sts 241,r24
 1355               	.LBE709:
 1356               	.LBE708:
 1357               	.LBB710:
 1358               	.LBB711:
 1359               	.LBB712:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1360               		.loc 2 243 0
 1361 0112 1EBC      		out 0x2e,__zero_reg__
 1362               	.L108:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1363               		.loc 2 244 0
 1364 0114 0DB4      		in __tmp_reg__,0x2d
 1365 0116 07FE      		sbrs __tmp_reg__,7
 1366 0118 00C0      		rjmp .L108
 1367               		.loc 2 245 0
 1368 011a 8EB5      		in r24,0x2e
 1369               	.LBE712:
 1370               	.LBE711:
 1371               	.LBE710:
 1372               	.LBB713:
 1373               	.LBB714:
 1374               		.loc 4 624 0
 1375 011c 8093 F100 		sts 241,r24
 1376               	.LBE714:
 1377               	.LBE713:
 1378               	.LBB715:
 1379               	.LBB716:
 1380               	.LBB717:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1381               		.loc 2 243 0
 1382 0120 1EBC      		out 0x2e,__zero_reg__
 1383               	.L109:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1384               		.loc 2 244 0
 1385 0122 0DB4      		in __tmp_reg__,0x2d
 1386 0124 07FE      		sbrs __tmp_reg__,7
 1387 0126 00C0      		rjmp .L109
 1388               		.loc 2 245 0
 1389 0128 8EB5      		in r24,0x2e
 1390               	.LBE717:
 1391               	.LBE716:
 1392               	.LBE715:
 1393               	.LBB718:
 1394               	.LBB719:
 1395               		.loc 4 624 0
 1396 012a 8093 F100 		sts 241,r24
 1397               	.LBE719:
 1398               	.LBE718:
 1399               	.LBB720:
 1400               	.LBB721:
 1401               	.LBB722:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1402               		.loc 2 243 0
 1403 012e 1EBC      		out 0x2e,__zero_reg__
 1404               	.L110:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1405               		.loc 2 244 0
 1406 0130 0DB4      		in __tmp_reg__,0x2d
 1407 0132 07FE      		sbrs __tmp_reg__,7
 1408 0134 00C0      		rjmp .L110
 1409               		.loc 2 245 0
 1410 0136 8EB5      		in r24,0x2e
 1411               	.LBE722:
 1412               	.LBE721:
 1413               	.LBE720:
 1414               	.LBB723:
 1415               	.LBB724:
 1416               		.loc 4 624 0
 1417 0138 8093 F100 		sts 241,r24
 1418               	.LBE724:
 1419               	.LBE723:
 1420               	.LBB725:
 1421               	.LBB726:
 1422               	.LBB727:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1423               		.loc 2 243 0
 1424 013c 1EBC      		out 0x2e,__zero_reg__
 1425               	.L111:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1426               		.loc 2 244 0
 1427 013e 0DB4      		in __tmp_reg__,0x2d
 1428 0140 07FE      		sbrs __tmp_reg__,7
 1429 0142 00C0      		rjmp .L111
 1430               		.loc 2 245 0
 1431 0144 8EB5      		in r24,0x2e
 1432               	.LBE727:
 1433               	.LBE726:
 1434               	.LBE725:
 1435               	.LBB728:
 1436               	.LBB729:
 1437               		.loc 4 624 0
 1438 0146 8093 F100 		sts 241,r24
 1439               	.LBE729:
 1440               	.LBE728:
 1441               	.LBB730:
 1442               	.LBB731:
 1443               	.LBB732:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1444               		.loc 2 243 0
 1445 014a 1EBC      		out 0x2e,__zero_reg__
 1446               	.L112:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1447               		.loc 2 244 0
 1448 014c 0DB4      		in __tmp_reg__,0x2d
 1449 014e 07FE      		sbrs __tmp_reg__,7
 1450 0150 00C0      		rjmp .L112
 1451               		.loc 2 245 0
 1452 0152 8EB5      		in r24,0x2e
 1453               	.LBE732:
 1454               	.LBE731:
 1455               	.LBE730:
 1456               	.LBB733:
 1457               	.LBB734:
 1458               		.loc 4 624 0
 1459 0154 8093 F100 		sts 241,r24
 1460               	.LBE734:
 1461               	.LBE733:
 1462               	.LBB735:
 1463               	.LBB736:
 1464               	.LBB737:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1465               		.loc 2 243 0
 1466 0158 1EBC      		out 0x2e,__zero_reg__
 1467               	.L113:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1468               		.loc 2 244 0
 1469 015a 0DB4      		in __tmp_reg__,0x2d
 1470 015c 07FE      		sbrs __tmp_reg__,7
 1471 015e 00C0      		rjmp .L113
 1472               		.loc 2 245 0
 1473 0160 8EB5      		in r24,0x2e
 1474               	.LBE737:
 1475               	.LBE736:
 1476               	.LBE735:
 1477               	.LBB738:
 1478               	.LBB739:
 1479               		.loc 4 624 0
 1480 0162 8093 F100 		sts 241,r24
 1481               	.LBE739:
 1482               	.LBE738:
 1483               	.LBB740:
 1484               	.LBB741:
 1485               	.LBB742:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1486               		.loc 2 243 0
 1487 0166 1EBC      		out 0x2e,__zero_reg__
 1488               	.L114:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1489               		.loc 2 244 0
 1490 0168 0DB4      		in __tmp_reg__,0x2d
 1491 016a 07FE      		sbrs __tmp_reg__,7
 1492 016c 00C0      		rjmp .L114
 1493               		.loc 2 245 0
 1494 016e 8EB5      		in r24,0x2e
 1495               	.LBE742:
 1496               	.LBE741:
 1497               	.LBE740:
 1498               	.LBB743:
 1499               	.LBB744:
 1500               		.loc 4 624 0
 1501 0170 8093 F100 		sts 241,r24
 1502               	.LBE744:
 1503               	.LBE743:
 1504               	.LBB745:
 1505               	.LBB746:
 1506               	.LBB747:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1507               		.loc 2 243 0
 1508 0174 1EBC      		out 0x2e,__zero_reg__
 1509               	.L115:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1510               		.loc 2 244 0
 1511 0176 0DB4      		in __tmp_reg__,0x2d
 1512 0178 07FE      		sbrs __tmp_reg__,7
 1513 017a 00C0      		rjmp .L115
 1514               		.loc 2 245 0
 1515 017c 8EB5      		in r24,0x2e
 1516               	.LBE747:
 1517               	.LBE746:
 1518               	.LBE745:
 1519               	.LBB748:
 1520               	.LBB749:
 1521               		.loc 4 624 0
 1522 017e 8093 F100 		sts 241,r24
 1523               	.LBE749:
 1524               	.LBE748:
 1525               	.LBB750:
 1526               	.LBB751:
 1527               	.LBB752:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1528               		.loc 2 243 0
 1529 0182 1EBC      		out 0x2e,__zero_reg__
 1530               	.L116:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1531               		.loc 2 244 0
 1532 0184 0DB4      		in __tmp_reg__,0x2d
 1533 0186 07FE      		sbrs __tmp_reg__,7
 1534 0188 00C0      		rjmp .L116
 1535               		.loc 2 245 0
 1536 018a 8EB5      		in r24,0x2e
 1537               	.LBE752:
 1538               	.LBE751:
 1539               	.LBE750:
 1540               	.LBB753:
 1541               	.LBB754:
 1542               		.loc 4 624 0
 1543 018c 8093 F100 		sts 241,r24
 1544               	.LBE754:
 1545               	.LBE753:
 1546               	.LBB755:
 1547               	.LBB756:
 1548               	.LBB757:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1549               		.loc 2 243 0
 1550 0190 1EBC      		out 0x2e,__zero_reg__
 1551               	.L117:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1552               		.loc 2 244 0
 1553 0192 0DB4      		in __tmp_reg__,0x2d
 1554 0194 07FE      		sbrs __tmp_reg__,7
 1555 0196 00C0      		rjmp .L117
 1556               		.loc 2 245 0
 1557 0198 8EB5      		in r24,0x2e
 1558               	.LBE757:
 1559               	.LBE756:
 1560               	.LBE755:
 1561               	.LBB758:
 1562               	.LBB759:
 1563               		.loc 4 624 0
 1564 019a 8093 F100 		sts 241,r24
 1565               	.LBE759:
 1566               	.LBE758:
 1567               	.LBB760:
 1568               	.LBB761:
 1569               	.LBB762:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1570               		.loc 2 243 0
 1571 019e 1EBC      		out 0x2e,__zero_reg__
 1572               	.L118:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1573               		.loc 2 244 0
 1574 01a0 0DB4      		in __tmp_reg__,0x2d
 1575 01a2 07FE      		sbrs __tmp_reg__,7
 1576 01a4 00C0      		rjmp .L118
 1577               		.loc 2 245 0
 1578 01a6 8EB5      		in r24,0x2e
 1579               	.LBE762:
 1580               	.LBE761:
 1581               	.LBE760:
 1582               	.LBB763:
 1583               	.LBB764:
 1584               		.loc 4 624 0
 1585 01a8 8093 F100 		sts 241,r24
 1586               	.LBE764:
 1587               	.LBE763:
 1588               	.LBB765:
 1589               	.LBB766:
 1590               	.LBB767:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1591               		.loc 2 243 0
 1592 01ac 1EBC      		out 0x2e,__zero_reg__
 1593               	.L119:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1594               		.loc 2 244 0
 1595 01ae 0DB4      		in __tmp_reg__,0x2d
 1596 01b0 07FE      		sbrs __tmp_reg__,7
 1597 01b2 00C0      		rjmp .L119
 1598               		.loc 2 245 0
 1599 01b4 8EB5      		in r24,0x2e
 1600               	.LBE767:
 1601               	.LBE766:
 1602               	.LBE765:
 1603               	.LBB768:
 1604               	.LBB769:
 1605               		.loc 4 624 0
 1606 01b6 8093 F100 		sts 241,r24
 1607               	.LBE769:
 1608               	.LBE768:
 1609               	.LBB770:
 1610               	.LBB771:
 1611               	.LBB772:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1612               		.loc 2 243 0
 1613 01ba 1EBC      		out 0x2e,__zero_reg__
 1614               	.L120:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1615               		.loc 2 244 0
 1616 01bc 0DB4      		in __tmp_reg__,0x2d
 1617 01be 07FE      		sbrs __tmp_reg__,7
 1618 01c0 00C0      		rjmp .L120
 1619               		.loc 2 245 0
 1620 01c2 8EB5      		in r24,0x2e
 1621               	.LBE772:
 1622               	.LBE771:
 1623               	.LBE770:
 1624               	.LBB773:
 1625               	.LBB774:
 1626               		.loc 4 624 0
 1627 01c4 8093 F100 		sts 241,r24
 1628               	.LBE774:
 1629               	.LBE773:
 1630               	.LBB775:
 1631               	.LBB776:
 1632               	.LBB777:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1633               		.loc 2 243 0
 1634 01c8 1EBC      		out 0x2e,__zero_reg__
 1635               	.L121:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1636               		.loc 2 244 0
 1637 01ca 0DB4      		in __tmp_reg__,0x2d
 1638 01cc 07FE      		sbrs __tmp_reg__,7
 1639 01ce 00C0      		rjmp .L121
 1640               		.loc 2 245 0
 1641 01d0 8EB5      		in r24,0x2e
 1642               	.LBE777:
 1643               	.LBE776:
 1644               	.LBE775:
 1645               	.LBB778:
 1646               	.LBB779:
 1647               		.loc 4 624 0
 1648 01d2 8093 F100 		sts 241,r24
 1649               	.LBE779:
 1650               	.LBE778:
 1651               	.LBB780:
 1652               	.LBB781:
 1653               	.LBB782:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1654               		.loc 2 243 0
 1655 01d6 1EBC      		out 0x2e,__zero_reg__
 1656               	.L122:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 1657               		.loc 2 244 0
 1658 01d8 0DB4      		in __tmp_reg__,0x2d
 1659 01da 07FE      		sbrs __tmp_reg__,7
 1660 01dc 00C0      		rjmp .L122
 1661               		.loc 2 245 0
 1662 01de 8EB5      		in r24,0x2e
 1663               	.LBE782:
 1664               	.LBE781:
 1665               	.LBE780:
 1666               	.LBB783:
 1667               	.LBB784:
 1668               		.loc 4 624 0
 1669 01e0 8093 F100 		sts 241,r24
 1670               	.LBE784:
 1671               	.LBE783:
 236:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 237:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 238:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 239:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 240:Lib/DataflashManager.c **** 			}
 241:Lib/DataflashManager.c **** 
 242:Lib/DataflashManager.c **** 			/* Read one 16-byte chunk of data from the Dataflash */
 243:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 244:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 245:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 246:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 247:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 248:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 249:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 250:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 251:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 252:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 253:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 254:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 255:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 256:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 257:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 258:Lib/DataflashManager.c **** 			Endpoint_Write_8(Dataflash_ReceiveByte());
 259:Lib/DataflashManager.c **** 
 260:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 261:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 1672               		.loc 3 261 0
 1673 01e4 F394      		inc r15
 1674               	.LVL88:
 262:Lib/DataflashManager.c **** 
 263:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 264:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 265:Lib/DataflashManager.c **** 
 266:Lib/DataflashManager.c **** 			/* Check if the current command is being aborted by the host */
 267:Lib/DataflashManager.c **** 			if (IsMassStoreReset)
 1675               		.loc 3 267 0
 1676 01e6 8091 0000 		lds r24,IsMassStoreReset
 1677 01ea 8111      		cpse r24,__zero_reg__
 1678 01ec 00C0      		rjmp .L89
 1679 01ee EA94      		dec r14
 1680               	.LVL89:
 210:Lib/DataflashManager.c **** 		{
 1681               		.loc 3 210 0
 1682 01f0 E110      		cpse r14,__zero_reg__
 1683 01f2 00C0      		rjmp .L123
 268:Lib/DataflashManager.c **** 			  return;
 269:Lib/DataflashManager.c **** 		}
 270:Lib/DataflashManager.c **** 
 271:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 272:Lib/DataflashManager.c **** 		TotalBlocks--;
 1684               		.loc 3 272 0
 1685 01f4 0150      		subi r16,1
 1686 01f6 1109      		sbc r17,__zero_reg__
 1687               	.LVL90:
 1688 01f8 00C0      		rjmp .L96
 1689               	.LVL91:
 1690               	.L153:
 1691               	.LBE785:
 1692               	.LBB786:
 1693               	.LBB787:
 420:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1694               		.loc 4 420 0
 1695 01fa 8091 E800 		lds r24,232
 1696               	.LBE787:
 1697               	.LBE786:
 273:Lib/DataflashManager.c **** 	}
 274:Lib/DataflashManager.c **** 
 275:Lib/DataflashManager.c **** 	/* If the endpoint is full, send its contents to the host */
 276:Lib/DataflashManager.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 1698               		.loc 3 276 0
 1699 01fe 85FD      		sbrc r24,5
 1700 0200 00C0      		rjmp .L125
 1701               	.LBB788:
 1702               	.LBB789:
 516:../../../../LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1703               		.loc 4 516 0
 1704 0202 8091 E800 		lds r24,232
 1705 0206 8E77      		andi r24,lo8(126)
 1706 0208 8093 E800 		sts 232,r24
 1707               	.L125:
 1708               	.LVL92:
 1709               	.LBE789:
 1710               	.LBE788:
 1711               	.LBB790:
 1712               	.LBB791:
 1713               	.LBB792:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 1714               		.loc 1 117 0
 1715 020c 8EB1      		in r24,0xe
 1716 020e 8360      		ori r24,lo8(3)
 1717 0210 8EB9      		out 0xe,r24
 1718               	.LVL93:
 1719               	.L89:
 1720               	/* epilogue start */
 1721               	.LBE792:
 1722               	.LBE791:
 1723               	.LBE790:
 277:Lib/DataflashManager.c **** 	  Endpoint_ClearIN();
 278:Lib/DataflashManager.c **** 
 279:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 280:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 281:Lib/DataflashManager.c **** }
 1724               		.loc 3 281 0
 1725 0212 DF91      		pop r29
 1726 0214 CF91      		pop r28
 1727 0216 1F91      		pop r17
 1728 0218 0F91      		pop r16
 1729               	.LVL94:
 1730 021a FF90      		pop r15
 1731 021c EF90      		pop r14
 1732 021e BF90      		pop r11
 1733 0220 AF90      		pop r10
 1734 0222 9F90      		pop r9
 1735 0224 8F90      		pop r8
 1736 0226 0895      		ret
 1737               		.cfi_endproc
 1738               	.LFE127:
 1740               		.section	.text.DataflashManager_WriteBlocks_RAM,"ax",@progbits
 1741               	.global	DataflashManager_WriteBlocks_RAM
 1743               	DataflashManager_WriteBlocks_RAM:
 1744               	.LFB128:
 282:Lib/DataflashManager.c **** 
 283:Lib/DataflashManager.c **** /** Writes blocks (OS blocks, not Dataflash pages) to the storage medium, the board Dataflash IC(s)
 284:Lib/DataflashManager.c ****  *  the given RAM buffer. This routine reads in OS sized blocks from the buffer and writes them to 
 285:Lib/DataflashManager.c ****  *  Dataflash in Dataflash page sized blocks. This can be linked to FAT libraries to write files to
 286:Lib/DataflashManager.c ****  *  Dataflash.
 287:Lib/DataflashManager.c ****  *
 288:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the write sequence
 289:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to write
 290:Lib/DataflashManager.c ****  *  \param[in] BufferPtr     Pointer to the data source RAM buffer
 291:Lib/DataflashManager.c ****  */
 292:Lib/DataflashManager.c **** void DataflashManager_WriteBlocks_RAM(const uint32_t BlockAddress,
 293:Lib/DataflashManager.c ****                                       uint16_t TotalBlocks,
 294:Lib/DataflashManager.c ****                                       uint8_t* BufferPtr)
 295:Lib/DataflashManager.c **** {
 1745               		.loc 3 295 0
 1746               		.cfi_startproc
 1747               	.LVL95:
 1748 0000 4F92      		push r4
 1749               	.LCFI23:
 1750               		.cfi_def_cfa_offset 3
 1751               		.cfi_offset 4, -2
 1752 0002 5F92      		push r5
 1753               	.LCFI24:
 1754               		.cfi_def_cfa_offset 4
 1755               		.cfi_offset 5, -3
 1756 0004 6F92      		push r6
 1757               	.LCFI25:
 1758               		.cfi_def_cfa_offset 5
 1759               		.cfi_offset 6, -4
 1760 0006 7F92      		push r7
 1761               	.LCFI26:
 1762               		.cfi_def_cfa_offset 6
 1763               		.cfi_offset 7, -5
 1764 0008 8F92      		push r8
 1765               	.LCFI27:
 1766               		.cfi_def_cfa_offset 7
 1767               		.cfi_offset 8, -6
 1768 000a 9F92      		push r9
 1769               	.LCFI28:
 1770               		.cfi_def_cfa_offset 8
 1771               		.cfi_offset 9, -7
 1772 000c AF92      		push r10
 1773               	.LCFI29:
 1774               		.cfi_def_cfa_offset 9
 1775               		.cfi_offset 10, -8
 1776 000e BF92      		push r11
 1777               	.LCFI30:
 1778               		.cfi_def_cfa_offset 10
 1779               		.cfi_offset 11, -9
 1780 0010 CF92      		push r12
 1781               	.LCFI31:
 1782               		.cfi_def_cfa_offset 11
 1783               		.cfi_offset 12, -10
 1784 0012 DF92      		push r13
 1785               	.LCFI32:
 1786               		.cfi_def_cfa_offset 12
 1787               		.cfi_offset 13, -11
 1788 0014 EF92      		push r14
 1789               	.LCFI33:
 1790               		.cfi_def_cfa_offset 13
 1791               		.cfi_offset 14, -12
 1792 0016 FF92      		push r15
 1793               	.LCFI34:
 1794               		.cfi_def_cfa_offset 14
 1795               		.cfi_offset 15, -13
 1796 0018 0F93      		push r16
 1797               	.LCFI35:
 1798               		.cfi_def_cfa_offset 15
 1799               		.cfi_offset 16, -14
 1800 001a 1F93      		push r17
 1801               	.LCFI36:
 1802               		.cfi_def_cfa_offset 16
 1803               		.cfi_offset 17, -15
 1804 001c CF93      		push r28
 1805               	.LCFI37:
 1806               		.cfi_def_cfa_offset 17
 1807               		.cfi_offset 28, -16
 1808 001e DF93      		push r29
 1809               	.LCFI38:
 1810               		.cfi_def_cfa_offset 18
 1811               		.cfi_offset 29, -17
 1812               	/* prologue: function */
 1813               	/* frame size = 0 */
 1814               	/* stack size = 16 */
 1815               	.L__stack_usage = 16
 1816 0020 4A01      		movw r8,r20
 1817 0022 8901      		movw r16,r18
 296:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 1818               		.loc 3 296 0
 1819 0024 6B01      		movw r12,r22
 1820 0026 7C01      		movw r14,r24
 1821 0028 99E0      		ldi r25,9
 1822               		1:
 1823 002a CC0C      		lsl r12
 1824 002c DD1C      		rol r13
 1825 002e EE1C      		rol r14
 1826 0030 FF1C      		rol r15
 1827 0032 9A95      		dec r25
 1828 0034 01F4      		brne 1b
 1829 0036 5601      		movw r10,r12
 1830 0038 6701      		movw r12,r14
 1831 003a 2AE0      		ldi r18,10
 1832               		1:
 1833 003c D694      		lsr r13
 1834 003e C794      		ror r12
 1835 0040 B794      		ror r11
 1836 0042 A794      		ror r10
 1837 0044 2A95      		dec r18
 1838 0046 01F4      		brne 1b
 1839               	.LVL96:
 1840 0048 E501      		movw r28,r10
 1841               	.LVL97:
 297:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 1842               		.loc 3 297 0
 1843 004a 762F      		mov r23,r22
 1844 004c 6627      		clr r22
 1845 004e 770F      		lsl r23
 1846               	.LVL98:
 1847 0050 7B01      		movw r14,r22
 1848 0052 EE24      		clr r14
 1849 0054 82E0      		ldi r24,2
 1850 0056 F822      		and r15,r24
 1851               	.LVL99:
 298:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
 1852               		.loc 3 298 0
 1853 0058 2701      		movw r4,r14
 1854 005a 44E0      		ldi r20,4
 1855               		1:
 1856 005c 5694      		lsr r5
 1857 005e 4794      		ror r4
 1858 0060 4A95      		dec r20
 1859 0062 01F4      		brne 1b
 1860               	.LVL100:
 299:Lib/DataflashManager.c **** 	bool     UsingSecondBuffer   = false;
 300:Lib/DataflashManager.c **** 
 301:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
 302:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 1861               		.loc 3 302 0
 1862 0064 C501      		movw r24,r10
 1863 0066 0E94 0000 		call Dataflash_SelectChipFromPage
 1864               	.LVL101:
 1865               	.LBB793:
 1866               	.LBB794:
 1867               	.LBB795:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1868               		.loc 2 231 0
 1869 006a 83E5      		ldi r24,lo8(83)
 1870 006c 8EBD      		out 0x2e,r24
 1871               	.L155:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1872               		.loc 2 232 0
 1873 006e 0DB4      		in __tmp_reg__,0x2d
 1874 0070 07FE      		sbrs __tmp_reg__,7
 1875 0072 00C0      		rjmp .L155
 1876               	.LVL102:
 1877               	.LBE795:
 1878               	.LBE794:
 1879               	.LBE793:
 303:Lib/DataflashManager.c **** 
 304:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
 305:Lib/DataflashManager.c **** 	/* Copy selected dataflash's current page contents to the Dataflash buffer */
 306:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMTOBUFF1);
 307:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0);
 1880               		.loc 3 307 0
 1881 0074 60E0      		ldi r22,0
 1882 0076 70E0      		ldi r23,0
 1883 0078 C501      		movw r24,r10
 1884 007a 0E94 0000 		call Dataflash_SendAddressBytes
 1885               	.LVL103:
 308:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 1886               		.loc 3 308 0
 1887 007e 0E94 0000 		call Dataflash_WaitWhileBusy
 1888               	.LVL104:
 1889               	.LBB796:
 1890               	.LBB797:
 1891               	.LBB798:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1892               		.loc 2 231 0
 1893 0082 84E8      		ldi r24,lo8(-124)
 1894 0084 8EBD      		out 0x2e,r24
 1895               	.L156:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1896               		.loc 2 232 0
 1897 0086 0DB4      		in __tmp_reg__,0x2d
 1898 0088 07FE      		sbrs __tmp_reg__,7
 1899 008a 00C0      		rjmp .L156
 1900               	.LVL105:
 1901               	.LBE798:
 1902               	.LBE797:
 1903               	.LBE796:
 309:Lib/DataflashManager.c **** #endif
 310:Lib/DataflashManager.c **** 
 311:Lib/DataflashManager.c **** 	/* Send the Dataflash buffer write command */
 312:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_BUFF1WRITE);
 313:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(0, CurrDFPageByte);
 1904               		.loc 3 313 0
 1905 008c B701      		movw r22,r14
 1906 008e 80E0      		ldi r24,0
 1907 0090 90E0      		ldi r25,0
 1908 0092 0E94 0000 		call Dataflash_SendAddressBytes
 1909               	.LVL106:
 1910 0096 6401      		movw r12,r8
 1911 0098 85E0      		ldi r24,5
 1912               		1:
 1913 009a CC0C      		lsl r12
 1914 009c DD1C      		rol r13
 1915 009e 8A95      		dec r24
 1916 00a0 01F4      		brne 1b
 314:Lib/DataflashManager.c **** 
 315:Lib/DataflashManager.c **** 	while (TotalBlocks)
 1917               		.loc 3 315 0
 1918 00a2 E12C      		mov r14,__zero_reg__
 1919 00a4 F12C      		mov r15,__zero_reg__
 1920               	.LVL107:
 299:Lib/DataflashManager.c **** 
 1921               		.loc 3 299 0
 1922 00a6 512C      		mov r5,__zero_reg__
 1923               	.LVL108:
 1924               	.L157:
 1925               		.loc 3 315 0
 1926 00a8 8114      		cp r8,__zero_reg__
 1927 00aa 9104      		cpc r9,__zero_reg__
 1928 00ac 01F4      		brne .+2
 1929 00ae 00C0      		rjmp .L170
 1930 00b0 5801      		movw r10,r16
 1931 00b2 8EEF      		ldi r24,-2
 1932 00b4 B81A      		sub r11,r24
 1933 00b6 3701      		movw r6,r14
 1934 00b8 6C0C      		add r6,r12
 1935 00ba 7D1C      		adc r7,r13
 1936               	.L169:
 1937               	.LBB799:
 316:Lib/DataflashManager.c **** 	{
 317:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
 318:Lib/DataflashManager.c **** 
 319:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
 320:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
 321:Lib/DataflashManager.c **** 		{
 322:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
 323:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 1938               		.loc 3 323 0
 1939 00bc 80E4      		ldi r24,lo8(64)
 1940 00be 4812      		cpse r4,r24
 1941 00c0 00C0      		rjmp .L158
 324:Lib/DataflashManager.c **** 			{
 325:Lib/DataflashManager.c **** 				/* Write the Dataflash buffer contents back to the Dataflash page */
 326:Lib/DataflashManager.c **** 				Dataflash_WaitWhileBusy();
 1942               		.loc 3 326 0
 1943 00c2 0E94 0000 		call Dataflash_WaitWhileBusy
 1944               	.LVL109:
 327:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWI
 1945               		.loc 3 327 0
 1946 00c6 5110      		cpse r5,__zero_reg__
 1947 00c8 00C0      		rjmp .L173
 1948 00ca 83E8      		ldi r24,lo8(-125)
 1949 00cc 00C0      		rjmp .L159
 1950               	.L173:
 1951 00ce 86E8      		ldi r24,lo8(-122)
 1952               	.L159:
 1953               	.LVL110:
 1954               	.LBB800:
 1955               	.LBB801:
 1956               	.LBB802:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 1957               		.loc 2 231 0 discriminator 4
 1958 00d0 8EBD      		out 0x2e,r24
 1959               	.L160:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 1960               		.loc 2 232 0
 1961 00d2 0DB4      		in __tmp_reg__,0x2d
 1962 00d4 07FE      		sbrs __tmp_reg__,7
 1963 00d6 00C0      		rjmp .L160
 1964               	.LVL111:
 1965               	.LBE802:
 1966               	.LBE801:
 1967               	.LBE800:
 328:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 1968               		.loc 3 328 0 discriminator 4
 1969 00d8 60E0      		ldi r22,0
 1970 00da 70E0      		ldi r23,0
 1971 00dc CE01      		movw r24,r28
 1972 00de 0E94 0000 		call Dataflash_SendAddressBytes
 1973               	.LVL112:
 329:Lib/DataflashManager.c **** 
 330:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 331:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 332:Lib/DataflashManager.c **** 				CurrDFPage++;
 1974               		.loc 3 332 0 discriminator 4
 1975 00e2 2196      		adiw r28,1
 1976               	.LVL113:
 1977               	.LBB803:
 1978               	.LBB804:
 106:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 1979               		.loc 1 106 0 discriminator 4
 1980 00e4 8EB1      		in r24,0xe
 1981               	.LBE804:
 1982               	.LBE803:
 333:Lib/DataflashManager.c **** 
 334:Lib/DataflashManager.c **** 				/* Once all the Dataflash ICs have had their first buffers filled, switch buffers to maintain t
 335:Lib/DataflashManager.c **** 				if (Dataflash_GetSelectedChip() == DATAFLASH_CHIP_MASK(DATAFLASH_TOTALCHIPS))
 1983               		.loc 3 335 0 discriminator 4
 1984 00e6 8370      		andi r24,lo8(3)
 1985 00e8 8130      		cpi r24,lo8(1)
 1986 00ea 01F4      		brne .L161
 336:Lib/DataflashManager.c **** 				  UsingSecondBuffer = !(UsingSecondBuffer);
 1987               		.loc 3 336 0
 1988 00ec 5826      		eor r5,r24
 1989               	.LVL114:
 1990               	.L161:
 337:Lib/DataflashManager.c **** 
 338:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 339:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 1991               		.loc 3 339 0
 1992 00ee CE01      		movw r24,r28
 1993 00f0 0E94 0000 		call Dataflash_SelectChipFromPage
 1994               	.LVL115:
 340:Lib/DataflashManager.c **** 
 341:Lib/DataflashManager.c **** #if (DATAFLASH_PAGE_SIZE > VIRTUAL_MEMORY_BLOCK_SIZE)
 342:Lib/DataflashManager.c **** 				/* If less than one Dataflash page remaining, copy over the existing page to preserve trailing 
 343:Lib/DataflashManager.c **** 				if ((TotalBlocks * (VIRTUAL_MEMORY_BLOCK_SIZE >> 4)) < (DATAFLASH_PAGE_SIZE >> 4))
 1995               		.loc 3 343 0
 1996 00f4 80E4      		ldi r24,64
 1997 00f6 6816      		cp r6,r24
 1998 00f8 7104      		cpc r7,__zero_reg__
 1999 00fa 00F4      		brsh .L162
 344:Lib/DataflashManager.c **** 				{
 345:Lib/DataflashManager.c **** 					/* Copy selected dataflash's current page contents to the Dataflash buffer */
 346:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 2000               		.loc 3 346 0
 2001 00fc 0E94 0000 		call Dataflash_WaitWhileBusy
 2002               	.LVL116:
 347:Lib/DataflashManager.c **** 					Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_MAINMEMTOBUFF2 : DF_CMD_MAINMEMTOBUFF1);
 2003               		.loc 3 347 0
 2004 0100 5110      		cpse r5,__zero_reg__
 2005 0102 00C0      		rjmp .L174
 2006 0104 83E5      		ldi r24,lo8(83)
 2007 0106 00C0      		rjmp .L163
 2008               	.L174:
 2009 0108 85E5      		ldi r24,lo8(85)
 2010               	.L163:
 2011               	.LVL117:
 2012               	.LBB805:
 2013               	.LBB806:
 2014               	.LBB807:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2015               		.loc 2 231 0 discriminator 4
 2016 010a 8EBD      		out 0x2e,r24
 2017               	.L164:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2018               		.loc 2 232 0
 2019 010c 0DB4      		in __tmp_reg__,0x2d
 2020 010e 07FE      		sbrs __tmp_reg__,7
 2021 0110 00C0      		rjmp .L164
 2022               	.LVL118:
 2023               	.LBE807:
 2024               	.LBE806:
 2025               	.LBE805:
 348:Lib/DataflashManager.c **** 					Dataflash_SendAddressBytes(CurrDFPage, 0);
 2026               		.loc 3 348 0 discriminator 4
 2027 0112 60E0      		ldi r22,0
 2028 0114 70E0      		ldi r23,0
 2029 0116 CE01      		movw r24,r28
 2030 0118 0E94 0000 		call Dataflash_SendAddressBytes
 2031               	.LVL119:
 349:Lib/DataflashManager.c **** 					Dataflash_WaitWhileBusy();
 2032               		.loc 3 349 0 discriminator 4
 2033 011c 0E94 0000 		call Dataflash_WaitWhileBusy
 2034               	.LVL120:
 2035               	.L162:
 350:Lib/DataflashManager.c **** 				}
 351:Lib/DataflashManager.c **** #endif
 352:Lib/DataflashManager.c **** 
 353:Lib/DataflashManager.c **** 				/* Send the Dataflash buffer write command */
 354:Lib/DataflashManager.c **** 				Dataflash_ToggleSelectedChipCS();
 2036               		.loc 3 354 0
 2037 0120 0E94 0000 		call Dataflash_ToggleSelectedChipCS
 2038               	.LVL121:
 355:Lib/DataflashManager.c **** 				Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2WRITE : DF_CMD_BUFF1WRITE);
 2039               		.loc 3 355 0
 2040 0124 5110      		cpse r5,__zero_reg__
 2041 0126 00C0      		rjmp .L175
 2042 0128 84E8      		ldi r24,lo8(-124)
 2043 012a 00C0      		rjmp .L165
 2044               	.L175:
 2045 012c 87E8      		ldi r24,lo8(-121)
 2046               	.L165:
 2047               	.LVL122:
 2048               	.LBB808:
 2049               	.LBB809:
 2050               	.LBB810:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2051               		.loc 2 231 0 discriminator 4
 2052 012e 8EBD      		out 0x2e,r24
 2053               	.L166:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2054               		.loc 2 232 0
 2055 0130 0DB4      		in __tmp_reg__,0x2d
 2056 0132 07FE      		sbrs __tmp_reg__,7
 2057 0134 00C0      		rjmp .L166
 2058               	.LVL123:
 2059               	.LBE810:
 2060               	.LBE809:
 2061               	.LBE808:
 356:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(0, 0);
 2062               		.loc 3 356 0 discriminator 4
 2063 0136 60E0      		ldi r22,0
 2064 0138 70E0      		ldi r23,0
 2065 013a 80E0      		ldi r24,0
 2066 013c 90E0      		ldi r25,0
 2067 013e 0E94 0000 		call Dataflash_SendAddressBytes
 2068               	.LVL124:
 331:Lib/DataflashManager.c **** 				CurrDFPage++;
 2069               		.loc 3 331 0 discriminator 4
 2070 0142 412C      		mov r4,__zero_reg__
 2071               	.LVL125:
 2072               	.L158:
 2073 0144 F801      		movw r30,r16
 2074 0146 005F      		subi r16,-16
 2075 0148 1F4F      		sbci r17,-1
 2076               	.LVL126:
 2077               	.L168:
 2078               	.LBB811:
 357:Lib/DataflashManager.c **** 			}
 358:Lib/DataflashManager.c **** 
 359:Lib/DataflashManager.c **** 			/* Write one 16-byte chunk of data to the Dataflash */
 360:Lib/DataflashManager.c **** 			for (uint8_t ByteNum = 0; ByteNum < 16; ByteNum++)
 361:Lib/DataflashManager.c **** 			  Dataflash_SendByte(*(BufferPtr++));
 2079               		.loc 3 361 0 discriminator 3
 2080 014a 8191      		ld r24,Z+
 2081               	.LVL127:
 2082               	.LBB812:
 2083               	.LBB813:
 2084               	.LBB814:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2085               		.loc 2 231 0 discriminator 3
 2086 014c 8EBD      		out 0x2e,r24
 2087               	.L167:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2088               		.loc 2 232 0
 2089 014e 0DB4      		in __tmp_reg__,0x2d
 2090 0150 07FE      		sbrs __tmp_reg__,7
 2091 0152 00C0      		rjmp .L167
 2092               	.LVL128:
 2093               	.LBE814:
 2094               	.LBE813:
 2095               	.LBE812:
 360:Lib/DataflashManager.c **** 			  Dataflash_SendByte(*(BufferPtr++));
 2096               		.loc 3 360 0 discriminator 3
 2097 0154 0E17      		cp r16,r30
 2098 0156 1F07      		cpc r17,r31
 2099 0158 01F4      		brne .L168
 2100               	.LBE811:
 362:Lib/DataflashManager.c **** 
 363:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 364:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 2101               		.loc 3 364 0
 2102 015a 4394      		inc r4
 2103               	.LVL129:
 320:Lib/DataflashManager.c **** 		{
 2104               		.loc 3 320 0
 2105 015c A016      		cp r10,r16
 2106 015e B106      		cpc r11,r17
 2107 0160 01F0      		breq .+2
 2108 0162 00C0      		rjmp .L169
 365:Lib/DataflashManager.c **** 
 366:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 367:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 368:Lib/DataflashManager.c **** 		}
 369:Lib/DataflashManager.c **** 
 370:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 371:Lib/DataflashManager.c **** 		TotalBlocks--;
 2109               		.loc 3 371 0
 2110 0164 81E0      		ldi r24,1
 2111 0166 881A      		sub r8,r24
 2112 0168 9108      		sbc r9,__zero_reg__
 2113               	.LVL130:
 2114 016a 80E2      		ldi r24,32
 2115 016c E81A      		sub r14,r24
 2116 016e F108      		sbc r15,__zero_reg__
 2117 0170 00C0      		rjmp .L157
 2118               	.LVL131:
 2119               	.L170:
 2120               	.LBE799:
 372:Lib/DataflashManager.c **** 	}
 373:Lib/DataflashManager.c **** 
 374:Lib/DataflashManager.c **** 	/* Write the Dataflash buffer contents back to the Dataflash page */
 375:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 2121               		.loc 3 375 0
 2122 0172 0E94 0000 		call Dataflash_WaitWhileBusy
 2123               	.LVL132:
 376:Lib/DataflashManager.c **** 	Dataflash_SendByte(UsingSecondBuffer ? DF_CMD_BUFF2TOMAINMEMWITHERASE : DF_CMD_BUFF1TOMAINMEMWITHE
 2124               		.loc 3 376 0
 2125 0176 5110      		cpse r5,__zero_reg__
 2126 0178 00C0      		rjmp .L176
 2127 017a 83E8      		ldi r24,lo8(-125)
 2128 017c 00C0      		rjmp .L171
 2129               	.L176:
 2130 017e 86E8      		ldi r24,lo8(-122)
 2131               	.L171:
 2132               	.LVL133:
 2133               	.LBB815:
 2134               	.LBB816:
 2135               	.LBB817:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2136               		.loc 2 231 0 discriminator 4
 2137 0180 8EBD      		out 0x2e,r24
 2138               	.L172:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2139               		.loc 2 232 0
 2140 0182 0DB4      		in __tmp_reg__,0x2d
 2141 0184 07FE      		sbrs __tmp_reg__,7
 2142 0186 00C0      		rjmp .L172
 2143               	.LVL134:
 2144               	.LBE817:
 2145               	.LBE816:
 2146               	.LBE815:
 377:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, 0x00);
 2147               		.loc 3 377 0 discriminator 4
 2148 0188 60E0      		ldi r22,0
 2149 018a 70E0      		ldi r23,0
 2150 018c CE01      		movw r24,r28
 2151 018e 0E94 0000 		call Dataflash_SendAddressBytes
 2152               	.LVL135:
 378:Lib/DataflashManager.c **** 	Dataflash_WaitWhileBusy();
 2153               		.loc 3 378 0 discriminator 4
 2154 0192 0E94 0000 		call Dataflash_WaitWhileBusy
 2155               	.LVL136:
 2156               	.LBB818:
 2157               	.LBB819:
 2158               	.LBB820:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2159               		.loc 1 117 0 discriminator 4
 2160 0196 8EB1      		in r24,0xe
 2161 0198 8360      		ori r24,lo8(3)
 2162 019a 8EB9      		out 0xe,r24
 2163               	.LVL137:
 2164               	/* epilogue start */
 2165               	.LBE820:
 2166               	.LBE819:
 2167               	.LBE818:
 379:Lib/DataflashManager.c **** 
 380:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 381:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 382:Lib/DataflashManager.c **** }
 2168               		.loc 3 382 0 discriminator 4
 2169 019c DF91      		pop r29
 2170 019e CF91      		pop r28
 2171               	.LVL138:
 2172 01a0 1F91      		pop r17
 2173 01a2 0F91      		pop r16
 2174               	.LVL139:
 2175 01a4 FF90      		pop r15
 2176 01a6 EF90      		pop r14
 2177 01a8 DF90      		pop r13
 2178 01aa CF90      		pop r12
 2179 01ac BF90      		pop r11
 2180 01ae AF90      		pop r10
 2181 01b0 9F90      		pop r9
 2182 01b2 8F90      		pop r8
 2183               	.LVL140:
 2184 01b4 7F90      		pop r7
 2185 01b6 6F90      		pop r6
 2186 01b8 5F90      		pop r5
 2187               	.LVL141:
 2188 01ba 4F90      		pop r4
 2189               	.LVL142:
 2190 01bc 0895      		ret
 2191               		.cfi_endproc
 2192               	.LFE128:
 2194               		.section	.text.DataflashManager_ReadBlocks_RAM,"ax",@progbits
 2195               	.global	DataflashManager_ReadBlocks_RAM
 2197               	DataflashManager_ReadBlocks_RAM:
 2198               	.LFB129:
 383:Lib/DataflashManager.c **** 
 384:Lib/DataflashManager.c **** /** Reads blocks (OS blocks, not Dataflash pages) from the storage medium, the board Dataflash IC(s
 385:Lib/DataflashManager.c ****  *  the preallocated RAM buffer. This routine reads in Dataflash page sized blocks from the Datafla
 386:Lib/DataflashManager.c ****  *  and writes them in OS sized blocks to the given buffer. This can be linked to FAT libraries to 
 387:Lib/DataflashManager.c ****  *  the files stored on the Dataflash.
 388:Lib/DataflashManager.c ****  *
 389:Lib/DataflashManager.c ****  *  \param[in] BlockAddress  Data block starting address for the read sequence
 390:Lib/DataflashManager.c ****  *  \param[in] TotalBlocks   Number of blocks of data to read
 391:Lib/DataflashManager.c ****  *  \param[out] BufferPtr    Pointer to the data destination RAM buffer
 392:Lib/DataflashManager.c ****  */
 393:Lib/DataflashManager.c **** void DataflashManager_ReadBlocks_RAM(const uint32_t BlockAddress,
 394:Lib/DataflashManager.c ****                                      uint16_t TotalBlocks,
 395:Lib/DataflashManager.c ****                                      uint8_t* BufferPtr)
 396:Lib/DataflashManager.c **** {
 2199               		.loc 3 396 0
 2200               		.cfi_startproc
 2201               	.LVL143:
 2202 0000 4F92      		push r4
 2203               	.LCFI39:
 2204               		.cfi_def_cfa_offset 3
 2205               		.cfi_offset 4, -2
 2206 0002 5F92      		push r5
 2207               	.LCFI40:
 2208               		.cfi_def_cfa_offset 4
 2209               		.cfi_offset 5, -3
 2210 0004 6F92      		push r6
 2211               	.LCFI41:
 2212               		.cfi_def_cfa_offset 5
 2213               		.cfi_offset 6, -4
 2214 0006 7F92      		push r7
 2215               	.LCFI42:
 2216               		.cfi_def_cfa_offset 6
 2217               		.cfi_offset 7, -5
 2218 0008 AF92      		push r10
 2219               	.LCFI43:
 2220               		.cfi_def_cfa_offset 7
 2221               		.cfi_offset 10, -6
 2222 000a BF92      		push r11
 2223               	.LCFI44:
 2224               		.cfi_def_cfa_offset 8
 2225               		.cfi_offset 11, -7
 2226 000c CF92      		push r12
 2227               	.LCFI45:
 2228               		.cfi_def_cfa_offset 9
 2229               		.cfi_offset 12, -8
 2230 000e DF92      		push r13
 2231               	.LCFI46:
 2232               		.cfi_def_cfa_offset 10
 2233               		.cfi_offset 13, -9
 2234 0010 FF92      		push r15
 2235               	.LCFI47:
 2236               		.cfi_def_cfa_offset 11
 2237               		.cfi_offset 15, -10
 2238 0012 0F93      		push r16
 2239               	.LCFI48:
 2240               		.cfi_def_cfa_offset 12
 2241               		.cfi_offset 16, -11
 2242 0014 1F93      		push r17
 2243               	.LCFI49:
 2244               		.cfi_def_cfa_offset 13
 2245               		.cfi_offset 17, -12
 2246 0016 CF93      		push r28
 2247               	.LCFI50:
 2248               		.cfi_def_cfa_offset 14
 2249               		.cfi_offset 28, -13
 2250 0018 DF93      		push r29
 2251               	.LCFI51:
 2252               		.cfi_def_cfa_offset 15
 2253               		.cfi_offset 29, -14
 2254               	/* prologue: function */
 2255               	/* frame size = 0 */
 2256               	/* stack size = 13 */
 2257               	.L__stack_usage = 13
 2258 001a 5A01      		movw r10,r20
 2259 001c 8901      		movw r16,r18
 397:Lib/DataflashManager.c **** 	uint16_t CurrDFPage          = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) / DATAFLASH_PAGE_SIZE);
 2260               		.loc 3 397 0
 2261 001e 2B01      		movw r4,r22
 2262 0020 3C01      		movw r6,r24
 2263 0022 99E0      		ldi r25,9
 2264               		1:
 2265 0024 440C      		lsl r4
 2266 0026 551C      		rol r5
 2267 0028 661C      		rol r6
 2268 002a 771C      		rol r7
 2269 002c 9A95      		dec r25
 2270 002e 01F4      		brne 1b
 2271 0030 2AE0      		ldi r18,10
 2272               		1:
 2273 0032 7694      		lsr r7
 2274 0034 6794      		ror r6
 2275 0036 5794      		ror r5
 2276 0038 4794      		ror r4
 2277 003a 2A95      		dec r18
 2278 003c 01F4      		brne 1b
 2279               	.LVL144:
 2280 003e 6201      		movw r12,r4
 2281               	.LVL145:
 398:Lib/DataflashManager.c **** 	uint16_t CurrDFPageByte      = ((BlockAddress * VIRTUAL_MEMORY_BLOCK_SIZE) % DATAFLASH_PAGE_SIZE);
 2282               		.loc 3 398 0
 2283 0040 EB01      		movw r28,r22
 2284 0042 DC2F      		mov r29,r28
 2285 0044 CC27      		clr r28
 2286 0046 DD0F      		lsl r29
 2287 0048 CC27      		clr r28
 2288 004a D270      		andi r29,2
 2289               	.LVL146:
 399:Lib/DataflashManager.c **** 	uint8_t  CurrDFPageByteDiv16 = (CurrDFPageByte >> 4);
 2290               		.loc 3 399 0
 2291 004c CE01      		movw r24,r28
 2292 004e 44E0      		ldi r20,4
 2293               		1:
 2294 0050 9695      		lsr r25
 2295 0052 8795      		ror r24
 2296 0054 4A95      		dec r20
 2297 0056 01F4      		brne 1b
 2298               	.LVL147:
 2299 0058 F82E      		mov r15,r24
 2300               	.LVL148:
 400:Lib/DataflashManager.c **** 
 401:Lib/DataflashManager.c **** 	/* Select the correct starting Dataflash IC for the block requested */
 402:Lib/DataflashManager.c **** 	Dataflash_SelectChipFromPage(CurrDFPage);
 2301               		.loc 3 402 0
 2302 005a C201      		movw r24,r4
 2303 005c 0E94 0000 		call Dataflash_SelectChipFromPage
 2304               	.LVL149:
 2305               	.LBB821:
 2306               	.LBB822:
 2307               	.LBB823:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2308               		.loc 2 231 0
 2309 0060 82ED      		ldi r24,lo8(-46)
 2310 0062 8EBD      		out 0x2e,r24
 2311               	.L187:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2312               		.loc 2 232 0
 2313 0064 0DB4      		in __tmp_reg__,0x2d
 2314 0066 07FE      		sbrs __tmp_reg__,7
 2315 0068 00C0      		rjmp .L187
 2316               	.LVL150:
 2317               	.LBE823:
 2318               	.LBE822:
 2319               	.LBE821:
 403:Lib/DataflashManager.c **** 
 404:Lib/DataflashManager.c **** 	/* Send the Dataflash main memory page read command */
 405:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 406:Lib/DataflashManager.c **** 	Dataflash_SendAddressBytes(CurrDFPage, CurrDFPageByte);
 2320               		.loc 3 406 0
 2321 006a BE01      		movw r22,r28
 2322 006c C201      		movw r24,r4
 2323 006e 0E94 0000 		call Dataflash_SendAddressBytes
 2324               	.LVL151:
 2325               	.LBB824:
 2326               	.LBB825:
 2327               	.LBB826:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2328               		.loc 2 231 0
 2329 0072 1EBC      		out 0x2e,__zero_reg__
 2330               	.L188:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2331               		.loc 2 232 0
 2332 0074 0DB4      		in __tmp_reg__,0x2d
 2333 0076 07FE      		sbrs __tmp_reg__,7
 2334 0078 00C0      		rjmp .L188
 2335               	.LVL152:
 2336               	.LBE826:
 2337               	.LBE825:
 2338               	.LBE824:
 2339               	.LBB827:
 2340               	.LBB828:
 2341               	.LBB829:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2342               		.loc 2 231 0
 2343 007a 1EBC      		out 0x2e,__zero_reg__
 2344               	.L189:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2345               		.loc 2 232 0
 2346 007c 0DB4      		in __tmp_reg__,0x2d
 2347 007e 07FE      		sbrs __tmp_reg__,7
 2348 0080 00C0      		rjmp .L189
 2349               	.LVL153:
 2350               	.LBE829:
 2351               	.LBE828:
 2352               	.LBE827:
 2353               	.LBB830:
 2354               	.LBB831:
 2355               	.LBB832:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2356               		.loc 2 231 0
 2357 0082 1EBC      		out 0x2e,__zero_reg__
 2358               	.L190:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2359               		.loc 2 232 0
 2360 0084 0DB4      		in __tmp_reg__,0x2d
 2361 0086 07FE      		sbrs __tmp_reg__,7
 2362 0088 00C0      		rjmp .L190
 2363               	.LVL154:
 2364               	.LBE832:
 2365               	.LBE831:
 2366               	.LBE830:
 2367               	.LBB833:
 2368               	.LBB834:
 2369               	.LBB835:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2370               		.loc 2 231 0
 2371 008a 1EBC      		out 0x2e,__zero_reg__
 2372               	.L191:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2373               		.loc 2 232 0
 2374 008c 0DB4      		in __tmp_reg__,0x2d
 2375 008e 07FE      		sbrs __tmp_reg__,7
 2376 0090 00C0      		rjmp .L191
 2377               	.LBE835:
 2378               	.LBE834:
 2379               	.LBE833:
 2380               	.LBB836:
 2381               	.LBB837:
 2382               	.LBB838:
 2383               	.LBB839:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2384               		.loc 2 231 0
 2385 0092 82ED      		ldi r24,lo8(-46)
 2386 0094 782E      		mov r7,r24
 2387               	.LVL155:
 2388               	.L192:
 2389               	.LBE839:
 2390               	.LBE838:
 2391               	.LBE837:
 2392               	.LBE836:
 407:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 408:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 409:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 410:Lib/DataflashManager.c **** 	Dataflash_SendByte(0x00);
 411:Lib/DataflashManager.c **** 
 412:Lib/DataflashManager.c **** 	while (TotalBlocks)
 2393               		.loc 3 412 0
 2394 0096 A114      		cp r10,__zero_reg__
 2395 0098 B104      		cpc r11,__zero_reg__
 2396 009a 01F0      		breq .L202
 2397 009c E801      		movw r28,r16
 2398 009e DE5F      		subi r29,-2
 2399               	.L201:
 2400               	.LBB859:
 413:Lib/DataflashManager.c **** 	{
 414:Lib/DataflashManager.c **** 		uint8_t BytesInBlockDiv16 = 0;
 415:Lib/DataflashManager.c **** 
 416:Lib/DataflashManager.c **** 		/* Write an endpoint packet sized data block to the Dataflash */
 417:Lib/DataflashManager.c **** 		while (BytesInBlockDiv16 < (VIRTUAL_MEMORY_BLOCK_SIZE >> 4))
 418:Lib/DataflashManager.c **** 		{
 419:Lib/DataflashManager.c **** 			/* Check if end of Dataflash page reached */
 420:Lib/DataflashManager.c **** 			if (CurrDFPageByteDiv16 == (DATAFLASH_PAGE_SIZE >> 4))
 2401               		.loc 3 420 0
 2402 00a0 80E4      		ldi r24,lo8(64)
 2403 00a2 F812      		cpse r15,r24
 2404 00a4 00C0      		rjmp .L193
 2405               	.LVL156:
 421:Lib/DataflashManager.c **** 			{
 422:Lib/DataflashManager.c **** 				/* Reset the Dataflash buffer counter, increment the page counter */
 423:Lib/DataflashManager.c **** 				CurrDFPageByteDiv16 = 0;
 424:Lib/DataflashManager.c **** 				CurrDFPage++;
 2406               		.loc 3 424 0
 2407 00a6 8FEF      		ldi r24,-1
 2408 00a8 C81A      		sub r12,r24
 2409 00aa D80A      		sbc r13,r24
 2410               	.LVL157:
 425:Lib/DataflashManager.c **** 
 426:Lib/DataflashManager.c **** 				/* Select the next Dataflash chip based on the new Dataflash page index */
 427:Lib/DataflashManager.c **** 				Dataflash_SelectChipFromPage(CurrDFPage);
 2411               		.loc 3 427 0
 2412 00ac C601      		movw r24,r12
 2413 00ae 0E94 0000 		call Dataflash_SelectChipFromPage
 2414               	.LVL158:
 2415               	.LBB842:
 2416               	.LBB841:
 2417               	.LBB840:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2418               		.loc 2 231 0
 2419 00b2 7EBC      		out 0x2e,r7
 2420               	.L194:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2421               		.loc 2 232 0
 2422 00b4 0DB4      		in __tmp_reg__,0x2d
 2423 00b6 07FE      		sbrs __tmp_reg__,7
 2424 00b8 00C0      		rjmp .L194
 2425               	.LVL159:
 2426               	.LBE840:
 2427               	.LBE841:
 2428               	.LBE842:
 428:Lib/DataflashManager.c **** 
 429:Lib/DataflashManager.c **** 				/* Send the Dataflash main memory page read command */
 430:Lib/DataflashManager.c **** 				Dataflash_SendByte(DF_CMD_MAINMEMPAGEREAD);
 431:Lib/DataflashManager.c **** 				Dataflash_SendAddressBytes(CurrDFPage, 0);
 2429               		.loc 3 431 0
 2430 00ba 60E0      		ldi r22,0
 2431 00bc 70E0      		ldi r23,0
 2432 00be C601      		movw r24,r12
 2433 00c0 0E94 0000 		call Dataflash_SendAddressBytes
 2434               	.LVL160:
 2435               	.LBB843:
 2436               	.LBB844:
 2437               	.LBB845:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2438               		.loc 2 231 0
 2439 00c4 1EBC      		out 0x2e,__zero_reg__
 2440               	.L195:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2441               		.loc 2 232 0
 2442 00c6 0DB4      		in __tmp_reg__,0x2d
 2443 00c8 07FE      		sbrs __tmp_reg__,7
 2444 00ca 00C0      		rjmp .L195
 2445               	.LVL161:
 2446               	.LBE845:
 2447               	.LBE844:
 2448               	.LBE843:
 2449               	.LBB846:
 2450               	.LBB847:
 2451               	.LBB848:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2452               		.loc 2 231 0
 2453 00cc 1EBC      		out 0x2e,__zero_reg__
 2454               	.L196:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2455               		.loc 2 232 0
 2456 00ce 0DB4      		in __tmp_reg__,0x2d
 2457 00d0 07FE      		sbrs __tmp_reg__,7
 2458 00d2 00C0      		rjmp .L196
 2459               	.LVL162:
 2460               	.LBE848:
 2461               	.LBE847:
 2462               	.LBE846:
 2463               	.LBB849:
 2464               	.LBB850:
 2465               	.LBB851:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2466               		.loc 2 231 0
 2467 00d4 1EBC      		out 0x2e,__zero_reg__
 2468               	.L197:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2469               		.loc 2 232 0
 2470 00d6 0DB4      		in __tmp_reg__,0x2d
 2471 00d8 07FE      		sbrs __tmp_reg__,7
 2472 00da 00C0      		rjmp .L197
 2473               	.LVL163:
 2474               	.LBE851:
 2475               	.LBE850:
 2476               	.LBE849:
 2477               	.LBB852:
 2478               	.LBB853:
 2479               	.LBB854:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2480               		.loc 2 231 0
 2481 00dc 1EBC      		out 0x2e,__zero_reg__
 2482               	.L198:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2483               		.loc 2 232 0
 2484 00de 0DB4      		in __tmp_reg__,0x2d
 2485 00e0 07FE      		sbrs __tmp_reg__,7
 2486 00e2 00C0      		rjmp .L198
 2487               	.LBE854:
 2488               	.LBE853:
 2489               	.LBE852:
 423:Lib/DataflashManager.c **** 				CurrDFPage++;
 2490               		.loc 3 423 0
 2491 00e4 F12C      		mov r15,__zero_reg__
 2492               	.LVL164:
 2493               	.L193:
 2494 00e6 F801      		movw r30,r16
 2495 00e8 005F      		subi r16,-16
 2496 00ea 1F4F      		sbci r17,-1
 2497               	.LVL165:
 2498               	.L200:
 2499               	.LBB855:
 2500               	.LBB856:
 2501               	.LBB857:
 2502               	.LBB858:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2503               		.loc 2 243 0 discriminator 3
 2504 00ec 1EBC      		out 0x2e,__zero_reg__
 2505               	.L199:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2506               		.loc 2 244 0
 2507 00ee 0DB4      		in __tmp_reg__,0x2d
 2508 00f0 07FE      		sbrs __tmp_reg__,7
 2509 00f2 00C0      		rjmp .L199
 2510               		.loc 2 245 0
 2511 00f4 8EB5      		in r24,0x2e
 2512               	.LBE858:
 2513               	.LBE857:
 2514               	.LBE856:
 432:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 433:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 434:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 435:Lib/DataflashManager.c **** 				Dataflash_SendByte(0x00);
 436:Lib/DataflashManager.c **** 			}
 437:Lib/DataflashManager.c **** 
 438:Lib/DataflashManager.c **** 			/* Read one 16-byte chunk of data from the Dataflash */
 439:Lib/DataflashManager.c **** 			for (uint8_t ByteNum = 0; ByteNum < 16; ByteNum++)
 440:Lib/DataflashManager.c **** 			  *(BufferPtr++) = Dataflash_ReceiveByte();
 2515               		.loc 3 440 0
 2516 00f6 8193      		st Z+,r24
 2517               	.LVL166:
 439:Lib/DataflashManager.c **** 			  *(BufferPtr++) = Dataflash_ReceiveByte();
 2518               		.loc 3 439 0
 2519 00f8 E017      		cp r30,r16
 2520 00fa F107      		cpc r31,r17
 2521 00fc 01F4      		brne .L200
 2522               	.LBE855:
 441:Lib/DataflashManager.c **** 
 442:Lib/DataflashManager.c **** 			/* Increment the Dataflash page 16 byte block counter */
 443:Lib/DataflashManager.c **** 			CurrDFPageByteDiv16++;
 2523               		.loc 3 443 0
 2524 00fe F394      		inc r15
 2525               	.LVL167:
 417:Lib/DataflashManager.c **** 		{
 2526               		.loc 3 417 0
 2527 0100 C017      		cp r28,r16
 2528 0102 D107      		cpc r29,r17
 2529 0104 01F4      		brne .L201
 444:Lib/DataflashManager.c **** 
 445:Lib/DataflashManager.c **** 			/* Increment the block 16 byte block counter */
 446:Lib/DataflashManager.c **** 			BytesInBlockDiv16++;
 447:Lib/DataflashManager.c **** 		}
 448:Lib/DataflashManager.c **** 
 449:Lib/DataflashManager.c **** 		/* Decrement the blocks remaining counter */
 450:Lib/DataflashManager.c **** 		TotalBlocks--;
 2530               		.loc 3 450 0
 2531 0106 81E0      		ldi r24,1
 2532 0108 A81A      		sub r10,r24
 2533 010a B108      		sbc r11,__zero_reg__
 2534               	.LVL168:
 2535 010c 00C0      		rjmp .L192
 2536               	.LVL169:
 2537               	.L202:
 2538               	.LBE859:
 2539               	.LBB860:
 2540               	.LBB861:
 2541               	.LBB862:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2542               		.loc 1 117 0
 2543 010e 8EB1      		in r24,0xe
 2544 0110 8360      		ori r24,lo8(3)
 2545 0112 8EB9      		out 0xe,r24
 2546               	.LVL170:
 2547               	/* epilogue start */
 2548               	.LBE862:
 2549               	.LBE861:
 2550               	.LBE860:
 451:Lib/DataflashManager.c **** 	}
 452:Lib/DataflashManager.c **** 
 453:Lib/DataflashManager.c **** 	/* Deselect all Dataflash chips */
 454:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 455:Lib/DataflashManager.c **** }
 2551               		.loc 3 455 0
 2552 0114 DF91      		pop r29
 2553 0116 CF91      		pop r28
 2554 0118 1F91      		pop r17
 2555 011a 0F91      		pop r16
 2556               	.LVL171:
 2557 011c FF90      		pop r15
 2558               	.LVL172:
 2559 011e DF90      		pop r13
 2560 0120 CF90      		pop r12
 2561               	.LVL173:
 2562 0122 BF90      		pop r11
 2563 0124 AF90      		pop r10
 2564               	.LVL174:
 2565 0126 7F90      		pop r7
 2566 0128 6F90      		pop r6
 2567 012a 5F90      		pop r5
 2568 012c 4F90      		pop r4
 2569 012e 0895      		ret
 2570               		.cfi_endproc
 2571               	.LFE129:
 2573               		.section	.text.DataflashManager_ResetDataflashProtections,"ax",@progbits
 2574               	.global	DataflashManager_ResetDataflashProtections
 2576               	DataflashManager_ResetDataflashProtections:
 2577               	.LFB130:
 456:Lib/DataflashManager.c **** 
 457:Lib/DataflashManager.c **** /** Disables the Dataflash memory write protection bits on the board Dataflash ICs, if enabled. */
 458:Lib/DataflashManager.c **** void DataflashManager_ResetDataflashProtections(void)
 459:Lib/DataflashManager.c **** {
 2578               		.loc 3 459 0
 2579               		.cfi_startproc
 2580               	/* prologue: function */
 2581               	/* frame size = 0 */
 2582               	/* stack size = 0 */
 2583               	.L__stack_usage = 0
 2584               	.LVL175:
 2585               	.LBB863:
 2586               	.LBB864:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2587               		.loc 1 117 0
 2588 0000 8EB1      		in r24,0xe
 2589 0002 8C7F      		andi r24,lo8(-4)
 2590 0004 8260      		ori r24,lo8(2)
 2591 0006 8EB9      		out 0xe,r24
 2592               	.LVL176:
 2593               	.LBE864:
 2594               	.LBE863:
 2595               	.LBB865:
 2596               	.LBB866:
 2597               	.LBB867:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2598               		.loc 2 231 0
 2599 0008 87ED      		ldi r24,lo8(-41)
 2600 000a 8EBD      		out 0x2e,r24
 2601               	.L217:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2602               		.loc 2 232 0
 2603 000c 0DB4      		in __tmp_reg__,0x2d
 2604 000e 07FE      		sbrs __tmp_reg__,7
 2605 0010 00C0      		rjmp .L217
 2606               	.LVL177:
 2607               	.LBE867:
 2608               	.LBE866:
 2609               	.LBE865:
 2610               	.LBB868:
 2611               	.LBB869:
 2612               	.LBB870:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2613               		.loc 2 243 0
 2614 0012 1EBC      		out 0x2e,__zero_reg__
 2615               	.L218:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2616               		.loc 2 244 0
 2617 0014 0DB4      		in __tmp_reg__,0x2d
 2618 0016 07FE      		sbrs __tmp_reg__,7
 2619 0018 00C0      		rjmp .L218
 2620               	.LBE870:
 2621               	.LBE869:
 2622               	.LBE868:
 460:Lib/DataflashManager.c **** 	/* Select first Dataflash chip, send the read status register command */
 461:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP1);
 462:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_GETSTATUS);
 463:Lib/DataflashManager.c **** 
 464:Lib/DataflashManager.c **** 	/* Check if sector protection is enabled */
 465:Lib/DataflashManager.c **** 	if (Dataflash_ReceiveByte() & DF_STATUS_SECTORPROTECTION_ON)
 2623               		.loc 3 465 0
 2624 001a 0EB4      		in __tmp_reg__,0x2e
 2625 001c 01FC      		sbrc __tmp_reg__,1
 2626 001e 00C0      		rjmp .L219
 2627               	.L225:
 2628               	.LVL178:
 2629               	.LBB871:
 2630               	.LBB872:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2631               		.loc 1 117 0
 2632 0020 8EB1      		in r24,0xe
 2633 0022 8C7F      		andi r24,lo8(-4)
 2634 0024 8160      		ori r24,lo8(1)
 2635 0026 8EB9      		out 0xe,r24
 2636               	.LVL179:
 2637               	.LBE872:
 2638               	.LBE871:
 2639               	.LBB873:
 2640               	.LBB874:
 2641               	.LBB875:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2642               		.loc 2 231 0
 2643 0028 87ED      		ldi r24,lo8(-41)
 2644 002a 8EBD      		out 0x2e,r24
 2645 002c 00C0      		rjmp .L220
 2646               	.LVL180:
 2647               	.L219:
 2648               	.LBE875:
 2649               	.LBE874:
 2650               	.LBE873:
 466:Lib/DataflashManager.c **** 	{
 467:Lib/DataflashManager.c **** 		Dataflash_ToggleSelectedChipCS();
 2651               		.loc 3 467 0
 2652 002e 0E94 0000 		call Dataflash_ToggleSelectedChipCS
 2653               	.LVL181:
 2654               	.LBB878:
 2655               	.LBB879:
 2656               	.LBB880:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2657               		.loc 2 231 0
 2658 0032 8DE3      		ldi r24,lo8(61)
 2659 0034 8EBD      		out 0x2e,r24
 2660               	.L221:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2661               		.loc 2 232 0
 2662 0036 0DB4      		in __tmp_reg__,0x2d
 2663 0038 07FE      		sbrs __tmp_reg__,7
 2664 003a 00C0      		rjmp .L221
 2665               	.LVL182:
 2666               	.LBE880:
 2667               	.LBE879:
 2668               	.LBE878:
 2669               	.LBB881:
 2670               	.LBB882:
 2671               	.LBB883:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2672               		.loc 2 231 0
 2673 003c 8AE2      		ldi r24,lo8(42)
 2674 003e 8EBD      		out 0x2e,r24
 2675               	.L222:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2676               		.loc 2 232 0
 2677 0040 0DB4      		in __tmp_reg__,0x2d
 2678 0042 07FE      		sbrs __tmp_reg__,7
 2679 0044 00C0      		rjmp .L222
 2680               	.LVL183:
 2681               	.LBE883:
 2682               	.LBE882:
 2683               	.LBE881:
 2684               	.LBB884:
 2685               	.LBB885:
 2686               	.LBB886:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2687               		.loc 2 231 0
 2688 0046 8FE7      		ldi r24,lo8(127)
 2689 0048 8EBD      		out 0x2e,r24
 2690               	.L223:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2691               		.loc 2 232 0
 2692 004a 0DB4      		in __tmp_reg__,0x2d
 2693 004c 07FE      		sbrs __tmp_reg__,7
 2694 004e 00C0      		rjmp .L223
 2695               	.LVL184:
 2696               	.LBE886:
 2697               	.LBE885:
 2698               	.LBE884:
 2699               	.LBB887:
 2700               	.LBB888:
 2701               	.LBB889:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2702               		.loc 2 231 0
 2703 0050 8AE9      		ldi r24,lo8(-102)
 2704 0052 8EBD      		out 0x2e,r24
 2705               	.L224:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2706               		.loc 2 232 0
 2707 0054 0DB4      		in __tmp_reg__,0x2d
 2708 0056 07FE      		sbrs __tmp_reg__,7
 2709 0058 00C0      		rjmp .L224
 2710 005a 00C0      		rjmp .L225
 2711               	.LVL185:
 2712               	.L220:
 2713               	.LBE889:
 2714               	.LBE888:
 2715               	.LBE887:
 2716               	.LBB890:
 2717               	.LBB877:
 2718               	.LBB876:
 2719 005c 0DB4      		in __tmp_reg__,0x2d
 2720 005e 07FE      		sbrs __tmp_reg__,7
 2721 0060 00C0      		rjmp .L220
 2722               	.LVL186:
 2723               	.LBE876:
 2724               	.LBE877:
 2725               	.LBE890:
 2726               	.LBB891:
 2727               	.LBB892:
 2728               	.LBB893:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2729               		.loc 2 243 0
 2730 0062 1EBC      		out 0x2e,__zero_reg__
 2731               	.L226:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2732               		.loc 2 244 0
 2733 0064 0DB4      		in __tmp_reg__,0x2d
 2734 0066 07FE      		sbrs __tmp_reg__,7
 2735 0068 00C0      		rjmp .L226
 2736               	.LBE893:
 2737               	.LBE892:
 2738               	.LBE891:
 468:Lib/DataflashManager.c **** 
 469:Lib/DataflashManager.c **** 		/* Send the commands to disable sector protection */
 470:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[0]);
 471:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[1]);
 472:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[2]);
 473:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[3]);
 474:Lib/DataflashManager.c **** 	}
 475:Lib/DataflashManager.c **** 
 476:Lib/DataflashManager.c **** 	/* Select second Dataflash chip (if present on selected board), send read status register command 
 477:Lib/DataflashManager.c **** 	#if (DATAFLASH_TOTALCHIPS == 2)
 478:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP2);
 479:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_GETSTATUS);
 480:Lib/DataflashManager.c **** 
 481:Lib/DataflashManager.c **** 	/* Check if sector protection is enabled */
 482:Lib/DataflashManager.c **** 	if (Dataflash_ReceiveByte() & DF_STATUS_SECTORPROTECTION_ON)
 2739               		.loc 3 482 0
 2740 006a 0EB4      		in __tmp_reg__,0x2e
 2741 006c 01FC      		sbrc __tmp_reg__,1
 2742 006e 00C0      		rjmp .L227
 2743               	.L232:
 2744               	.LVL187:
 2745               	.LBB894:
 2746               	.LBB895:
 2747               	.LBB896:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2748               		.loc 1 117 0
 2749 0070 8EB1      		in r24,0xe
 2750 0072 8360      		ori r24,lo8(3)
 2751 0074 8EB9      		out 0xe,r24
 2752               	.LVL188:
 2753               	.LBE896:
 2754               	.LBE895:
 2755               	.LBE894:
 483:Lib/DataflashManager.c **** 	{
 484:Lib/DataflashManager.c **** 		Dataflash_ToggleSelectedChipCS();
 485:Lib/DataflashManager.c **** 
 486:Lib/DataflashManager.c **** 		/* Send the commands to disable sector protection */
 487:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[0]);
 488:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[1]);
 489:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[2]);
 490:Lib/DataflashManager.c **** 		Dataflash_SendByte(DF_CMD_SECTORPROTECTIONOFF[3]);
 491:Lib/DataflashManager.c **** 	}
 492:Lib/DataflashManager.c **** 	#endif
 493:Lib/DataflashManager.c **** 
 494:Lib/DataflashManager.c **** 	/* Deselect current Dataflash chip */
 495:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 496:Lib/DataflashManager.c **** }
 2756               		.loc 3 496 0
 2757 0076 0895      		ret
 2758               	.L227:
 484:Lib/DataflashManager.c **** 
 2759               		.loc 3 484 0
 2760 0078 0E94 0000 		call Dataflash_ToggleSelectedChipCS
 2761               	.LVL189:
 2762               	.LBB897:
 2763               	.LBB898:
 2764               	.LBB899:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2765               		.loc 2 231 0
 2766 007c 8DE3      		ldi r24,lo8(61)
 2767 007e 8EBD      		out 0x2e,r24
 2768               	.L228:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2769               		.loc 2 232 0
 2770 0080 0DB4      		in __tmp_reg__,0x2d
 2771 0082 07FE      		sbrs __tmp_reg__,7
 2772 0084 00C0      		rjmp .L228
 2773               	.LVL190:
 2774               	.LBE899:
 2775               	.LBE898:
 2776               	.LBE897:
 2777               	.LBB900:
 2778               	.LBB901:
 2779               	.LBB902:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2780               		.loc 2 231 0
 2781 0086 8AE2      		ldi r24,lo8(42)
 2782 0088 8EBD      		out 0x2e,r24
 2783               	.L229:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2784               		.loc 2 232 0
 2785 008a 0DB4      		in __tmp_reg__,0x2d
 2786 008c 07FE      		sbrs __tmp_reg__,7
 2787 008e 00C0      		rjmp .L229
 2788               	.LVL191:
 2789               	.LBE902:
 2790               	.LBE901:
 2791               	.LBE900:
 2792               	.LBB903:
 2793               	.LBB904:
 2794               	.LBB905:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2795               		.loc 2 231 0
 2796 0090 8FE7      		ldi r24,lo8(127)
 2797 0092 8EBD      		out 0x2e,r24
 2798               	.L230:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2799               		.loc 2 232 0
 2800 0094 0DB4      		in __tmp_reg__,0x2d
 2801 0096 07FE      		sbrs __tmp_reg__,7
 2802 0098 00C0      		rjmp .L230
 2803               	.LVL192:
 2804               	.LBE905:
 2805               	.LBE904:
 2806               	.LBE903:
 2807               	.LBB906:
 2808               	.LBB907:
 2809               	.LBB908:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2810               		.loc 2 231 0
 2811 009a 8AE9      		ldi r24,lo8(-102)
 2812 009c 8EBD      		out 0x2e,r24
 2813               	.L231:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2814               		.loc 2 232 0
 2815 009e 0DB4      		in __tmp_reg__,0x2d
 2816 00a0 07FE      		sbrs __tmp_reg__,7
 2817 00a2 00C0      		rjmp .L231
 2818 00a4 00C0      		rjmp .L232
 2819               	.LBE908:
 2820               	.LBE907:
 2821               	.LBE906:
 2822               		.cfi_endproc
 2823               	.LFE130:
 2825               		.section	.text.DataflashManager_CheckDataflashOperation,"ax",@progbits
 2826               	.global	DataflashManager_CheckDataflashOperation
 2828               	DataflashManager_CheckDataflashOperation:
 2829               	.LFB131:
 497:Lib/DataflashManager.c **** 
 498:Lib/DataflashManager.c **** /** Performs a simple test on the attached Dataflash IC(s) to ensure that they are working.
 499:Lib/DataflashManager.c ****  *
 500:Lib/DataflashManager.c ****  *  \return Boolean true if all media chips are working, false otherwise
 501:Lib/DataflashManager.c ****  */
 502:Lib/DataflashManager.c **** bool DataflashManager_CheckDataflashOperation(void)
 503:Lib/DataflashManager.c **** {
 2830               		.loc 3 503 0
 2831               		.cfi_startproc
 2832               	/* prologue: function */
 2833               	/* frame size = 0 */
 2834               	/* stack size = 0 */
 2835               	.L__stack_usage = 0
 2836               	.LVL193:
 2837               	.LBB909:
 2838               	.LBB910:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2839               		.loc 1 117 0
 2840 0000 8EB1      		in r24,0xe
 2841 0002 8C7F      		andi r24,lo8(-4)
 2842 0004 8260      		ori r24,lo8(2)
 2843 0006 8EB9      		out 0xe,r24
 2844               	.LVL194:
 2845               	.LBE910:
 2846               	.LBE909:
 2847               	.LBB911:
 2848               	.LBB912:
 2849               	.LBB913:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2850               		.loc 2 231 0
 2851 0008 8FE9      		ldi r24,lo8(-97)
 2852 000a 8EBD      		out 0x2e,r24
 2853               	.L247:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2854               		.loc 2 232 0
 2855 000c 0DB4      		in __tmp_reg__,0x2d
 2856 000e 07FE      		sbrs __tmp_reg__,7
 2857 0010 00C0      		rjmp .L247
 2858               	.LVL195:
 2859               	.LBE913:
 2860               	.LBE912:
 2861               	.LBE911:
 2862               	.LBB914:
 2863               	.LBB915:
 2864               	.LBB916:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2865               		.loc 2 243 0
 2866 0012 1EBC      		out 0x2e,__zero_reg__
 2867               	.L248:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2868               		.loc 2 244 0
 2869 0014 0DB4      		in __tmp_reg__,0x2d
 2870 0016 07FE      		sbrs __tmp_reg__,7
 2871 0018 00C0      		rjmp .L248
 2872               		.loc 2 245 0
 2873 001a 9EB5      		in r25,0x2e
 2874               	.LVL196:
 2875               	.LBE916:
 2876               	.LBE915:
 2877               	.LBE914:
 2878               	.LBB917:
 2879               	.LBB918:
 2880               	.LBB919:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2881               		.loc 1 117 0
 2882 001c 8EB1      		in r24,0xe
 2883 001e 8360      		ori r24,lo8(3)
 2884 0020 8EB9      		out 0xe,r24
 2885               	.LVL197:
 2886               	.LBE919:
 2887               	.LBE918:
 2888               	.LBE917:
 504:Lib/DataflashManager.c **** 	uint8_t ReturnByte;
 505:Lib/DataflashManager.c **** 
 506:Lib/DataflashManager.c **** 	/* Test first Dataflash IC is present and responding to commands */
 507:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP1);
 508:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_READMANUFACTURERDEVICEINFO);
 509:Lib/DataflashManager.c **** 	ReturnByte = Dataflash_ReceiveByte();
 510:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 511:Lib/DataflashManager.c **** 
 512:Lib/DataflashManager.c **** 	/* If returned data is invalid, fail the command */
 513:Lib/DataflashManager.c **** 	if (ReturnByte != DF_MANUFACTURER_ATMEL)
 2889               		.loc 3 513 0
 2890 0022 9F31      		cpi r25,lo8(31)
 2891 0024 01F4      		brne .L253
 2892               	.LVL198:
 2893               	.LBB920:
 2894               	.LBB921:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2895               		.loc 1 117 0
 2896 0026 8EB1      		in r24,0xe
 2897 0028 8C7F      		andi r24,lo8(-4)
 2898 002a 8160      		ori r24,lo8(1)
 2899 002c 8EB9      		out 0xe,r24
 2900               	.LVL199:
 2901               	.LBE921:
 2902               	.LBE920:
 2903               	.LBB922:
 2904               	.LBB923:
 2905               	.LBB924:
 231:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2906               		.loc 2 231 0
 2907 002e 8FE9      		ldi r24,lo8(-97)
 2908 0030 8EBD      		out 0x2e,r24
 2909               	.L250:
 232:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 			}
 2910               		.loc 2 232 0
 2911 0032 0DB4      		in __tmp_reg__,0x2d
 2912 0034 07FE      		sbrs __tmp_reg__,7
 2913 0036 00C0      		rjmp .L250
 2914               	.LVL200:
 2915               	.LBE924:
 2916               	.LBE923:
 2917               	.LBE922:
 2918               	.LBB925:
 2919               	.LBB926:
 2920               	.LBB927:
 243:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				while (!(SPSR & (1 << SPIF)));
 2921               		.loc 2 243 0
 2922 0038 1EBC      		out 0x2e,__zero_reg__
 2923               	.L251:
 244:../../../../LUFA/Drivers/Board/../Peripheral/AVR8/SPI_AVR8.h **** 				return SPDR;
 2924               		.loc 2 244 0
 2925 003a 0DB4      		in __tmp_reg__,0x2d
 2926 003c 07FE      		sbrs __tmp_reg__,7
 2927 003e 00C0      		rjmp .L251
 2928               		.loc 2 245 0
 2929 0040 9EB5      		in r25,0x2e
 2930               	.LVL201:
 2931               	.LBE927:
 2932               	.LBE926:
 2933               	.LBE925:
 2934               	.LBB928:
 2935               	.LBB929:
 2936               	.LBB930:
 117:../../../../LUFA/Drivers/Board/AVR8/USBKEY/Dataflash.h **** 			}
 2937               		.loc 1 117 0
 2938 0042 8EB1      		in r24,0xe
 2939 0044 8360      		ori r24,lo8(3)
 2940 0046 8EB9      		out 0xe,r24
 2941               	.LVL202:
 2942               	.LBE930:
 2943               	.LBE929:
 2944               	.LBE928:
 514:Lib/DataflashManager.c **** 	  return false;
 515:Lib/DataflashManager.c **** 
 516:Lib/DataflashManager.c **** 	#if (DATAFLASH_TOTALCHIPS == 2)
 517:Lib/DataflashManager.c **** 	/* Test second Dataflash IC is present and responding to commands */
 518:Lib/DataflashManager.c **** 	Dataflash_SelectChip(DATAFLASH_CHIP2);
 519:Lib/DataflashManager.c **** 	Dataflash_SendByte(DF_CMD_READMANUFACTURERDEVICEINFO);
 520:Lib/DataflashManager.c **** 	ReturnByte = Dataflash_ReceiveByte();
 521:Lib/DataflashManager.c **** 	Dataflash_DeselectChip();
 522:Lib/DataflashManager.c **** 
 523:Lib/DataflashManager.c **** 	/* If returned data is invalid, fail the command */
 524:Lib/DataflashManager.c **** 	if (ReturnByte != DF_MANUFACTURER_ATMEL)
 2945               		.loc 3 524 0
 2946 0048 81E0      		ldi r24,lo8(1)
 2947 004a 9F31      		cpi r25,lo8(31)
 2948 004c 01F0      		breq .L249
 2949               	.L253:
 514:Lib/DataflashManager.c **** 	  return false;
 2950               		.loc 3 514 0
 2951 004e 80E0      		ldi r24,0
 2952               	.L249:
 525:Lib/DataflashManager.c **** 	  return false;
 526:Lib/DataflashManager.c **** 	#endif
 527:Lib/DataflashManager.c **** 
 528:Lib/DataflashManager.c **** 	return true;
 529:Lib/DataflashManager.c **** }
 2953               		.loc 3 529 0
 2954 0050 0895      		ret
 2955               		.cfi_endproc
 2956               	.LFE131:
 2958               		.text
 2959               	.Letext0:
 2960               		.file 5 "/usr/lib/avr/include/stdint.h"
 2961               		.file 6 "../../../../LUFA/Drivers/Board/Dataflash.h"
 2962               		.file 7 "../../../../LUFA/Drivers/USB/Core/USBTask.h"
 2963               		.file 8 "./MassStorage.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 DataflashManager.c
     /tmp/cc8KZ147.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc8KZ147.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc8KZ147.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc8KZ147.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc8KZ147.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc8KZ147.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc8KZ147.s:13     .text.Dataflash_ToggleSelectedChipCS:0000000000000000 Dataflash_ToggleSelectedChipCS
     /tmp/cc8KZ147.s:55     .text.Dataflash_WaitWhileBusy:0000000000000000 Dataflash_WaitWhileBusy
     /tmp/cc8KZ147.s:107    .text.Dataflash_SendAddressBytes:0000000000000000 Dataflash_SendAddressBytes
     /tmp/cc8KZ147.s:184    .text.Dataflash_SelectChipFromPage:0000000000000000 Dataflash_SelectChipFromPage
     /tmp/cc8KZ147.s:252    .text.DataflashManager_WriteBlocks:0000000000000000 DataflashManager_WriteBlocks
     /tmp/cc8KZ147.s:1012   .text.DataflashManager_ReadBlocks:0000000000000000 DataflashManager_ReadBlocks
     /tmp/cc8KZ147.s:1743   .text.DataflashManager_WriteBlocks_RAM:0000000000000000 DataflashManager_WriteBlocks_RAM
     /tmp/cc8KZ147.s:2197   .text.DataflashManager_ReadBlocks_RAM:0000000000000000 DataflashManager_ReadBlocks_RAM
     /tmp/cc8KZ147.s:2576   .text.DataflashManager_ResetDataflashProtections:0000000000000000 DataflashManager_ResetDataflashProtections
     /tmp/cc8KZ147.s:2828   .text.DataflashManager_CheckDataflashOperation:0000000000000000 DataflashManager_CheckDataflashOperation

UNDEFINED SYMBOLS
Endpoint_WaitUntilReady
IsMassStoreReset
